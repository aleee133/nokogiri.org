{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"index.html","text":"Nokogiri Description Nokogiri (\u92f8) is an HTML, XML, SAX, and Reader parser. Among Nokogiri's many features is the ability to search documents via XPath or CSS3 selectors. Links http://nokogiri.org Installation Help Tutorials GitHub Mailing List Bug Reports Chat/Gitter Features XML/HTML DOM parser which handles broken HTML XML/HTML SAX parser XML/HTML Push parser XPath 1.0 support for document searching CSS3 selector support for document searching XML/HTML builder XSLT transformer Nokogiri parses and searches XML/HTML using native libraries (either C or Java, depending on your Ruby), which means it's fast and standards-compliant. Installation If this doesn't work: gem install nokogiri then please start troubleshooting here: http://www.nokogiri.org/tutorials/installing_nokogiri.html There are currently 1,237 Stack Overflow questions about Nokogiri installation. The vast majority of them are out of date and therefore incorrect. Please do not use Stack Overflow. Instead, tell us when the above instructions don't work for you. This allows us to both help you directly and improve the documentation. Binary packages Binary packages are available for some distributions. Debian: https://packages.debian.org/sid/ruby-nokogiri SuSE: https://download.opensuse.org/repositories/devel:/languages:/ruby:/extensions/ Fedora: http://s390.koji.fedoraproject.org/koji/packageinfo?packageID=6756 Support There are open-source tutorials (to which we invite contributions!) here: http://nokogiri.org/tutorials The Nokogiri mailing list is active: https://groups.google.com/group/nokogiri-talk The Nokogiri bug tracker is here: https://github.com/sparklemotion/nokogiri/issues Before filing a bug report, please read our submission guidelines: http://nokogiri.org/tutorials/getting_help.html The IRC channel is #nokogiri on freenode. Consider subscribing to Tidelift which provides license assurances and timely security notifications for your open source dependencies, including Nokogiri. Tidelift subscriptions also help the Nokogiri maintainers fund our automated testing which in turn allows us to ship releases, bugfixes, and security updates more often. Security and Vulnerability Reporting Please report vulnerabilities at https://hackerone.com/nokogiri Full information and description of our security policy is in SECURITY.md Synopsis Nokogiri is a large library, but here is example usage for parsing and examining a document: #! /usr/bin/env ruby require nokogiri require open-uri # Fetch and parse HTML document doc = Nokogiri :: HTML ( open ( http://www.nokogiri.org/tutorials/installing_nokogiri.html )) puts ### Search for nodes by css doc . css ( nav ul.menu li a , article h2 ) . each do | link | puts link . content end puts ### Search for nodes by xpath doc . xpath ( //nav//ul//li/a , //article//h2 ) . each do | link | puts link . content end puts ### Or mix and match. doc . search ( nav ul.menu li a , //article//h2 ) . each do | link | puts link . content end Requirements Ruby 2.3.0 or higher, including any development packages necessary to compile native extensions. In Nokogiri 1.6.0 and later libxml2 and libxslt are bundled with the gem, but if you want to use the system versions: First, check out the long list of fixes and changes between releases before deciding to use any version older than is bundled with Nokogiri. At install time, set the environment variable NOKOGIRI_USE_SYSTEM_LIBRARIES or else use the --use-system-libraries argument. (See http://nokogiri.org/tutorials/installing_nokogiri.html#using_your_system_libraries for specifics.) libxml2 =2.6.21 with iconv support (libxml2-dev/-devel is also required) libxslt, built with and supported by the given libxml2 (libxslt-dev/-devel is also required) Encoding Strings are always stored as UTF-8 internally. Methods that return text values will always return UTF-8 encoded strings. Methods that return a string containing markup (like to_xml , to_html and inner_html ) will return a string encoded like the source document. WARNING Some documents declare one encoding, but actually use a different one. In these cases, which encoding should the parser choose? Data is just a stream of bytes. Humans add meaning to that stream. Any particular set of bytes could be valid characters in multiple encodings, so detecting encoding with 100% accuracy is not possible. libxml2 does its best, but it can't be right all the time. If you want Nokogiri to handle the document encoding properly, your best bet is to explicitly set the encoding. Here is an example of explicitly setting the encoding to EUC-JP on the parser: doc = Nokogiri . XML ( foo bar / /foo , nil , EUC-JP ) Development bundle install bundle exec rake License This project is licensed under the terms of the MIT license. See this license at LICENSE.md .","title":"Readme"},{"location":"index.html#nokogiri","text":"","title":"Nokogiri"},{"location":"index.html#description","text":"Nokogiri (\u92f8) is an HTML, XML, SAX, and Reader parser. Among Nokogiri's many features is the ability to search documents via XPath or CSS3 selectors.","title":"Description"},{"location":"index.html#links","text":"http://nokogiri.org Installation Help Tutorials GitHub Mailing List Bug Reports Chat/Gitter","title":"Links"},{"location":"index.html#features","text":"XML/HTML DOM parser which handles broken HTML XML/HTML SAX parser XML/HTML Push parser XPath 1.0 support for document searching CSS3 selector support for document searching XML/HTML builder XSLT transformer Nokogiri parses and searches XML/HTML using native libraries (either C or Java, depending on your Ruby), which means it's fast and standards-compliant.","title":"Features"},{"location":"index.html#installation","text":"If this doesn't work: gem install nokogiri then please start troubleshooting here: http://www.nokogiri.org/tutorials/installing_nokogiri.html There are currently 1,237 Stack Overflow questions about Nokogiri installation. The vast majority of them are out of date and therefore incorrect. Please do not use Stack Overflow. Instead, tell us when the above instructions don't work for you. This allows us to both help you directly and improve the documentation.","title":"Installation"},{"location":"index.html#binary-packages","text":"Binary packages are available for some distributions. Debian: https://packages.debian.org/sid/ruby-nokogiri SuSE: https://download.opensuse.org/repositories/devel:/languages:/ruby:/extensions/ Fedora: http://s390.koji.fedoraproject.org/koji/packageinfo?packageID=6756","title":"Binary packages"},{"location":"index.html#support","text":"There are open-source tutorials (to which we invite contributions!) here: http://nokogiri.org/tutorials The Nokogiri mailing list is active: https://groups.google.com/group/nokogiri-talk The Nokogiri bug tracker is here: https://github.com/sparklemotion/nokogiri/issues Before filing a bug report, please read our submission guidelines: http://nokogiri.org/tutorials/getting_help.html The IRC channel is #nokogiri on freenode. Consider subscribing to Tidelift which provides license assurances and timely security notifications for your open source dependencies, including Nokogiri. Tidelift subscriptions also help the Nokogiri maintainers fund our automated testing which in turn allows us to ship releases, bugfixes, and security updates more often.","title":"Support"},{"location":"index.html#security-and-vulnerability-reporting","text":"Please report vulnerabilities at https://hackerone.com/nokogiri Full information and description of our security policy is in SECURITY.md","title":"Security and Vulnerability Reporting"},{"location":"index.html#synopsis","text":"Nokogiri is a large library, but here is example usage for parsing and examining a document: #! /usr/bin/env ruby require nokogiri require open-uri # Fetch and parse HTML document doc = Nokogiri :: HTML ( open ( http://www.nokogiri.org/tutorials/installing_nokogiri.html )) puts ### Search for nodes by css doc . css ( nav ul.menu li a , article h2 ) . each do | link | puts link . content end puts ### Search for nodes by xpath doc . xpath ( //nav//ul//li/a , //article//h2 ) . each do | link | puts link . content end puts ### Or mix and match. doc . search ( nav ul.menu li a , //article//h2 ) . each do | link | puts link . content end","title":"Synopsis"},{"location":"index.html#requirements","text":"Ruby 2.3.0 or higher, including any development packages necessary to compile native extensions. In Nokogiri 1.6.0 and later libxml2 and libxslt are bundled with the gem, but if you want to use the system versions: First, check out the long list of fixes and changes between releases before deciding to use any version older than is bundled with Nokogiri. At install time, set the environment variable NOKOGIRI_USE_SYSTEM_LIBRARIES or else use the --use-system-libraries argument. (See http://nokogiri.org/tutorials/installing_nokogiri.html#using_your_system_libraries for specifics.) libxml2 =2.6.21 with iconv support (libxml2-dev/-devel is also required) libxslt, built with and supported by the given libxml2 (libxslt-dev/-devel is also required)","title":"Requirements"},{"location":"index.html#encoding","text":"Strings are always stored as UTF-8 internally. Methods that return text values will always return UTF-8 encoded strings. Methods that return a string containing markup (like to_xml , to_html and inner_html ) will return a string encoded like the source document. WARNING Some documents declare one encoding, but actually use a different one. In these cases, which encoding should the parser choose? Data is just a stream of bytes. Humans add meaning to that stream. Any particular set of bytes could be valid characters in multiple encodings, so detecting encoding with 100% accuracy is not possible. libxml2 does its best, but it can't be right all the time. If you want Nokogiri to handle the document encoding properly, your best bet is to explicitly set the encoding. Here is an example of explicitly setting the encoding to EUC-JP on the parser: doc = Nokogiri . XML ( foo bar / /foo , nil , EUC-JP )","title":"Encoding"},{"location":"index.html#development","text":"bundle install bundle exec rake","title":"Development"},{"location":"index.html#license","text":"This project is licensed under the terms of the MIT license. See this license at LICENSE.md .","title":"License"},{"location":"CHANGELOG.html","text":"Nokogiri Changelog 1.10.0 / 2019-01-04 Features [MRI] Cross-built Windows gems now support Ruby 2.6 [#1842, #1850] Backwards incompatibilities This release ends support for: Ruby 2.2, for which official support ended on 2018-03-31 [#1841] JRuby 1.7, for which official support ended on 2017-11-21 [#1741] Dependencies [MRI] libxml2 is updated from 2.9.8 to 2.9.9 [MRI] libxslt is updated from 1.1.32 to 1.1.33 1.9.1 / 2018-12-17 Bug fixes Fix a bug introduced in v1.9.0 where XML::DocumentFragment#dup no longer returned an instance of the callee's class, instead always returning an XML::DocumentFragment . This notably broke any subclass of XML::DocumentFragment including HTML::DocumentFragment as well as the Loofah gem's Loofah::HTML::DocumentFragment . [#1846] 1.9.0 / 2018-12-17 Security Notes [JRuby] Upgrade Xerces dependency from 2.11.0 to 2.12.0 to address upstream vulnerability CVE-2012-0881 [#1831] (Thanks @grajagandev for reporting.) Notable non-functional changes Decrease installation size by removing many unneeded files (e.g., /test ) from the packaged gems. [#1719] (Thanks, @stevecrozz!) Features XML::Attr#value= allows HTML node attribute values to be set to either a blank string or an empty boolean attribute. [#1800] Introduce XML::Node#wrap which does what XML::NodeSet#wrap has always done, but for a single node. [#1531] (Thanks, @ethirajsrinivasan!) [MRI] Improve installation experience on macOS High Sierra (Darwin). [#1812, #1813] (Thanks, @gpakosz and @nurse!) [MRI] Node#dup supports copying a node directly to a new document. See the method documentation for details. [MRI] DocumentFragment#dup is now more memory-efficient, avoiding making unnecessary copies. [#1063] [JRuby] NodeSet has been rewritten to improve performance! [#1795] Bug fixes NodeSet#each now returns self instead of zero. [#1822] (Thanks, @olehif!) [MRI] Address a memory leak when using XML::Builder to create nodes with namespaces. [#1810] [MRI] Address a memory leak when unparenting a DTD. [#1784] (Thanks, @stevecheckoway!) [MRI] Use RbConfig::CONFIG instead of ::MAKEFILE_CONFIG to fix installations that use Makefile macros. [#1820] (Thanks, @nobu!) [JRuby] Decrease large memory usage when making nested XPath queries. [#1749] [JRuby] Fix failing tests on JRuby 9.2.x [JRuby] Fix default namespaces in nodes reparented into a different document [#1774] [JRuby] Fix support for Java 9. [#1759] (Thanks, @Taywee!) Dependencies [MRI] Upgrade mini_portile2 dependency from ~ 2.3.0 to ~ 2.4.0 1.8.5 / 2018-10-04 Security Notes [MRI] Pulled in upstream patches from libxml2 that address CVE-2018-14404 and CVE-2018-14567. Full details are available in #1785 . Note that these patches are not yet (as of 2018-10-04) in an upstream release of libxml2. Bug fixes [MRI] Fix regression in installation when building against system libraries, where some systems would not be able to find libxml2 or libxslt when present. (Regression introduced in v1.8.3.) [#1722] [JRuby] Fix node reparenting when the destination doc is empty. [#1773] 1.8.4 / 2018-07-03 Bug fixes [MRI] Fix memory leak when creating nodes with namespaces. (Introduced in v1.5.7) [#1771] 1.8.3 / 2018-06-16 Security Notes [MRI] Behavior in libxml2 has been reverted which caused CVE-2018-8048 (loofah gem), CVE-2018-3740 (sanitize gem), and CVE-2018-3741 (rails-html-sanitizer gem). The commit in question is here: https://github.com/GNOME/libxml2/commit/960f0e2 and more information is available about this commit and its impact here: https://github.com/flavorjones/loofah/issues/144 This release simply reverts the libxml2 commit in question to protect users of Nokogiri's vendored libraries from similar vulnerabilities. If you're offended by what happened here, I'd kindly ask that you comment on the upstream bug report here: https://bugzilla.gnome.org/show_bug.cgi?id=769760 Dependencies [MRI] libxml2 is updated from 2.9.7 to 2.9.8 Features Node#classes, #add_class, #append_class, and #remove_class are added. NodeSet#append_class is added. NodeSet#remove_attribute is a new alias for NodeSet#remove_attr. NodeSet#each now returns an Enumerator when no block is passed (Thanks, @park53kr!) [JRuby] General improvements in JRuby implementation (Thanks, @kares!) Bug fixes CSS attribute selectors now gracefully handle queries using integers. [#711] Handle ASCII-8BIT encoding on fragment input [#553] Handle non-string return values within Reader [#898] [JRuby] Allow Node#replace to insert Comment and CDATA nodes. [#1666] [JRuby] Stability and speed improvements to Node , Sax::PushParser , and the JRuby implementation [#1708, #1710, #1501] 1.8.2 / 2018-01-29 Security Notes [MRI] The update of vendored libxml2 from 2.9.5 to 2.9.7 addresses at least one published vulnerability, CVE-2017-15412. [#1714 has complete details] Dependencies [MRI] libxml2 is updated from 2.9.5 to 2.9.7 [MRI] libxslt is updated from 1.1.30 to 1.1.32 Features [MRI] OpenBSD installation should be a bit easier now. [#1685] (Thanks, @jeremyevans!) [MRI] Cross-built Windows gems now support Ruby 2.5 Bug fixes Node#serialize once again returns UTF-8-encoded strings. [#1659] [JRuby] made SAX parsing of characters consistent with C implementation [#1676] (Thanks, @andrew-aladev!) [MRI] Predefined entities, when inspected, no longer cause a segfault. [#1238] 1.8.1 / 2017-09-19 Dependencies [MRI] libxml2 is updated from 2.9.4 to 2.9.5. [MRI] libxslt is updated from 1.1.29 to 1.1.30. [MRI] optional dependency on the pkg-config gem has had its constraint loosened to ~ 1.1 (from ~ 1.1.7 ). [#1660] [MRI] Upgrade mini_portile2 dependency from ~ 2.2.0 to ~ 2.3.0 , which will validate checksums on the vendored libxml2 and libxslt tarballs before using them. Bugs NodeSet#first with an integer argument longer than the length of the NodeSet now correctly clamps the length of the returned NodeSet to the original length. [#1650] (Thanks, @Derenge!) [MRI] Ensure CData.new raises TypeError if the content argument is not implicitly convertible into a string. [#1669] 1.8.0 / 2017-06-04 Backwards incompatibilities This release ends support for Ruby 2.1 on Windows in the x86-mingw32 and x64-mingw32 platform gems (containing pre-compiled DLLs). Official support ended for Ruby 2.1 on 2017-04-01. Please note that this deprecation note only applies to the precompiled Windows gems. Ruby 2.1 continues to be supported (for now) in the default gem when compiled on installation. Dependencies [Windows] Upgrade iconv from 1.14 to 1.15 (unless --use-system-libraries) [Windows] Upgrade zlib from 1.2.8 to 1.2.11 (unless --use-system-libraries) [MRI] Upgrade rake-compiler dependency from 0.9.2 to 1.0.3 [MRI] Upgrade mini-portile2 dependency from ~ 2.1.0 to ~ 2.2.0 Compatibility notes [JRuby] Removed support for jruby --1.8 code paths. [#1607] (Thanks, @kares!) [MRI Windows] Retrieve zlib source from http://zlib.net/fossils to avoid deprecation issues going forward. See #1632 for details around this problem. Features NodeSet#clone is not an alias for NodeSet#dup [#1503] (Thanks, @stephankaag!) Allow Processing Instructions and Comments as children of a document root. [#1033] (Thanks, @windwiny!) [MRI] PushParser#replace_entities and #replace_entities= will control whether entities are replaced or not. [#1017] (Thanks, @spraints!) [MRI] SyntaxError#to_s now includes line number, column number, and log level if made available by the parser. [#1304, #1637] (Thanks, @spk and @ccarruitero!) [MRI] Cross-built Windows gems now support Ruby 2.4 [MRI] Support for frozen string literals. [#1413] [MRI] Support for installing Nokogiri on a machine in FIPS-enabled mode [#1544] [MRI] Vendored libraries are verified with SHA-256 hashes (formerly some MD5 hashes were used) [#1544] [JRuby] (performance) remove unnecessary synchronization of class-cache [#1563] (Thanks, @kares!) [JRuby] (performance) remove unnecessary cloning of objects in XPath searches [#1563] (Thanks, @kares!) [JRuby] (performance) more performance improvements, particularly in XPath, Reader, XmlNode, and XmlNodeSet [#1597] (Thanks, @kares!) Bugs HTML::SAX::Parser#parse_io now correctly parses HTML and not XML [#1577] (Thanks for the test case, @gregors!) Support installation on systems with a lib64 site config. [#1562] [MRI] on OpenBSD, do not require gcc if using system libraries [#1515] (Thanks, @jeremyevans!) [MRI] XML::Attr.new checks type of Document arg to prevent segfaults. [#1477] [MRI] Prefer xmlCharStrdup (and friends) to strdup (and friends), which can cause problems on some platforms. [#1517] (Thanks, @jeremy!) [JRuby] correctly append a text node before another text node [#1318] (Thanks, @jkraemer!) [JRuby] custom xpath functions returning an integer now work correctly [#1595] (Thanks, @kares!) [JRuby] serializing ( #to_html , #to_s , et al) a document with explicit encoding now works correctly. [#1281, #1440] (Thanks, @kares!) [JRuby] XML::Reader now returns parse errors [#1586] (Thanks, @kares!) [JRuby] Empty NodeSets are now decorated properly. [#1319] (Thanks, @kares!) [JRuby] Merged nodes no longer results in Java exceptions during XPath queries. [#1320] (Thanks, @kares!) 1.7.2 / 2017-05-09 Security Notes [MRI] Upstream libxslt patches are applied to the vendored libxslt 1.1.29 which address CVE-2017-5029 and CVE-2016-4738. For more information: https://github.com/sparklemotion/nokogiri/issues/1634 http://people.canonical.com/~ubuntu-security/cve/2017/CVE-2017-5029.html http://people.canonical.com/~ubuntu-security/cve/2016/CVE-2016-4738.html 1.7.1 / 2017-03-19 Security Notes [MRI] Upstream libxml2 patches are applied to the vendored libxml 2.9.4 which address CVE-2016-4658 and CVE-2016-5131. For more information: https://github.com/sparklemotion/nokogiri/issues/1615 http://people.canonical.com/~ubuntu-security/cve/2016/CVE-2016-4658.html http://people.canonical.com/~ubuntu-security/cve/2016/CVE-2016-5131.html 1.7.0.1 / 2017-01-04 Bugs Fix OpenBSD support. (#1569) (related to #1543) 1.7.0 / 2016-12-26 Features Remove deprecation warnings in Ruby 2.4.0 (#1545) (Thanks, @matthewd!) Support egcc compiler on OpenBSD (#1543) (Thanks, @frenkel and @knu!) Backwards incompatibilities. This release ends support for: Ruby 1.9.2, for which official support ended on 2014-07-31 Ruby 1.9.3, for which official support ended on 2015-02-23 Ruby 2.0.0, for which official support ended on 2016-02-24 MacRuby, which hasn't been actively supported since 2015-01-13 (see https://github.com/MacRuby/MacRuby/commit/f76b9d6e99c18236db617e8aceb12c27d593a483 ) 1.6.8.1 / 2016-10-03 Dependency License Notes Removes required dependency on the pkg-config gem. This dependency was introduced in v1.6.8 and, because it's distributed under LGPL, was objectionable to many Nokogiri users (#1488, #1496). This version makes pkg-config an optional dependency. If it's installed, it's used; but otherwise Nokogiri will attempt to work around its absence. 1.6.8 / 2016-06-06 Security Notes [MRI] Bundled libxml2 is upgraded to 2.9.4, which fixes many security issues. Many of these had previously been patched in the vendored libxml 2.9.2 in the 1.6.7.x branch, but some are newer. See these libxml2 email posts for more: https://mail.gnome.org/archives/xml/2015-November/msg00012.html https://mail.gnome.org/archives/xml/2016-May/msg00023.html For a more detailed analysis, you may care to read Canonical's take on these security issues: http://www.ubuntu.com/usn/usn-2994-1 [MRI] Bundled libxslt is upgraded to 1.1.29, which fixes a security issue as well as many long-known outstanding bugs, some features, some portability improvements, and general cleanup. See this libxslt email post for more: https://mail.gnome.org/archives/xslt/2016-May/msg00004.html Features Several changes were made to improve performance: [MRI] Simplify NodeSet#to_a with a minor speed-up. (#1397) XML::Node#ancestors optimization. (#1297) (Thanks, Bruno Sutic!) Use Symbol#to_proc where we weren't previously. (#1296) (Thanks, Bruno Sutic!) XML::DTD#each uses implicit block calls. (Thanks, @glaucocustodio!) Fall back to the pkg-config gem if we're having trouble finding the system libxml2. This should help many FreeBSD users. (#1417) Set document encoding appropriately even on blank document. (#1043) (Thanks, @batter!) Bug Fixes [JRuby] fix slow add_child (#692) [JRuby] fix load errors when deploying to JRuby/Torquebox (#1114) (Thanks, @atambo and @jvshahid!) [JRuby] fix NPE when inspecting nodes returned by NodeSet#drop (#1042) (Thanks, @mkristian!) [JRuby] fix nil attriubte node's namespace in reader (#1327) (Thanks, @codekitchen!) [JRuby] fix Nokogiri munging unicode characters that require more than 2 bytes (#1113) (Thanks, @mkristian!) [JRuby] allow unlinking an unparented node (#1112, #1152) (Thanks, @esse!) [JRuby] allow Fragment parsing on a frozen string (#444, #1077) [JRuby] HTML style tags are no longer encoded (#1316) (Thanks, @tbeauvais!) [MRI] fix assertion failure while accessing attribute node's namespace in reader (#843) (Thanks, @2potatocakes!) [MRI] fix issue with GCing namespace nodes returned in an xpath query. (#1155) [MRI] Ensure C strings are null-terminated. (#1381) [MRI] Ensure Rubygems is loaded before using mini_portile2 at installation. (#1393, #1411) (Thanks, @JonRowe!) [MRI] Handling another edge case where the libxml-ruby gem's global callbacks were smashing the heap. (#1426). (Thanks to @bbergstrom for providing an isolated test case!) [MRI] Ensure encodings are passed to Sax::Parser xmldecl callback. (#844) [MRI] Ensure default ns prefix is applied correctly when reparenting nodes to another document. (#391) (Thanks, @ylecuyer!) [MRI] Ensure Reader handles non-existent attributes as expected. (#1254) (Thanks, @ccutrer!) [MRI] Cleanup around namespace handling when reparenting nodes. (#1332, #1333, #1444) (Thanks, @cuttrer and @bradleybeddoes!) unescape special characters in CSS queries (#1303) (Thanks, @twalpole!) consistently handle empty documents (#1349) Update to mini_portile2 2.1.0 to address whitespace-handling during patching. (#1402) Fix encoding of xml node namespaces. Work around issue installing Nokogiri on overlayfs (commonly used in Docker containers). (#1370, #1405) Other Notes Removed legacy code remaining from Ruby 1.8.x support. Removed legacy code remaining from REE support. Removing hacky workarounds for bugs in some older versions of libxml2. Handling C strings in a forward-compatible manner, see https://github.com/ruby/ruby/blob/v2_2_0/NEWS#L319 1.6.7.2 / 2016-01-20 This version pulls in several upstream patches to the vendored libxml2 and libxslt to address: CVE-2015-7499 Ubuntu classifies this as \"Priority: Low\", RedHat classifies this as \"Impact: Moderate\", and NIST classifies this as \"Severity: 5.0 (MEDIUM)\". MITRE record is https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-7499 1.6.7.1 / 2015-12-16 This version pulls in several upstream patches to the vendored libxml2 and libxslt to address: CVE-2015-5312 CVE-2015-7497 CVE-2015-7498 CVE-2015-7499 CVE-2015-7500 CVE-2015-8241 CVE-2015-8242 CVE-2015-8317 See also http://www.ubuntu.com/usn/usn-2834-1/ 1.6.7 / 2015-11-29 Notes This version supports native builds on Windows using the RubyInstaller DevKit. It also supports Ruby 2.2.x on Windows, as well as making several other improvements to the installation process on various platforms. This version also includes the security patches already applied in v1.6.6.3 and v1.6.6.4 to the vendored libxml2 and libxslt source. See #1374 and #1376 for details. Features Cross-built gems now have a proper ruby version requirement. (#1266) Ruby 2.2.x is supported on Windows. Native build is supported on Windows. [MRI] libxml2 and libxslt config.guess files brought up to date. (#1326) (Thanks, @hernan-erasmo!) [JRuby] fix error in validating files with jruby (#1355, #1361) (Thanks, @twalpole!) [MRI, OSX] Patch to handle nonstandard location of iconv.h . (#1206, #1210, #1218, #1345) (Thanks, @neonichu!) Bug Fixes [JRuby] reset the namespace cache when replacing the document's innerHtml (#1265) (Thanks, @mkristian!) [JRuby] Document#parse should support IO objects that respond to #read. (#1124) (Thanks, Jake Byman!) [MRI] Duplicate-id errors when setting the id attribute on HTML documents are now silenced. (#1262) [JRuby] SAX parser cuts texts in pieces when square brackets exist. (#1261) [JRuby] Namespaced attributes aren't removed by remove_attribute. (#1299) 1.6.6.4 / 2015-11-19 This version pulls in an upstream patch to the vendored libxml2 to address: unclosed comment uninitialized access issue (#1376) This issue was assigned CVE-2015-8710 after the fact. See http://seclists.org/oss-sec/2015/q4/616 for details. 1.6.6.3 / 2015-11-16 This version pulls in several upstream patches to the vendored libxml2 and libxslt to address: CVE-2015-1819 CVE-2015-7941_1 CVE-2015-7941_2 CVE-2015-7942 CVE-2015-7942-2 CVE-2015-8035 CVE-2015-7995 See #1374 for details. 1.6.6.2 / 2015-01-23 Bug fixes Fixed installation issue affecting compiler arguments. (#1230) 1.6.6.1 / 2015-01-22 Note that 1.6.6.0 was not released. Features Unified Node and NodeSet implementations of #search, #xpath and #css. Added Node#lang and Node#lang=. bin/nokogiri passes the URI to parse() if an HTTP URL is given. bin/nokogiri now loads ~/.nokogirirc so user can define helper methods, etc. bin/nokogiri can be configured to use Pry instead of IRB by adding a couple of lines to ~/.nokogirirc. (#1198) bin/nokogiri can better handle urls from STDIN (aiding use of xargs). (#1065) JRuby 9K support. Bug fixes DocumentFragment#search now matches against root nodes. (#1205) (MRI) More fixes related to handling libxml2 parse errors during DocumentFragment#dup. (#1196) (JRuby) Builder now handles namespace hrefs properly when there is a default ns. (#1039) (JRuby) Clear the XPath cache on attr removal. (#1109) XML::Comment.new argument types are now consistent and safe (and documented) across MRI and JRuby. (#1224) (MRI) Restoring support for Ruby 1.9.2 that was broken in v1.6.4.1 and v1.6.5. (#1207) Check if zlib is available before building libxml2 . (#1188) (JRuby) HtmlSaxPushParser now exists. (#1147) (Thanks, Piotr Szmielew!) 1.6.5 / 2014-11-26 Features Implement Slop#respond_to_missing?. (#1176) Optimized the XPath query generated by an an+b CSS query. Bug fixes Capture non-parse errors from Document#dup in Document#errors. (#1196) (JRuby) Document#canonicalize parameters are now consistent with MRI. (#1189) 1.6.4.1 / 2014-11-05 Bug fixes (MRI) Fix a bug where CFLAGS passed in are dropped. (#1188) Fix a bug where CSS selector :nth(n) did not work. (#1187) 1.6.4 / 2014-11-04 Features (MRI) Bundled Libxml2 is upgraded to 2.9.2. (MRI) nokogiri --version will include a list of applied patches. (MRI) Nokogiri no longer prints messages directly to TTY while building the extension. (MRI) Detect and help user fix a missing /usr/include/iconv.h on OS X. (#1111) (MRI) Improve the iconv detection for building libxml2. Bug fixes (MRI) Fix DocumentFragment#element_children (#1138). Fix a bug with CSS attribute selector without any prefix where \"foo [bar]\" was treated as \"foo[bar]\". (#1174) 1.6.3.1 / 2014-07-21 Bug fixes Addressing an Apple Macintosh installation problem for GCC users. #1130 (Thanks, @zenspider!) 1.6.3 / 2014-07-20 Features Added Node#document? and Node#processing_instruction? Bug fixes [JRuby] Fix Ruby memory exhaustion vulnerability. #1087 (Thanks, @ocher) [MRI] Fix segfault during GC when using libxml-ruby and nokogiri together in multi-threaded environment. #895 (Thanks, @ender672!) Building on OSX 10.9 stock ruby 2.0.0 now works. #1101 (Thanks, @zenspider!) Node#parse now works again for HTML document nodes (broken in 1.6.2+). Processing instructions can now be added via Node#add_next_sibling. 1.6.2.1 / 2014-05-13 Bug fixes Fix statically-linked libxml2 installation when using universal builds of Ruby. #1104 Patching mini_portile to address the git dependency detailed in #1102. Library load fix to address segfault reported on some systems. #1097 1.6.2 / 2014-05-12 Security Note A set of security and bugfix patches have been backported from the libxml2 and libxslt repositories onto the version of 2.8.0 packaged with Nokogiri, including these notable security fixes: https://git.gnome.org/browse/libxml2/commit/?id=4629ee02ac649c27f9c0cf98ba017c6b5526070f CVE-2013-2877 https://git.gnome.org/browse/libxml2/commit/?id=e50ba8164eee06461c73cd8abb9b46aa0be81869 CVE-2014-0191 https://git.gnome.org/browse/libxml2/commit/?id=9cd1c3cfbd32655d60572c0a413e017260c854df It is recommended that you upgrade from 1.6.x to this version as soon as possible. Compatibility Note Now requires libxml = 2.6.21 (was previously = 2.6.17). Features Add cross building of fat binary gems for 64-Bit Windows (x64-mingw32) and add support for native builds on Windows. #864, #989, #1072 (MRI) Alias CP932 to Windows-31J if iconv does not support Windows-31J. (MRI) Nokogiri now links packaged libraries statically. To disable static linking, pass --disable-static to extconf.rb. #923 (MRI) Fix a library path (LIBPATH) precedence problem caused by CRuby bug #9760. (MRI) Nokogiri automatically deletes directories of packaged libraries only used during build. To keep them for debugging purposes, pass --disable-clean to extconf.rb. #952 (MRI) Nokogiri now builds libxml2 properly with iconv support on platforms where libiconv is installed outside the system default directories, such as FreeBSD. Add support for an-b in nth selectors. #886 (Thanks, Magnus Bergmark!) Add support for bare and multiple :not() functions in selectors. #887 (Thanks, Magnus Bergmark!) (MRI) Add an extconf.rb option --use-system-libraries, alternative to setting the environment variable NOKOGIRI_USE_SYSTEM_LIBRARIES. (MRI) Update packaged libraries: libxslt to 1.1.28, zlib to 1.2.8, and libiconv to 1.14, respectively. Nokogiri::HTML::Document#title= and #meta_encoding= now always add an element if not present, trying hard to find the best place to put it. Nokogiri::XML::DTD#html_dtd? and #html5_dtd? are added. Nokogiri::XML::Node#prepend_child is added. #664 Nokogiri::XML::SAX::ParserContext#recovery is added. #453 Fix documentation for XML::Node#namespace. #803 #802 (Thanks, Hoylen Sue) Allow Nokogiri::XML::Node#parse from unparented non-element nodes. #407 Bugfixes Ensure :only-child pseudo class works within :not pseudo class. #858 (Thanks, Yamagishi Kazutoshi!) Don't call pkg_config when using bundled libraries in extconf.rb #931 (Thanks, Shota Fukumori!) Nokogiri.parse() does not mistake a non-HTML document like a RSS document as HTML document. #932 (Thanks, Yamagishi Kazutoshi!) (MRI) Perform a node type check before adding a child node to another. Previously adding a text node to another as a child could cause a SEGV. #1092 (JRuby) XSD validation crashes in Java version. #373 (JRuby) Document already has a root node error while using Builder. #646 (JRuby) c14n tests are all passing on JRuby. #226 Parsing empty documents raise SyntaxError in strict mode. #1005 (JRuby) Make xpath faster by caching the xpath context. #741 (JRuby) XML SAX push parser leaks memory on JRuby, but not on MRI. #998 (JRuby) Inconsistent behavior aliasing the default namespace. #940 (JRuby) Inconsistent behavior between parsing and adding namespaces. #943 (JRuby) Xpath returns inconsistent result set on cloned document with namespaces and attributes. #1034 (JRuby) Java-Implementation forgets element namespaces #902 (JRuby) JRuby-Nokogiri does not recognise attributes inside namespaces #1081 (JRuby) JRuby-Nokogiri has different comment node name #1080 (JRuby) JAXPExtensionsProvider / Java 7 / Secure Processing #1070 1.6.1 / 2013-12-14 Bugfixes (JRuby) Fix out of memory bug when certain invalid documents are parsed. (JRuby) Fix regression of billion-laughs vulnerability. #586 1.6.0 / 2013-06-08 This release was based on v1.5.10 and 1.6.0.rc1, and contains changes mentioned in both. Deprecations Remove pre 1.9 monitoring from Travis. 1.6.0.rc1 / 2013-04-14 This release was based on v1.5.9, and so does not contain any fixes mentioned in the notes for v1.5.10. Notes mini_portile is now a runtime dependency Ruby 1.9.2 and higher now required Features (MRI) Source code for libxml 2.8.0 and libxslt 1.2.26 is packaged with the gem. These libraries are compiled at gem install time unless the environment variable NOKOGIRI_USE_SYSTEM_LIBRARIES is set. VERSION_INFO (also nokogiri -v ) exposes whether libxml was compiled from packaged source, or the system library was used. (Windows) libxml upgraded to 2.8.0 Deprecations Support for Ruby 1.8.7 and prior has been dropped 1.5.11 / 2013-12-14 Bugfixes (JRuby) Fix out of memory bug when certain invalid documents are parsed. (JRuby) Fix regression of billion-laughs vulnerability. #586 1.5.10 / 2013-06-07 Bugfixes (JRuby) Fix \"null document\" error when parsing an empty IO in jruby 1.7.3. #883 (JRuby) Fix schema validation when XSD has DOCTYPE set to DTD. #912 (Thanks, Patrick Cheng!) (MRI) Fix segfault when there is no default subelement for an HTML node. #917 Notes Use rb_ary_entry instead of RARRAY_PTR (you know, for Rubinius). #877 (Thanks, Dirkjan Bussink!) Fix TypeError when running tests. #900 (Thanks, C\u00e9dric Boutillier!) 1.5.9 / 2013-03-21 Bugfixes Ensure that prefixed attributes are properly namespaced when reparented. #869 Fix for inconsistent namespaced attribute access for SVG nested in HTML. #861 (MRI) Fixed a memory leak in fragment parsing if nodes are not all subsequently reparented. #856 1.5.8 / 2013-03-19 Bugfixes (JRuby) Fix EmptyStackException thrown by elements with xlink:href attributes and no base_uri #534, #805. (Thanks, Patrick Quinn and Brian Hoffman!) Fixes duplicate attributes issue introduced in 1.5.7. #865 Allow use of a prefixed namespace on a root node using Nokogiri::XML::Builder #868 1.5.7 / 2013-03-18 Features Windows support for Ruby 2.0. Bugfixes SAX::Parser.parse_io throw an error when used with lower case encoding. #828 (JRuby) Java Nokogiri is finally green (passes all tests) under 1.8 and 1.9 mode. High five everyone. #798, #705 (JRuby) Nokogiri::XML::Reader broken (as a pull parser) on jruby - reads the whole XML document. #831 (JRuby) JRuby hangs parsing \" \". #837 (JRuby) JRuby NPE parsing an invalid XML instruction. #838 (JRuby) Node#content= incompatibility. #839 (JRuby) to_xhtml doesn't print the last slash for self-closing tags in JRuby. #834 (JRuby) Adding an EntityReference after a Text node mangles the entity in JRuby. #835 (JRuby) JRuby version inconsistency: nil for empty attributes. #818 CSS queries for classes (e.g., \".foo\") now treat all whitespace identically. #854 Namespace behavior cleaned up and made consistent between JRuby and MRI. #846, #801 (Thanks, Michael Klein!) (MRI) SAX parser handles empty processing instructions. #845 1.5.6 / 2012-12-19 Features Improved performance of XML::Document#collect_namespaces. #761 (Thanks, Juergen Mangler!) New callback SAX::Document#processing_instruction (Thanks, Kitaiti Makoto!) Node#native_content= allows setting unescaped node contant. #768 XPath lookup with namespaces supports symbol keys. #729 (Thanks, Ben Langfeld.) XML::Node#[]= stringifies values. #729 (Thanks, Ben Langfeld.) bin/nokogiri will process a document from $stdin bin/nokogiri -e will execute a program from the command line (JRuby) bin/nokogiri --version will print the Xerces and NekoHTML versions. Bugfixes Nokogiri now detects XSLT transform errors. #731 (Thanks, Justin Fitzsimmons!) Don't throw an Error when trying to replace top-level text node in DocumentFragment. #775 Raise an ArgumentError if an invalid encoding is passed to the SAX parser. #756 (Thanks, Bradley Schaefer!) Prefixed element inconsistency between CRuby and JRuby. #712 (JRuby) space prior to xml preamble causes nokogiri to fail parsing. (fixed along with #748) #790 (JRuby) Fixed the bug Nokogiri::XML::Node#content inconsistency between Java and C. #794, #797 (JRuby) raises INVALID_CHARACTER_ERR exception when EntityReference name starts with '#'. #719 (JRuby) doesn't coerce namespaces out of strings on a direct subclass of Node. #715 (JRuby) Node#content now renders newlines properly. #737 (Thanks, Piotr Szmielew!) (JRuby) Unknown namespace are ignore when the recover option is used. #748 (JRuby) XPath queries for namespaces should not throw exceptions when called twice in a row. #764 (JRuby) More consistent (with libxml2) whitespace formatting when emitting XML. #771 (JRuby) namespaced attributes broken when appending raw xml to builder. #770 (JRuby) Nokogiri::XML::Document#wrap raises undefined method `length' for nil:NilClass when trying to to a node. #781 (JRuby) Fixed \"bad file descriptor\" bug when closing open file descriptors. #495 (JRuby) JRuby/CRuby incompatibility for attribute decorators. #785 (JRuby) Issues parsing valid XML with no internal subset in the DTD. #547, #811 (JRuby) Issues parsing valid node content when it contains colons. #728 (JRuby) Correctly parse the doc type of html documents. #733 (JRuby) Include dtd in the xml output when a builder is used with create_internal_subset. #751 (JRuby) builder requires textwrappers for valid utf8 in jruby, not in mri. #784 1.5.5 / 2012-06-24 Features Much-improved support for JRuby in 1.9 mode! Yay! Bugfixes Regression in JRuby Nokogiri add_previous_sibling (1.5.0 - 1.5.1) #691 (Thanks, John Shahid!) JRuby unable to create HTML doc if URL arg provided #674 (Thanks, John Shahid!) JRuby raises NullPointerException when given HTML document is nil or empty string. #699 JRuby 1.9 error, uncaught throw 'encoding_found', has been fixed. #673 Invalid encoding returned in JRuby with US-ASCII. #583 XmlSaxPushParser raises IndexOutOfBoundsException when over 512 characters are given. #567, #615 When xpath evaluation returns empty NodeSet, decorating NodeSet's base document raises exception. #514 JRuby raises exception when xpath with namespace is specified. pull request #681 (Thanks, Piotr Szmielew) JRuby renders nodes without their namespace when subclassing Node. #695 JRuby raises NAMESPACE_ERR (org.w3c.dom.DOMException) while instantiating RDF::RDFXML::Writer. #683 JRuby is not able to use namespaces in xpath. #493 JRuby's Entity resolving should be consistent with C-Nokogiri #704, #647, #703 1.5.4 / 2012-06-12 Features The \"nokogiri\" script now has more verbose output when passed the --rng option. #675 (Thanks, Dan Radez!) Build support on hardened Debian systems that use -Werror=format-security . #680. Better build support for systems with pkg-config. #584 Better build support for systems with multiple iconv installations. Bugfixes Segmentation fault when creating a comment node for a DocumentFragment. #677, #678. Treat '.' as xpath in at() and search(). #690 (MRI, Security) Default parse options for XML documents were changed to not make network connections during document parsing, to avoid XXE vulnerability. #693 To re-enable this behavior, the configuration method nononet may be called, like this: Nokogiri::XML::Document.parse(xml) { |config| config.nononet } Insert your own joke about double-negatives here. 1.5.3 / 2012-06-01 Features Support for \"prefixless\" CSS selectors ~, and + like jQuery supports. #621, #623. (Thanks, David Lee!) Attempting to improve installation on homebrew 0.9 (with regards to iconv). Isn't package management convenient? Bugfixes Custom xpath functions with empty nodeset arguments cause a segfault. #634. Nokogiri::XML::Node#css now works for XML documents with default namespaces when the rule contains attribute selector without namespace. Fixed marshalling bugs around how arguments are passed to (and returned from) XSLT custom xpath functions. #640. Nokogiri::XML::Reader#outer_xml is broken in JRuby #617 Nokogiri::XML::Attribute on JRuby returns a nil namespace #647 Nokogiri::XML::Node#namespace= cannot set a namespace without a prefix on JRuby #648 (JRuby) 1.9 mode causes dead lock while running rake #571 HTML::Document#meta_encoding does not raise exception on docs with malformed content-type. #655 Fixing segfault related to unsupported encodings in in-context parsing on 1.8.7. #643 (JRuby) Concurrency issue in XPath parsing. #682 1.5.2 / 2012-03-09 Repackaging of 1.5.1 with a gemspec that is compatible with older Rubies. #631, #632. 1.5.1 / 2012-03-09 Features XML::Builder#comment allows creation of comment nodes. CSS searches now support namespaced attributes. #593 Java integration feature is added. Now, XML::Document.wrap and XML::Document#to_java methods are available. RelaxNG validator support in the nokogiri cli utility. #591 (thanks, Dan Radez!) Bugfixes Fix many memory leaks and segfault opportunities. Thanks, Tim Elliott! extconf searches homebrew paths if homebrew is installed. Inconsistent behavior of Nokogiri 1.5.0 Java #620 Inheriting from Nokogiri::XML::Node on JRuby (1.6.4/5) fails #560 XML::Attr nodes are not allowed to be added as node children, so an exception is raised. #558 No longer defensively \"pickle\" adjacent text nodes on Node#add_next_sibling and Node#add_previous_sibling calls. #595. Java version inconsistency: it returns nil for empty attributes #589 to_xhtml incorrectly generates when tag is empty #557 Document#add_child now accepts a Node, NodeSet, DocumentFragment, or String. #546. Document#create_element now recognizes namespaces containing non-word characters (like \"SOAP-ENV\"). This is mostly relevant to users of Builder, which calls Document#create_element for nearly everything. #531. File encoding broken in 1.5.0 / jruby / windows #529 Java version does not return namespace defs as attrs for ::HTML #542 Bad file descriptor with Nokogiri 1.5.0 #495 remove_namespace! doesn't work in pure java version #492 The Nokogiri Java native build throws a null pointer exception when ActiveSupport's .blank? method is called directly on a parsed object. #489 1.5.0 Not using correct character encoding #488 Raw XML string in XML Builder broken on JRuby #486 Nokogiri 1.5.0 XML generation broken on JRuby #484 Do not allow multiple root nodes. #550 Fixes for custom XPath functions. #605, #606 (thanks, Juan Wajnerman!) Node#to_xml does not override :save_with if it is provided. #505 Node#set is a private method (JRuby). #564 (thanks, Nick Sieger!) C14n cleanup and Node#canonicalize (thanks, Ivan Pirlik!) #563 1.5.0 / 2011-07-01 Notes See changelog from 1.4.7 Features extracted sets of Node::SaveOptions into Node::SaveOptions::DEFAULT_{X,H,XH}TML (refactor) Bugfixes default output of XML on JRuby is no longer formatted due to inconsistent whitespace handling. #415 (JRuby) making empty NodeSets with null nodes member safe to operate on. #443 Fix a bug in advanced encoding detection that leads to partially duplicated document when parsing an HTML file with unknown encoding. Add support for . 1.5.0 beta3 / 2010/12/02 Notes JRuby performance tuning See changelog from 1.4.4 Bugfixes Node#inner_text no longer returns nil. (JRuby) #264 1.5.0 beta2 / 2010/07/30 Notes See changelog from 1.4.3 1.5.0 beta1 / 2010/05/22 Notes JRuby support is provided by a new pure-java backend. Deprecations Ruby 1.8.6 is deprecated. Nokogiri will install, but official support is ended. LibXML 2.6.16 and earlier are deprecated. Nokogiri will refuse to install. FFI support is removed. 1.4.7 / 2011-07-01 Bugfixes Fix a bug in advanced encoding detection that leads to partially duplicated document when parsing an HTML file with unknown encoding. Thanks, Timothy Elliott (@ender672)! #478 1.4.6 / 2011-06-19 Notes This version is functionally identical to 1.4.5. Ruby 1.8.6 support has been restored. 1.4.5 / 2011-05-19 New Features Nokogiri::HTML::Document#title accessor gets and sets the document title. extracted sets of Node::SaveOptions into Node::SaveOptions::DEFAULT_{X,H,XH}TML (refactor) Raise an exception if a string is passed to Nokogiri::XML::Schema#validate. #406 Bugfixes Node#serialize-and-friends now accepts a SaveOption object as the, erm, save object. Nokogiri::CSS::Parser has-a Nokogiri::CSS::Tokenizer (JRUBY+FFI only) Weak references are now threadsafe. #355 Make direct start_element() callback (currently used for HTML::SAX::Parser) pass attributes in assoc array, just as emulated start_element() callback does. rel. #356 HTML::SAX::Parser should call back a block given to parse*() if any, just as XML::SAX::Parser does. Add further encoding detection to HTML parser that libxml2 does not do. Document#remove_namespaces! now handles attributes with namespaces. #396 XSLT::Stylesheet#transform no longer segfaults when handed a non-XML::Document. #452 XML::Reader no longer segfaults when under GC pressure. #439 1.4.4 / 2010-11-15 New Features XML::Node#children= sets the node's inner html (much like #inner_html=), but returns the reparent node(s). XSLT supports function extensions. #336 XPath bind parameter substitution. #329 XML::Reader node type constants. #369 SAX Parser context provides line and column information Bugfixes XML::DTD#attributes returns an empty hash instead of nil when there are no attributes. XML::DTD#{keys,each} now work as expected. #324 {XML,HTML}::DocumentFragment.{new,parse} no longer strip leading and trailing whitespace. #319 XML::Node#{add_child,add_previous_sibling,add_next_sibling,replace} return a NodeSet when passed a string. Unclosed tags parsed more robustly in fragments. #315 XML::Node#{replace,add_previous_sibling,add_next_sibling} edge cases fixed related to libxml's text node merging. #308 Fixed a segfault when GC occurs during xpath handler argument marshalling. #345 Added hack to Slop decorator to work with previously defined methods. #330 Fix a memory leak when duplicating child nodes. #353 Fixed off-by-one bug with nth-last-{child,of-type} CSS selectors when NOT using an+b notation. #354 Fixed passing of non-namespace attributes to SAX::Document#start_element. #356 Workaround for libxml2 in-context parsing bug. #362 Fixed NodeSet#wrap on nodes within a fragment. #331 1.4.3 / 2010/07/28 New Features XML::Reader#empty_element? returns true for empty elements. #262 Node#remove_namespaces! now removes namespace declarations as well. #294 NodeSet#at_xpath, NodeSet#at_css and NodeSet# do what the corresponding methods of Node do. Bugfixes XML::NodeSet#{include?,delete,push} accept an XML::Namespace XML::Document#parse added for parsing in the context of a document XML::DocumentFragment#inner_html= works with contextual parsing! #298, #281 lib/nokogiri/css/parser.y Combined CSS functions + pseudo selectors fixed Reparenting text nodes is safe, even when the operation frees adjacent merged nodes. #283 Fixed libxml2 versionitis issue with xmlFirstElementChild et al. #303 XML::Attr#add_namespace now works as expected. #252 HTML::DocumentFragment uses the string's encoding. #305 Fix the CSS3 selector translation rule for the general sibling combinator (a.k.a. preceding selector) that incorrectly converted \"E ~ F G\" to \"//F//G[preceding-sibling::E]\". 1.4.2 / 2010/05/22 New Features XML::Node#parse will parse XML or HTML fragments with respect to the context node. XML::Node#namespaces returns all namespaces defined in the node and all ancestor nodes (previously did not return ancestors' namespace definitions). Added Enumerable to XML::Node Nokogiri::XML::Schema#validate now uses xmlSchemaValidateFile if a filename is passed, which is faster and more memory-efficient. GH #219 XML::Document#create_entity will create new EntityDecl objects. GH #174 JRuby FFI implementation no longer uses ObjectSpace._id2ref, instead using Charles Nutter's rocking Weakling gem. Nokogiri::XML::Node#first_element_child fetch the first child node that is an ELEMENT node. Nokogiri::XML::Node#last_element_child fetch the last child node that is an ELEMENT node. Nokogiri::XML::Node#elements fetch all children nodes that are ELEMENT nodes. Nokogiri::XML::Node#add_child, #add_previous_sibling, #before, #add_next_sibling, #after, #inner_html, #swap and #replace all now accept a Node, DocumentFragment, NodeSet, or a string containing markup. Node#fragment? indicates whether a node is a DocumentFragment. Bugfixes XML::NodeSet is now always decorated (if the document has decorators). GH #198 XML::NodeSet#slice gracefully handles offset+length larger than the set length. GH #200 XML::Node#content= safely unlinks previous content. GH #203 XML::Node#namespace= takes nil as a parameter XML::Node#xpath returns things other than NodeSet objects. GH #208 XSLT::StyleSheet#transform accepts hashes for parameters. GH #223 Psuedo selectors inside not() work. GH #205 XML::Builder doesn't break when nodes are unlinked. Thanks to vihai! GH #228 Encoding can be forced on the SAX parser. Thanks Eugene Pimenov! GH #204 XML::DocumentFragment uses XML::Node#parse to determine children. Fixed a memory leak in xml reader. Thanks sdor! GH #244 Node#replace returns the new child node as claimed in the RDoc. Previously returned +self+. Notes The Windows gems now bundle DLLs for libxml 2.7.6 and libxslt 1.1.26. Prior to this release, libxml 2.7.3 and libxslt 1.1.24 were bundled. 1.4.1 / 2009/12/10 New Features Added Nokogiri::LIBXML_ICONV_ENABLED Alias Node#[] to Node#attr XML::Node#next_element added XML::Node# added for searching a nodes immediate children XML::NodeSet#reverse added Added fragment support to Node#add_child, Node#add_next_sibling, Node#add_previous_sibling, and Node#replace. XML::Node#previous_element implemented Rubinius support Ths CSS selector engine now supports :has() XML::NodeSet#filter() was added XML::Node.next= and .previous= are aliases for add_next_sibling and add_previous_sibling. GH #183 Bugfixes XML fragments with namespaces do not raise an exception (regression in 1.4.0) Node#matches? works in nodes contained by a DocumentFragment. GH #158 Document should not define add_namespace() method. GH #169 XPath queries returning namespace declarations do not segfault. Node#replace works with nodes from different documents. GH #162 Adding XML::Document#collect_namespaces Fixed bugs in the SOAP4R adapter Fixed bug in XML::Node#next_element for certain edge cases Fixed load path issue with JRuby under Windows. GH #160. XSLT#apply_to will honor the \"output method\". Thanks richardlehane! Fragments containing leading text nodes with newlines now parse properly. GH #178. 1.4.0 / 2009/10/30 Happy Birthday! New Features Node#at_xpath returns the first element of the NodeSet matching the XPath expression. Node#at_css returns the first element of the NodeSet matching the CSS selector. NodeSet#| for unions GH #119 (Thanks Serabe!) NodeSet#inspect makes prettier output Node#inspect implemented for more rubyish document inspecting Added XML::DTD#external_id Added XML::DTD#system_id Added XML::ElementContent for DTD Element content validity Better namespace declaration support in Nokogiri::XML::Builder Added XML::Node#external_subset Added XML::Node#create_external_subset Added XML::Node#create_internal_subset XML Builder can append raw strings (GH #141, patch from dudleyf) XML::SAX::ParserContext added XML::Document#remove_namespaces! for the namespace-impaired Bugfixes returns nil when HTML documents do not declare a meta encoding tag. GH #115 Uses RbConfig::CONFIG['host_os'] to adjust ENV['PATH'] GH #113 NodeSet#search is more efficient GH #119 (Thanks Serabe!) NodeSet#xpath handles custom xpath functions Fixing a SEGV when XML::Reader gets attributes for current node Node#inner_html takes the same arguments as Node#to_html GH #117 DocumentFragment#css delegates to it's child nodes GH #123 NodeSet#[] works with slices larger than NodeSet#length GH #131 Reparented nodes maintain their namespace. GH #134 Fixed SEGV when adding an XML::Document to NodeSet XML::SyntaxError can be duplicated. GH #148 Deprecations Hpricot compatibility layer removed 1.3.3 / 2009/07/26 New Features NodeSet#children returns all children of all nodes Bugfixes Override libxml-ruby's global error handler ParseOption#strict fixed Fixed a segfault when sending an empty string to Node#inner_html= GH #88 String encoding is now set to UTF-8 in Ruby 1.9 Fixed a segfault when moving root nodes between documents. GH #91 Fixed an O(n) penalty on node creation. GH #101 Allowing XML documents to be output as HTML documents Deprecations Hpricot compatibility layer will be removed in 1.4.0 1.3.2 / 2009-06-22 New Features Nokogiri::XML::DTD#validate will validate your document Bugfixes Nokogiri::XML::NodeSet#search will search top level nodes. GH #73 Removed namespace related methods from Nokogiri::XML::Document Fixed a segfault when a namespace was added twice Made nokogiri work with Snow Leopard GH #79 Mailing list has moved to: http://groups.google.com/group/nokogiri-talk HTML fragments now correctly handle comments and CDATA blocks. GH #78 Nokogiri::XML::Document#clone is now an alias of dup Deprecations Nokogiri::XML::SAX::Document#start_element_ns is deprecated, please switch to Nokogiri::XML::SAX::Document#start_element_namespace Nokogiri::XML::SAX::Document#end_element_ns is deprecated, please switch to Nokogiri::XML::SAX::Document#end_element_namespace 1.3.1 / 2009-06-07 Bugfixes extconf.rb checks for optional RelaxNG and Schema functions Namespace nodes are added to the Document node cache 1.3.0 / 2009-05-30 New Features Builder changes scope based on block arity Builder supports methods ending in underscore similar to tagz Nokogiri::XML::Node# = compares nodes based on Document position Nokogiri::XML::Node#matches? returns true if Node can be found with given selector. Nokogiri::XML::Node#ancestors now returns an Nokogiri::XML::NodeSet Nokogiri::XML::Node#ancestors will match parents against optional selector Nokogiri::HTML::Document#meta_encoding for getting the meta encoding Nokogiri::HTML::Document#meta_encoding= for setting the meta encoding Nokogiri::XML::Document#encoding= to set the document encoding Nokogiri::XML::Schema for validating documents against XSD schema Nokogiri::XML::RelaxNG for validating documents against RelaxNG schema Nokogiri::HTML::ElementDescription for fetching HTML element descriptions Nokogiri::XML::Node#description to fetch the node description Nokogiri::XML::Node#accept implements Visitor pattern bin/nokogiri for easily examining documents (Thanks Yutaka HARA!) Nokogiri::XML::NodeSet now supports more Array and Enumerable operators: index, delete, slice, - (difference), + (concatenation), (intersection), push, pop, shift, == Nokogiri.XML, Nokogiri.HTML take blocks that receive Nokogiri::XML::ParseOptions objects Nokogiri::XML::Node#namespace returns a Nokogiri::XML::Namespace Nokogiri::XML::Node#namespace= for setting a node's namespace Nokogiri::XML::DocumentFragment and Nokogiri::HTML::DocumentFragment have a sensible API and a more robust implementation. JRuby 1.3.0 support via FFI. Bugfixes Fixed a problem with nil passed to CDATA constructor Fragment method deals with regular expression characters (Thanks Joel!) LH #73 Fixing builder scope issues LH #61, LH #74, LH #70 Fixed a problem when adding a child could remove the child namespace LH#78 Fixed bug with unlinking a node then reparenting it. (GH#22) Fixed failure to catch errors during XSLT parsing (GH#32) Fixed a bug with attribute conditions in CSS selectors (GH#36) Fixed intolerance of HTML attributes without values in Node#before/after/inner_html=. (GH#35) 1.2.3 / 2009-03-22 Bugfixes Fixing bug where a node is passed in to Node#new Namespace should be assigned on DocumentFragment creation. LH #66 Nokogiri::XML::NodeSet#dup works GH #10 Nokogiri::HTML returns an empty Document when given a blank string GH#11 Adding a child will remove duplicate namespace declarations LH #67 Builder methods take a hash as a second argument 1.2.2 / 2009-03-14 New features Nokogiri may be used with soap4r. See XSD::XMLParser::Nokogiri Nokogiri::XML::Node#inner_html= to set the inner html for a node Nokogiri builder interface improvements Nokogiri::XML::Node#swap swaps html for current node (LH #50) Bugfixes Fixed a tag nesting problem in the Builder API (LH #41) Nokogiri::HTML.fragment will properly handle text only nodes (LH #43) Nokogiri::XML::Node#before will prepend text nodes (LH #44) Nokogiri::XML::Node#after will append text nodes Nokogiri::XML::Node#search automatically registers root namespaces (LH #42) Nokogiri::XML::NodeSet#search automatically registers namespaces Nokogiri::HTML::NamedCharacters delegates to libxml2 Nokogiri::XML::Node#[] can take a symbol (LH #48) vasprintf for windows updated. Thanks Geoffroy Couprie! Nokogiri::XML::Node#[]= should not encode entities (LH #55) Namespaces should be copied to reparented nodes (LH #56) Nokogiri uses encoding set on the string for default in Ruby 1.9 Document#dup should create a new document of the same type (LH #59) Document should not have a parent method (LH #64) 1.2.1 / 2009-02-23 Bugfixes Fixed a CSS selector space bug Fixed Ruby 1.9 String Encoding (Thanks \u89d2\u8c37\u3055\u3093\uff01) 1.2.0 / 2009-02-22 New features CSS search now supports CSS3 namespace queries Namespaces on the root node are automatically registered CSS queries use the default namespace Nokogiri::XML::Document#encoding get encoding used for this document Nokogiri::XML::Document#url get the document url Nokogiri::XML::Node#add_namespace add a namespace to the node LH#38 Nokogiri::XML::Node#each iterate over attribute name, value pairs Nokogiri::XML::Node#keys get all attribute names Nokogiri::XML::Node#line get the line number for a node (Thanks Dirkjan Bussink!) Nokogiri::XML::Node#serialize now takes an optional encoding parameter Nokogiri::XML::Node#to_html, to_xml, and to_xhtml take an optional encoding Nokogiri::XML::Node#to_str Nokogiri::XML::Node#to_xhtml to produce XHTML documents Nokogiri::XML::Node#values get all attribute values Nokogiri::XML::Node#write_to writes the node to an IO object with optional encoding Nokogiri::XML::ProcessingInstrunction.new Nokogiri::XML::SAX::PushParser for all your push parsing needs. Bugfixes Fixed Nokogiri::XML::Document#dup Fixed header detection. Thanks rubikitch! Fixed a problem where invalid CSS would cause the parser to hang Deprecations Nokogiri::XML::Node.new_from_str will be deprecated in 1.3.0 API Changes Nokogiri::HTML.fragment now returns an XML::DocumentFragment (LH #32) 1.1.1 New features Added XML::Node#elem? Added XML::Node#attribute_nodes Added XML::Attr XML::Node#delete added. XML::NodeSet#inner_html added. Bugfixes Not including an HTML entity for \\r for HTML nodes. Removed CSS::SelectorHandler and XML::XPathHandler XML::Node#attributes returns an Attr node for the value. XML::NodeSet implements to_xml 1.1.0 New Features Custom XPath functions are now supported. See Nokogiri::XML::Node#xpath Custom CSS pseudo classes are now supported. See Nokogiri::XML::Node#css Nokogiri::XML::Node# will add a child to the current node Bugfixes Mutex lock on CSS cache access Fixed build problems with GCC 3.3.5 XML::Node#to_xml now takes an indentation argument XML::Node#dup takes an optional depth argument XML::Node#add_previous_sibling returns new sibling node. 1.0.7 Bugfixes Fixed memory leak when using Dike SAX parser now parses IO streams Comment nodes have their own class Nokogiri() should delegate to Nokogiri.parse() Prepending rather than appending to ENV['PATH'] on windows Fixed a bug in complex CSS negation selectors 1.0.6 5 Bugfixes XPath Parser raises a SyntaxError on parse failure CSS Parser raises a SyntaxError on parse failure filter() and not() hpricot compatibility added CSS searches via Node#search are now always relative CSS to XPath conversion is now cached 1.0.5 Bugfixes Added mailing list and ticket tracking information to the README.txt Sets ENV['PATH'] on windows if it doesn't exist Caching results of NodeSet#[] on Document 1.0.4 Bugfixes Changed memory management from weak refs to document refs Plugged some memory leaks Builder blocks can call methods from surrounding contexts 1.0.3 5 Bugfixes NodeSet now implements to_ary XML::Document should not implement parent More GC Bugs fixed. (Mike is AWESOME!) Removed RARRAY_LEN for 1.8.5 compatibility. Thanks Shane Hanna. inner_html fixed. (Thanks Yehuda!) 1.0.2 1 Bugfix extconf.rb should not check for frex and racc 1.0.1 1 Bugfix Made sure extconf.rb searched libdir and prefix so that ports libxml/ruby will link properly. Thanks lucsky! 1.0.0 / 2008-07-13 1 major enhancement Birthday!","title":"Changelog"},{"location":"CHANGELOG.html#nokogiri-changelog","text":"","title":"Nokogiri Changelog"},{"location":"CHANGELOG.html#1100-2019-01-04","text":"","title":"1.10.0 / 2019-01-04"},{"location":"CHANGELOG.html#features","text":"[MRI] Cross-built Windows gems now support Ruby 2.6 [#1842, #1850]","title":"Features"},{"location":"CHANGELOG.html#backwards-incompatibilities","text":"This release ends support for: Ruby 2.2, for which official support ended on 2018-03-31 [#1841] JRuby 1.7, for which official support ended on 2017-11-21 [#1741]","title":"Backwards incompatibilities"},{"location":"CHANGELOG.html#dependencies","text":"[MRI] libxml2 is updated from 2.9.8 to 2.9.9 [MRI] libxslt is updated from 1.1.32 to 1.1.33","title":"Dependencies"},{"location":"CHANGELOG.html#191-2018-12-17","text":"","title":"1.9.1 / 2018-12-17"},{"location":"CHANGELOG.html#bug-fixes","text":"Fix a bug introduced in v1.9.0 where XML::DocumentFragment#dup no longer returned an instance of the callee's class, instead always returning an XML::DocumentFragment . This notably broke any subclass of XML::DocumentFragment including HTML::DocumentFragment as well as the Loofah gem's Loofah::HTML::DocumentFragment . [#1846]","title":"Bug fixes"},{"location":"CHANGELOG.html#190-2018-12-17","text":"","title":"1.9.0 / 2018-12-17"},{"location":"CHANGELOG.html#security-notes","text":"[JRuby] Upgrade Xerces dependency from 2.11.0 to 2.12.0 to address upstream vulnerability CVE-2012-0881 [#1831] (Thanks @grajagandev for reporting.)","title":"Security Notes"},{"location":"CHANGELOG.html#notable-non-functional-changes","text":"Decrease installation size by removing many unneeded files (e.g., /test ) from the packaged gems. [#1719] (Thanks, @stevecrozz!)","title":"Notable non-functional changes"},{"location":"CHANGELOG.html#features_1","text":"XML::Attr#value= allows HTML node attribute values to be set to either a blank string or an empty boolean attribute. [#1800] Introduce XML::Node#wrap which does what XML::NodeSet#wrap has always done, but for a single node. [#1531] (Thanks, @ethirajsrinivasan!) [MRI] Improve installation experience on macOS High Sierra (Darwin). [#1812, #1813] (Thanks, @gpakosz and @nurse!) [MRI] Node#dup supports copying a node directly to a new document. See the method documentation for details. [MRI] DocumentFragment#dup is now more memory-efficient, avoiding making unnecessary copies. [#1063] [JRuby] NodeSet has been rewritten to improve performance! [#1795]","title":"Features"},{"location":"CHANGELOG.html#bug-fixes_1","text":"NodeSet#each now returns self instead of zero. [#1822] (Thanks, @olehif!) [MRI] Address a memory leak when using XML::Builder to create nodes with namespaces. [#1810] [MRI] Address a memory leak when unparenting a DTD. [#1784] (Thanks, @stevecheckoway!) [MRI] Use RbConfig::CONFIG instead of ::MAKEFILE_CONFIG to fix installations that use Makefile macros. [#1820] (Thanks, @nobu!) [JRuby] Decrease large memory usage when making nested XPath queries. [#1749] [JRuby] Fix failing tests on JRuby 9.2.x [JRuby] Fix default namespaces in nodes reparented into a different document [#1774] [JRuby] Fix support for Java 9. [#1759] (Thanks, @Taywee!)","title":"Bug fixes"},{"location":"CHANGELOG.html#dependencies_1","text":"[MRI] Upgrade mini_portile2 dependency from ~ 2.3.0 to ~ 2.4.0","title":"Dependencies"},{"location":"CHANGELOG.html#185-2018-10-04","text":"","title":"1.8.5 / 2018-10-04"},{"location":"CHANGELOG.html#security-notes_1","text":"[MRI] Pulled in upstream patches from libxml2 that address CVE-2018-14404 and CVE-2018-14567. Full details are available in #1785 . Note that these patches are not yet (as of 2018-10-04) in an upstream release of libxml2.","title":"Security Notes"},{"location":"CHANGELOG.html#bug-fixes_2","text":"[MRI] Fix regression in installation when building against system libraries, where some systems would not be able to find libxml2 or libxslt when present. (Regression introduced in v1.8.3.) [#1722] [JRuby] Fix node reparenting when the destination doc is empty. [#1773]","title":"Bug fixes"},{"location":"CHANGELOG.html#184-2018-07-03","text":"","title":"1.8.4 / 2018-07-03"},{"location":"CHANGELOG.html#bug-fixes_3","text":"[MRI] Fix memory leak when creating nodes with namespaces. (Introduced in v1.5.7) [#1771]","title":"Bug fixes"},{"location":"CHANGELOG.html#183-2018-06-16","text":"","title":"1.8.3 / 2018-06-16"},{"location":"CHANGELOG.html#security-notes_2","text":"[MRI] Behavior in libxml2 has been reverted which caused CVE-2018-8048 (loofah gem), CVE-2018-3740 (sanitize gem), and CVE-2018-3741 (rails-html-sanitizer gem). The commit in question is here: https://github.com/GNOME/libxml2/commit/960f0e2 and more information is available about this commit and its impact here: https://github.com/flavorjones/loofah/issues/144 This release simply reverts the libxml2 commit in question to protect users of Nokogiri's vendored libraries from similar vulnerabilities. If you're offended by what happened here, I'd kindly ask that you comment on the upstream bug report here: https://bugzilla.gnome.org/show_bug.cgi?id=769760","title":"Security Notes"},{"location":"CHANGELOG.html#dependencies_2","text":"[MRI] libxml2 is updated from 2.9.7 to 2.9.8","title":"Dependencies"},{"location":"CHANGELOG.html#features_2","text":"Node#classes, #add_class, #append_class, and #remove_class are added. NodeSet#append_class is added. NodeSet#remove_attribute is a new alias for NodeSet#remove_attr. NodeSet#each now returns an Enumerator when no block is passed (Thanks, @park53kr!) [JRuby] General improvements in JRuby implementation (Thanks, @kares!)","title":"Features"},{"location":"CHANGELOG.html#bug-fixes_4","text":"CSS attribute selectors now gracefully handle queries using integers. [#711] Handle ASCII-8BIT encoding on fragment input [#553] Handle non-string return values within Reader [#898] [JRuby] Allow Node#replace to insert Comment and CDATA nodes. [#1666] [JRuby] Stability and speed improvements to Node , Sax::PushParser , and the JRuby implementation [#1708, #1710, #1501]","title":"Bug fixes"},{"location":"CHANGELOG.html#182-2018-01-29","text":"","title":"1.8.2 / 2018-01-29"},{"location":"CHANGELOG.html#security-notes_3","text":"[MRI] The update of vendored libxml2 from 2.9.5 to 2.9.7 addresses at least one published vulnerability, CVE-2017-15412. [#1714 has complete details]","title":"Security Notes"},{"location":"CHANGELOG.html#dependencies_3","text":"[MRI] libxml2 is updated from 2.9.5 to 2.9.7 [MRI] libxslt is updated from 1.1.30 to 1.1.32","title":"Dependencies"},{"location":"CHANGELOG.html#features_3","text":"[MRI] OpenBSD installation should be a bit easier now. [#1685] (Thanks, @jeremyevans!) [MRI] Cross-built Windows gems now support Ruby 2.5","title":"Features"},{"location":"CHANGELOG.html#bug-fixes_5","text":"Node#serialize once again returns UTF-8-encoded strings. [#1659] [JRuby] made SAX parsing of characters consistent with C implementation [#1676] (Thanks, @andrew-aladev!) [MRI] Predefined entities, when inspected, no longer cause a segfault. [#1238]","title":"Bug fixes"},{"location":"CHANGELOG.html#181-2017-09-19","text":"","title":"1.8.1 / 2017-09-19"},{"location":"CHANGELOG.html#dependencies_4","text":"[MRI] libxml2 is updated from 2.9.4 to 2.9.5. [MRI] libxslt is updated from 1.1.29 to 1.1.30. [MRI] optional dependency on the pkg-config gem has had its constraint loosened to ~ 1.1 (from ~ 1.1.7 ). [#1660] [MRI] Upgrade mini_portile2 dependency from ~ 2.2.0 to ~ 2.3.0 , which will validate checksums on the vendored libxml2 and libxslt tarballs before using them.","title":"Dependencies"},{"location":"CHANGELOG.html#bugs","text":"NodeSet#first with an integer argument longer than the length of the NodeSet now correctly clamps the length of the returned NodeSet to the original length. [#1650] (Thanks, @Derenge!) [MRI] Ensure CData.new raises TypeError if the content argument is not implicitly convertible into a string. [#1669]","title":"Bugs"},{"location":"CHANGELOG.html#180-2017-06-04","text":"","title":"1.8.0 / 2017-06-04"},{"location":"CHANGELOG.html#backwards-incompatibilities_1","text":"This release ends support for Ruby 2.1 on Windows in the x86-mingw32 and x64-mingw32 platform gems (containing pre-compiled DLLs). Official support ended for Ruby 2.1 on 2017-04-01. Please note that this deprecation note only applies to the precompiled Windows gems. Ruby 2.1 continues to be supported (for now) in the default gem when compiled on installation.","title":"Backwards incompatibilities"},{"location":"CHANGELOG.html#dependencies_5","text":"[Windows] Upgrade iconv from 1.14 to 1.15 (unless --use-system-libraries) [Windows] Upgrade zlib from 1.2.8 to 1.2.11 (unless --use-system-libraries) [MRI] Upgrade rake-compiler dependency from 0.9.2 to 1.0.3 [MRI] Upgrade mini-portile2 dependency from ~ 2.1.0 to ~ 2.2.0","title":"Dependencies"},{"location":"CHANGELOG.html#compatibility-notes","text":"[JRuby] Removed support for jruby --1.8 code paths. [#1607] (Thanks, @kares!) [MRI Windows] Retrieve zlib source from http://zlib.net/fossils to avoid deprecation issues going forward. See #1632 for details around this problem.","title":"Compatibility notes"},{"location":"CHANGELOG.html#features_4","text":"NodeSet#clone is not an alias for NodeSet#dup [#1503] (Thanks, @stephankaag!) Allow Processing Instructions and Comments as children of a document root. [#1033] (Thanks, @windwiny!) [MRI] PushParser#replace_entities and #replace_entities= will control whether entities are replaced or not. [#1017] (Thanks, @spraints!) [MRI] SyntaxError#to_s now includes line number, column number, and log level if made available by the parser. [#1304, #1637] (Thanks, @spk and @ccarruitero!) [MRI] Cross-built Windows gems now support Ruby 2.4 [MRI] Support for frozen string literals. [#1413] [MRI] Support for installing Nokogiri on a machine in FIPS-enabled mode [#1544] [MRI] Vendored libraries are verified with SHA-256 hashes (formerly some MD5 hashes were used) [#1544] [JRuby] (performance) remove unnecessary synchronization of class-cache [#1563] (Thanks, @kares!) [JRuby] (performance) remove unnecessary cloning of objects in XPath searches [#1563] (Thanks, @kares!) [JRuby] (performance) more performance improvements, particularly in XPath, Reader, XmlNode, and XmlNodeSet [#1597] (Thanks, @kares!)","title":"Features"},{"location":"CHANGELOG.html#bugs_1","text":"HTML::SAX::Parser#parse_io now correctly parses HTML and not XML [#1577] (Thanks for the test case, @gregors!) Support installation on systems with a lib64 site config. [#1562] [MRI] on OpenBSD, do not require gcc if using system libraries [#1515] (Thanks, @jeremyevans!) [MRI] XML::Attr.new checks type of Document arg to prevent segfaults. [#1477] [MRI] Prefer xmlCharStrdup (and friends) to strdup (and friends), which can cause problems on some platforms. [#1517] (Thanks, @jeremy!) [JRuby] correctly append a text node before another text node [#1318] (Thanks, @jkraemer!) [JRuby] custom xpath functions returning an integer now work correctly [#1595] (Thanks, @kares!) [JRuby] serializing ( #to_html , #to_s , et al) a document with explicit encoding now works correctly. [#1281, #1440] (Thanks, @kares!) [JRuby] XML::Reader now returns parse errors [#1586] (Thanks, @kares!) [JRuby] Empty NodeSets are now decorated properly. [#1319] (Thanks, @kares!) [JRuby] Merged nodes no longer results in Java exceptions during XPath queries. [#1320] (Thanks, @kares!)","title":"Bugs"},{"location":"CHANGELOG.html#172-2017-05-09","text":"","title":"1.7.2 / 2017-05-09"},{"location":"CHANGELOG.html#security-notes_4","text":"[MRI] Upstream libxslt patches are applied to the vendored libxslt 1.1.29 which address CVE-2017-5029 and CVE-2016-4738. For more information: https://github.com/sparklemotion/nokogiri/issues/1634 http://people.canonical.com/~ubuntu-security/cve/2017/CVE-2017-5029.html http://people.canonical.com/~ubuntu-security/cve/2016/CVE-2016-4738.html","title":"Security Notes"},{"location":"CHANGELOG.html#171-2017-03-19","text":"","title":"1.7.1 / 2017-03-19"},{"location":"CHANGELOG.html#security-notes_5","text":"[MRI] Upstream libxml2 patches are applied to the vendored libxml 2.9.4 which address CVE-2016-4658 and CVE-2016-5131. For more information: https://github.com/sparklemotion/nokogiri/issues/1615 http://people.canonical.com/~ubuntu-security/cve/2016/CVE-2016-4658.html http://people.canonical.com/~ubuntu-security/cve/2016/CVE-2016-5131.html","title":"Security Notes"},{"location":"CHANGELOG.html#1701-2017-01-04","text":"","title":"1.7.0.1 / 2017-01-04"},{"location":"CHANGELOG.html#bugs_2","text":"Fix OpenBSD support. (#1569) (related to #1543)","title":"Bugs"},{"location":"CHANGELOG.html#170-2016-12-26","text":"","title":"1.7.0 / 2016-12-26"},{"location":"CHANGELOG.html#features_5","text":"Remove deprecation warnings in Ruby 2.4.0 (#1545) (Thanks, @matthewd!) Support egcc compiler on OpenBSD (#1543) (Thanks, @frenkel and @knu!)","title":"Features"},{"location":"CHANGELOG.html#backwards-incompatibilities_2","text":"This release ends support for: Ruby 1.9.2, for which official support ended on 2014-07-31 Ruby 1.9.3, for which official support ended on 2015-02-23 Ruby 2.0.0, for which official support ended on 2016-02-24 MacRuby, which hasn't been actively supported since 2015-01-13 (see https://github.com/MacRuby/MacRuby/commit/f76b9d6e99c18236db617e8aceb12c27d593a483 )","title":"Backwards incompatibilities."},{"location":"CHANGELOG.html#1681-2016-10-03","text":"","title":"1.6.8.1 / 2016-10-03"},{"location":"CHANGELOG.html#dependency-license-notes","text":"Removes required dependency on the pkg-config gem. This dependency was introduced in v1.6.8 and, because it's distributed under LGPL, was objectionable to many Nokogiri users (#1488, #1496). This version makes pkg-config an optional dependency. If it's installed, it's used; but otherwise Nokogiri will attempt to work around its absence.","title":"Dependency License Notes"},{"location":"CHANGELOG.html#168-2016-06-06","text":"","title":"1.6.8 / 2016-06-06"},{"location":"CHANGELOG.html#security-notes_6","text":"[MRI] Bundled libxml2 is upgraded to 2.9.4, which fixes many security issues. Many of these had previously been patched in the vendored libxml 2.9.2 in the 1.6.7.x branch, but some are newer. See these libxml2 email posts for more: https://mail.gnome.org/archives/xml/2015-November/msg00012.html https://mail.gnome.org/archives/xml/2016-May/msg00023.html For a more detailed analysis, you may care to read Canonical's take on these security issues: http://www.ubuntu.com/usn/usn-2994-1 [MRI] Bundled libxslt is upgraded to 1.1.29, which fixes a security issue as well as many long-known outstanding bugs, some features, some portability improvements, and general cleanup. See this libxslt email post for more: https://mail.gnome.org/archives/xslt/2016-May/msg00004.html","title":"Security Notes"},{"location":"CHANGELOG.html#features_6","text":"Several changes were made to improve performance: [MRI] Simplify NodeSet#to_a with a minor speed-up. (#1397) XML::Node#ancestors optimization. (#1297) (Thanks, Bruno Sutic!) Use Symbol#to_proc where we weren't previously. (#1296) (Thanks, Bruno Sutic!) XML::DTD#each uses implicit block calls. (Thanks, @glaucocustodio!) Fall back to the pkg-config gem if we're having trouble finding the system libxml2. This should help many FreeBSD users. (#1417) Set document encoding appropriately even on blank document. (#1043) (Thanks, @batter!)","title":"Features"},{"location":"CHANGELOG.html#bug-fixes_6","text":"[JRuby] fix slow add_child (#692) [JRuby] fix load errors when deploying to JRuby/Torquebox (#1114) (Thanks, @atambo and @jvshahid!) [JRuby] fix NPE when inspecting nodes returned by NodeSet#drop (#1042) (Thanks, @mkristian!) [JRuby] fix nil attriubte node's namespace in reader (#1327) (Thanks, @codekitchen!) [JRuby] fix Nokogiri munging unicode characters that require more than 2 bytes (#1113) (Thanks, @mkristian!) [JRuby] allow unlinking an unparented node (#1112, #1152) (Thanks, @esse!) [JRuby] allow Fragment parsing on a frozen string (#444, #1077) [JRuby] HTML style tags are no longer encoded (#1316) (Thanks, @tbeauvais!) [MRI] fix assertion failure while accessing attribute node's namespace in reader (#843) (Thanks, @2potatocakes!) [MRI] fix issue with GCing namespace nodes returned in an xpath query. (#1155) [MRI] Ensure C strings are null-terminated. (#1381) [MRI] Ensure Rubygems is loaded before using mini_portile2 at installation. (#1393, #1411) (Thanks, @JonRowe!) [MRI] Handling another edge case where the libxml-ruby gem's global callbacks were smashing the heap. (#1426). (Thanks to @bbergstrom for providing an isolated test case!) [MRI] Ensure encodings are passed to Sax::Parser xmldecl callback. (#844) [MRI] Ensure default ns prefix is applied correctly when reparenting nodes to another document. (#391) (Thanks, @ylecuyer!) [MRI] Ensure Reader handles non-existent attributes as expected. (#1254) (Thanks, @ccutrer!) [MRI] Cleanup around namespace handling when reparenting nodes. (#1332, #1333, #1444) (Thanks, @cuttrer and @bradleybeddoes!) unescape special characters in CSS queries (#1303) (Thanks, @twalpole!) consistently handle empty documents (#1349) Update to mini_portile2 2.1.0 to address whitespace-handling during patching. (#1402) Fix encoding of xml node namespaces. Work around issue installing Nokogiri on overlayfs (commonly used in Docker containers). (#1370, #1405)","title":"Bug Fixes"},{"location":"CHANGELOG.html#other-notes","text":"Removed legacy code remaining from Ruby 1.8.x support. Removed legacy code remaining from REE support. Removing hacky workarounds for bugs in some older versions of libxml2. Handling C strings in a forward-compatible manner, see https://github.com/ruby/ruby/blob/v2_2_0/NEWS#L319","title":"Other Notes"},{"location":"CHANGELOG.html#1672-2016-01-20","text":"This version pulls in several upstream patches to the vendored libxml2 and libxslt to address: CVE-2015-7499 Ubuntu classifies this as \"Priority: Low\", RedHat classifies this as \"Impact: Moderate\", and NIST classifies this as \"Severity: 5.0 (MEDIUM)\". MITRE record is https://cve.mitre.org/cgi-bin/cvename.cgi?name=CVE-2015-7499","title":"1.6.7.2 / 2016-01-20"},{"location":"CHANGELOG.html#1671-2015-12-16","text":"This version pulls in several upstream patches to the vendored libxml2 and libxslt to address: CVE-2015-5312 CVE-2015-7497 CVE-2015-7498 CVE-2015-7499 CVE-2015-7500 CVE-2015-8241 CVE-2015-8242 CVE-2015-8317 See also http://www.ubuntu.com/usn/usn-2834-1/","title":"1.6.7.1 / 2015-12-16"},{"location":"CHANGELOG.html#167-2015-11-29","text":"","title":"1.6.7 / 2015-11-29"},{"location":"CHANGELOG.html#notes","text":"This version supports native builds on Windows using the RubyInstaller DevKit. It also supports Ruby 2.2.x on Windows, as well as making several other improvements to the installation process on various platforms. This version also includes the security patches already applied in v1.6.6.3 and v1.6.6.4 to the vendored libxml2 and libxslt source. See #1374 and #1376 for details.","title":"Notes"},{"location":"CHANGELOG.html#features_7","text":"Cross-built gems now have a proper ruby version requirement. (#1266) Ruby 2.2.x is supported on Windows. Native build is supported on Windows. [MRI] libxml2 and libxslt config.guess files brought up to date. (#1326) (Thanks, @hernan-erasmo!) [JRuby] fix error in validating files with jruby (#1355, #1361) (Thanks, @twalpole!) [MRI, OSX] Patch to handle nonstandard location of iconv.h . (#1206, #1210, #1218, #1345) (Thanks, @neonichu!)","title":"Features"},{"location":"CHANGELOG.html#bug-fixes_7","text":"[JRuby] reset the namespace cache when replacing the document's innerHtml (#1265) (Thanks, @mkristian!) [JRuby] Document#parse should support IO objects that respond to #read. (#1124) (Thanks, Jake Byman!) [MRI] Duplicate-id errors when setting the id attribute on HTML documents are now silenced. (#1262) [JRuby] SAX parser cuts texts in pieces when square brackets exist. (#1261) [JRuby] Namespaced attributes aren't removed by remove_attribute. (#1299)","title":"Bug Fixes"},{"location":"CHANGELOG.html#1664-2015-11-19","text":"This version pulls in an upstream patch to the vendored libxml2 to address: unclosed comment uninitialized access issue (#1376) This issue was assigned CVE-2015-8710 after the fact. See http://seclists.org/oss-sec/2015/q4/616 for details.","title":"1.6.6.4 / 2015-11-19"},{"location":"CHANGELOG.html#1663-2015-11-16","text":"This version pulls in several upstream patches to the vendored libxml2 and libxslt to address: CVE-2015-1819 CVE-2015-7941_1 CVE-2015-7941_2 CVE-2015-7942 CVE-2015-7942-2 CVE-2015-8035 CVE-2015-7995 See #1374 for details.","title":"1.6.6.3 / 2015-11-16"},{"location":"CHANGELOG.html#1662-2015-01-23","text":"","title":"1.6.6.2 / 2015-01-23"},{"location":"CHANGELOG.html#bug-fixes_8","text":"Fixed installation issue affecting compiler arguments. (#1230)","title":"Bug fixes"},{"location":"CHANGELOG.html#1661-2015-01-22","text":"Note that 1.6.6.0 was not released.","title":"1.6.6.1 / 2015-01-22"},{"location":"CHANGELOG.html#features_8","text":"Unified Node and NodeSet implementations of #search, #xpath and #css. Added Node#lang and Node#lang=. bin/nokogiri passes the URI to parse() if an HTTP URL is given. bin/nokogiri now loads ~/.nokogirirc so user can define helper methods, etc. bin/nokogiri can be configured to use Pry instead of IRB by adding a couple of lines to ~/.nokogirirc. (#1198) bin/nokogiri can better handle urls from STDIN (aiding use of xargs). (#1065) JRuby 9K support.","title":"Features"},{"location":"CHANGELOG.html#bug-fixes_9","text":"DocumentFragment#search now matches against root nodes. (#1205) (MRI) More fixes related to handling libxml2 parse errors during DocumentFragment#dup. (#1196) (JRuby) Builder now handles namespace hrefs properly when there is a default ns. (#1039) (JRuby) Clear the XPath cache on attr removal. (#1109) XML::Comment.new argument types are now consistent and safe (and documented) across MRI and JRuby. (#1224) (MRI) Restoring support for Ruby 1.9.2 that was broken in v1.6.4.1 and v1.6.5. (#1207) Check if zlib is available before building libxml2 . (#1188) (JRuby) HtmlSaxPushParser now exists. (#1147) (Thanks, Piotr Szmielew!)","title":"Bug fixes"},{"location":"CHANGELOG.html#165-2014-11-26","text":"","title":"1.6.5 / 2014-11-26"},{"location":"CHANGELOG.html#features_9","text":"Implement Slop#respond_to_missing?. (#1176) Optimized the XPath query generated by an an+b CSS query.","title":"Features"},{"location":"CHANGELOG.html#bug-fixes_10","text":"Capture non-parse errors from Document#dup in Document#errors. (#1196) (JRuby) Document#canonicalize parameters are now consistent with MRI. (#1189)","title":"Bug fixes"},{"location":"CHANGELOG.html#1641-2014-11-05","text":"","title":"1.6.4.1 / 2014-11-05"},{"location":"CHANGELOG.html#bug-fixes_11","text":"(MRI) Fix a bug where CFLAGS passed in are dropped. (#1188) Fix a bug where CSS selector :nth(n) did not work. (#1187)","title":"Bug fixes"},{"location":"CHANGELOG.html#164-2014-11-04","text":"","title":"1.6.4 / 2014-11-04"},{"location":"CHANGELOG.html#features_10","text":"(MRI) Bundled Libxml2 is upgraded to 2.9.2. (MRI) nokogiri --version will include a list of applied patches. (MRI) Nokogiri no longer prints messages directly to TTY while building the extension. (MRI) Detect and help user fix a missing /usr/include/iconv.h on OS X. (#1111) (MRI) Improve the iconv detection for building libxml2.","title":"Features"},{"location":"CHANGELOG.html#bug-fixes_12","text":"(MRI) Fix DocumentFragment#element_children (#1138). Fix a bug with CSS attribute selector without any prefix where \"foo [bar]\" was treated as \"foo[bar]\". (#1174)","title":"Bug fixes"},{"location":"CHANGELOG.html#1631-2014-07-21","text":"","title":"1.6.3.1 / 2014-07-21"},{"location":"CHANGELOG.html#bug-fixes_13","text":"Addressing an Apple Macintosh installation problem for GCC users. #1130 (Thanks, @zenspider!)","title":"Bug fixes"},{"location":"CHANGELOG.html#163-2014-07-20","text":"","title":"1.6.3 / 2014-07-20"},{"location":"CHANGELOG.html#features_11","text":"Added Node#document? and Node#processing_instruction?","title":"Features"},{"location":"CHANGELOG.html#bug-fixes_14","text":"[JRuby] Fix Ruby memory exhaustion vulnerability. #1087 (Thanks, @ocher) [MRI] Fix segfault during GC when using libxml-ruby and nokogiri together in multi-threaded environment. #895 (Thanks, @ender672!) Building on OSX 10.9 stock ruby 2.0.0 now works. #1101 (Thanks, @zenspider!) Node#parse now works again for HTML document nodes (broken in 1.6.2+). Processing instructions can now be added via Node#add_next_sibling.","title":"Bug fixes"},{"location":"CHANGELOG.html#1621-2014-05-13","text":"","title":"1.6.2.1 / 2014-05-13"},{"location":"CHANGELOG.html#bug-fixes_15","text":"Fix statically-linked libxml2 installation when using universal builds of Ruby. #1104 Patching mini_portile to address the git dependency detailed in #1102. Library load fix to address segfault reported on some systems. #1097","title":"Bug fixes"},{"location":"CHANGELOG.html#162-2014-05-12","text":"","title":"1.6.2 / 2014-05-12"},{"location":"CHANGELOG.html#security-note","text":"A set of security and bugfix patches have been backported from the libxml2 and libxslt repositories onto the version of 2.8.0 packaged with Nokogiri, including these notable security fixes: https://git.gnome.org/browse/libxml2/commit/?id=4629ee02ac649c27f9c0cf98ba017c6b5526070f CVE-2013-2877 https://git.gnome.org/browse/libxml2/commit/?id=e50ba8164eee06461c73cd8abb9b46aa0be81869 CVE-2014-0191 https://git.gnome.org/browse/libxml2/commit/?id=9cd1c3cfbd32655d60572c0a413e017260c854df It is recommended that you upgrade from 1.6.x to this version as soon as possible.","title":"Security Note"},{"location":"CHANGELOG.html#compatibility-note","text":"Now requires libxml = 2.6.21 (was previously = 2.6.17).","title":"Compatibility Note"},{"location":"CHANGELOG.html#features_12","text":"Add cross building of fat binary gems for 64-Bit Windows (x64-mingw32) and add support for native builds on Windows. #864, #989, #1072 (MRI) Alias CP932 to Windows-31J if iconv does not support Windows-31J. (MRI) Nokogiri now links packaged libraries statically. To disable static linking, pass --disable-static to extconf.rb. #923 (MRI) Fix a library path (LIBPATH) precedence problem caused by CRuby bug #9760. (MRI) Nokogiri automatically deletes directories of packaged libraries only used during build. To keep them for debugging purposes, pass --disable-clean to extconf.rb. #952 (MRI) Nokogiri now builds libxml2 properly with iconv support on platforms where libiconv is installed outside the system default directories, such as FreeBSD. Add support for an-b in nth selectors. #886 (Thanks, Magnus Bergmark!) Add support for bare and multiple :not() functions in selectors. #887 (Thanks, Magnus Bergmark!) (MRI) Add an extconf.rb option --use-system-libraries, alternative to setting the environment variable NOKOGIRI_USE_SYSTEM_LIBRARIES. (MRI) Update packaged libraries: libxslt to 1.1.28, zlib to 1.2.8, and libiconv to 1.14, respectively. Nokogiri::HTML::Document#title= and #meta_encoding= now always add an element if not present, trying hard to find the best place to put it. Nokogiri::XML::DTD#html_dtd? and #html5_dtd? are added. Nokogiri::XML::Node#prepend_child is added. #664 Nokogiri::XML::SAX::ParserContext#recovery is added. #453 Fix documentation for XML::Node#namespace. #803 #802 (Thanks, Hoylen Sue) Allow Nokogiri::XML::Node#parse from unparented non-element nodes. #407","title":"Features"},{"location":"CHANGELOG.html#bugfixes","text":"Ensure :only-child pseudo class works within :not pseudo class. #858 (Thanks, Yamagishi Kazutoshi!) Don't call pkg_config when using bundled libraries in extconf.rb #931 (Thanks, Shota Fukumori!) Nokogiri.parse() does not mistake a non-HTML document like a RSS document as HTML document. #932 (Thanks, Yamagishi Kazutoshi!) (MRI) Perform a node type check before adding a child node to another. Previously adding a text node to another as a child could cause a SEGV. #1092 (JRuby) XSD validation crashes in Java version. #373 (JRuby) Document already has a root node error while using Builder. #646 (JRuby) c14n tests are all passing on JRuby. #226 Parsing empty documents raise SyntaxError in strict mode. #1005 (JRuby) Make xpath faster by caching the xpath context. #741 (JRuby) XML SAX push parser leaks memory on JRuby, but not on MRI. #998 (JRuby) Inconsistent behavior aliasing the default namespace. #940 (JRuby) Inconsistent behavior between parsing and adding namespaces. #943 (JRuby) Xpath returns inconsistent result set on cloned document with namespaces and attributes. #1034 (JRuby) Java-Implementation forgets element namespaces #902 (JRuby) JRuby-Nokogiri does not recognise attributes inside namespaces #1081 (JRuby) JRuby-Nokogiri has different comment node name #1080 (JRuby) JAXPExtensionsProvider / Java 7 / Secure Processing #1070","title":"Bugfixes"},{"location":"CHANGELOG.html#161-2013-12-14","text":"Bugfixes (JRuby) Fix out of memory bug when certain invalid documents are parsed. (JRuby) Fix regression of billion-laughs vulnerability. #586","title":"1.6.1 / 2013-12-14"},{"location":"CHANGELOG.html#160-2013-06-08","text":"This release was based on v1.5.10 and 1.6.0.rc1, and contains changes mentioned in both. Deprecations Remove pre 1.9 monitoring from Travis.","title":"1.6.0 / 2013-06-08"},{"location":"CHANGELOG.html#160rc1-2013-04-14","text":"This release was based on v1.5.9, and so does not contain any fixes mentioned in the notes for v1.5.10. Notes mini_portile is now a runtime dependency Ruby 1.9.2 and higher now required Features (MRI) Source code for libxml 2.8.0 and libxslt 1.2.26 is packaged with the gem. These libraries are compiled at gem install time unless the environment variable NOKOGIRI_USE_SYSTEM_LIBRARIES is set. VERSION_INFO (also nokogiri -v ) exposes whether libxml was compiled from packaged source, or the system library was used. (Windows) libxml upgraded to 2.8.0 Deprecations Support for Ruby 1.8.7 and prior has been dropped","title":"1.6.0.rc1 / 2013-04-14"},{"location":"CHANGELOG.html#1511-2013-12-14","text":"Bugfixes (JRuby) Fix out of memory bug when certain invalid documents are parsed. (JRuby) Fix regression of billion-laughs vulnerability. #586","title":"1.5.11 / 2013-12-14"},{"location":"CHANGELOG.html#1510-2013-06-07","text":"Bugfixes (JRuby) Fix \"null document\" error when parsing an empty IO in jruby 1.7.3. #883 (JRuby) Fix schema validation when XSD has DOCTYPE set to DTD. #912 (Thanks, Patrick Cheng!) (MRI) Fix segfault when there is no default subelement for an HTML node. #917 Notes Use rb_ary_entry instead of RARRAY_PTR (you know, for Rubinius). #877 (Thanks, Dirkjan Bussink!) Fix TypeError when running tests. #900 (Thanks, C\u00e9dric Boutillier!)","title":"1.5.10 / 2013-06-07"},{"location":"CHANGELOG.html#159-2013-03-21","text":"Bugfixes Ensure that prefixed attributes are properly namespaced when reparented. #869 Fix for inconsistent namespaced attribute access for SVG nested in HTML. #861 (MRI) Fixed a memory leak in fragment parsing if nodes are not all subsequently reparented. #856","title":"1.5.9 / 2013-03-21"},{"location":"CHANGELOG.html#158-2013-03-19","text":"Bugfixes (JRuby) Fix EmptyStackException thrown by elements with xlink:href attributes and no base_uri #534, #805. (Thanks, Patrick Quinn and Brian Hoffman!) Fixes duplicate attributes issue introduced in 1.5.7. #865 Allow use of a prefixed namespace on a root node using Nokogiri::XML::Builder #868","title":"1.5.8 / 2013-03-19"},{"location":"CHANGELOG.html#157-2013-03-18","text":"Features Windows support for Ruby 2.0. Bugfixes SAX::Parser.parse_io throw an error when used with lower case encoding. #828 (JRuby) Java Nokogiri is finally green (passes all tests) under 1.8 and 1.9 mode. High five everyone. #798, #705 (JRuby) Nokogiri::XML::Reader broken (as a pull parser) on jruby - reads the whole XML document. #831 (JRuby) JRuby hangs parsing \" \". #837 (JRuby) JRuby NPE parsing an invalid XML instruction. #838 (JRuby) Node#content= incompatibility. #839 (JRuby) to_xhtml doesn't print the last slash for self-closing tags in JRuby. #834 (JRuby) Adding an EntityReference after a Text node mangles the entity in JRuby. #835 (JRuby) JRuby version inconsistency: nil for empty attributes. #818 CSS queries for classes (e.g., \".foo\") now treat all whitespace identically. #854 Namespace behavior cleaned up and made consistent between JRuby and MRI. #846, #801 (Thanks, Michael Klein!) (MRI) SAX parser handles empty processing instructions. #845","title":"1.5.7 / 2013-03-18"},{"location":"CHANGELOG.html#156-2012-12-19","text":"Features Improved performance of XML::Document#collect_namespaces. #761 (Thanks, Juergen Mangler!) New callback SAX::Document#processing_instruction (Thanks, Kitaiti Makoto!) Node#native_content= allows setting unescaped node contant. #768 XPath lookup with namespaces supports symbol keys. #729 (Thanks, Ben Langfeld.) XML::Node#[]= stringifies values. #729 (Thanks, Ben Langfeld.) bin/nokogiri will process a document from $stdin bin/nokogiri -e will execute a program from the command line (JRuby) bin/nokogiri --version will print the Xerces and NekoHTML versions. Bugfixes Nokogiri now detects XSLT transform errors. #731 (Thanks, Justin Fitzsimmons!) Don't throw an Error when trying to replace top-level text node in DocumentFragment. #775 Raise an ArgumentError if an invalid encoding is passed to the SAX parser. #756 (Thanks, Bradley Schaefer!) Prefixed element inconsistency between CRuby and JRuby. #712 (JRuby) space prior to xml preamble causes nokogiri to fail parsing. (fixed along with #748) #790 (JRuby) Fixed the bug Nokogiri::XML::Node#content inconsistency between Java and C. #794, #797 (JRuby) raises INVALID_CHARACTER_ERR exception when EntityReference name starts with '#'. #719 (JRuby) doesn't coerce namespaces out of strings on a direct subclass of Node. #715 (JRuby) Node#content now renders newlines properly. #737 (Thanks, Piotr Szmielew!) (JRuby) Unknown namespace are ignore when the recover option is used. #748 (JRuby) XPath queries for namespaces should not throw exceptions when called twice in a row. #764 (JRuby) More consistent (with libxml2) whitespace formatting when emitting XML. #771 (JRuby) namespaced attributes broken when appending raw xml to builder. #770 (JRuby) Nokogiri::XML::Document#wrap raises undefined method `length' for nil:NilClass when trying to to a node. #781 (JRuby) Fixed \"bad file descriptor\" bug when closing open file descriptors. #495 (JRuby) JRuby/CRuby incompatibility for attribute decorators. #785 (JRuby) Issues parsing valid XML with no internal subset in the DTD. #547, #811 (JRuby) Issues parsing valid node content when it contains colons. #728 (JRuby) Correctly parse the doc type of html documents. #733 (JRuby) Include dtd in the xml output when a builder is used with create_internal_subset. #751 (JRuby) builder requires textwrappers for valid utf8 in jruby, not in mri. #784","title":"1.5.6 / 2012-12-19"},{"location":"CHANGELOG.html#155-2012-06-24","text":"Features Much-improved support for JRuby in 1.9 mode! Yay! Bugfixes Regression in JRuby Nokogiri add_previous_sibling (1.5.0 - 1.5.1) #691 (Thanks, John Shahid!) JRuby unable to create HTML doc if URL arg provided #674 (Thanks, John Shahid!) JRuby raises NullPointerException when given HTML document is nil or empty string. #699 JRuby 1.9 error, uncaught throw 'encoding_found', has been fixed. #673 Invalid encoding returned in JRuby with US-ASCII. #583 XmlSaxPushParser raises IndexOutOfBoundsException when over 512 characters are given. #567, #615 When xpath evaluation returns empty NodeSet, decorating NodeSet's base document raises exception. #514 JRuby raises exception when xpath with namespace is specified. pull request #681 (Thanks, Piotr Szmielew) JRuby renders nodes without their namespace when subclassing Node. #695 JRuby raises NAMESPACE_ERR (org.w3c.dom.DOMException) while instantiating RDF::RDFXML::Writer. #683 JRuby is not able to use namespaces in xpath. #493 JRuby's Entity resolving should be consistent with C-Nokogiri #704, #647, #703","title":"1.5.5 / 2012-06-24"},{"location":"CHANGELOG.html#154-2012-06-12","text":"Features The \"nokogiri\" script now has more verbose output when passed the --rng option. #675 (Thanks, Dan Radez!) Build support on hardened Debian systems that use -Werror=format-security . #680. Better build support for systems with pkg-config. #584 Better build support for systems with multiple iconv installations. Bugfixes Segmentation fault when creating a comment node for a DocumentFragment. #677, #678. Treat '.' as xpath in at() and search(). #690 (MRI, Security) Default parse options for XML documents were changed to not make network connections during document parsing, to avoid XXE vulnerability. #693 To re-enable this behavior, the configuration method nononet may be called, like this: Nokogiri::XML::Document.parse(xml) { |config| config.nononet } Insert your own joke about double-negatives here.","title":"1.5.4 / 2012-06-12"},{"location":"CHANGELOG.html#153-2012-06-01","text":"Features Support for \"prefixless\" CSS selectors ~, and + like jQuery supports. #621, #623. (Thanks, David Lee!) Attempting to improve installation on homebrew 0.9 (with regards to iconv). Isn't package management convenient? Bugfixes Custom xpath functions with empty nodeset arguments cause a segfault. #634. Nokogiri::XML::Node#css now works for XML documents with default namespaces when the rule contains attribute selector without namespace. Fixed marshalling bugs around how arguments are passed to (and returned from) XSLT custom xpath functions. #640. Nokogiri::XML::Reader#outer_xml is broken in JRuby #617 Nokogiri::XML::Attribute on JRuby returns a nil namespace #647 Nokogiri::XML::Node#namespace= cannot set a namespace without a prefix on JRuby #648 (JRuby) 1.9 mode causes dead lock while running rake #571 HTML::Document#meta_encoding does not raise exception on docs with malformed content-type. #655 Fixing segfault related to unsupported encodings in in-context parsing on 1.8.7. #643 (JRuby) Concurrency issue in XPath parsing. #682","title":"1.5.3 / 2012-06-01"},{"location":"CHANGELOG.html#152-2012-03-09","text":"Repackaging of 1.5.1 with a gemspec that is compatible with older Rubies. #631, #632.","title":"1.5.2 / 2012-03-09"},{"location":"CHANGELOG.html#151-2012-03-09","text":"Features XML::Builder#comment allows creation of comment nodes. CSS searches now support namespaced attributes. #593 Java integration feature is added. Now, XML::Document.wrap and XML::Document#to_java methods are available. RelaxNG validator support in the nokogiri cli utility. #591 (thanks, Dan Radez!) Bugfixes Fix many memory leaks and segfault opportunities. Thanks, Tim Elliott! extconf searches homebrew paths if homebrew is installed. Inconsistent behavior of Nokogiri 1.5.0 Java #620 Inheriting from Nokogiri::XML::Node on JRuby (1.6.4/5) fails #560 XML::Attr nodes are not allowed to be added as node children, so an exception is raised. #558 No longer defensively \"pickle\" adjacent text nodes on Node#add_next_sibling and Node#add_previous_sibling calls. #595. Java version inconsistency: it returns nil for empty attributes #589 to_xhtml incorrectly generates when tag is empty #557 Document#add_child now accepts a Node, NodeSet, DocumentFragment, or String. #546. Document#create_element now recognizes namespaces containing non-word characters (like \"SOAP-ENV\"). This is mostly relevant to users of Builder, which calls Document#create_element for nearly everything. #531. File encoding broken in 1.5.0 / jruby / windows #529 Java version does not return namespace defs as attrs for ::HTML #542 Bad file descriptor with Nokogiri 1.5.0 #495 remove_namespace! doesn't work in pure java version #492 The Nokogiri Java native build throws a null pointer exception when ActiveSupport's .blank? method is called directly on a parsed object. #489 1.5.0 Not using correct character encoding #488 Raw XML string in XML Builder broken on JRuby #486 Nokogiri 1.5.0 XML generation broken on JRuby #484 Do not allow multiple root nodes. #550 Fixes for custom XPath functions. #605, #606 (thanks, Juan Wajnerman!) Node#to_xml does not override :save_with if it is provided. #505 Node#set is a private method (JRuby). #564 (thanks, Nick Sieger!) C14n cleanup and Node#canonicalize (thanks, Ivan Pirlik!) #563","title":"1.5.1 / 2012-03-09"},{"location":"CHANGELOG.html#150-2011-07-01","text":"Notes See changelog from 1.4.7 Features extracted sets of Node::SaveOptions into Node::SaveOptions::DEFAULT_{X,H,XH}TML (refactor) Bugfixes default output of XML on JRuby is no longer formatted due to inconsistent whitespace handling. #415 (JRuby) making empty NodeSets with null nodes member safe to operate on. #443 Fix a bug in advanced encoding detection that leads to partially duplicated document when parsing an HTML file with unknown encoding. Add support for .","title":"1.5.0 / 2011-07-01"},{"location":"CHANGELOG.html#150-beta3-20101202","text":"Notes JRuby performance tuning See changelog from 1.4.4 Bugfixes Node#inner_text no longer returns nil. (JRuby) #264","title":"1.5.0 beta3 / 2010/12/02"},{"location":"CHANGELOG.html#150-beta2-20100730","text":"Notes See changelog from 1.4.3","title":"1.5.0 beta2 / 2010/07/30"},{"location":"CHANGELOG.html#150-beta1-20100522","text":"Notes JRuby support is provided by a new pure-java backend. Deprecations Ruby 1.8.6 is deprecated. Nokogiri will install, but official support is ended. LibXML 2.6.16 and earlier are deprecated. Nokogiri will refuse to install. FFI support is removed.","title":"1.5.0 beta1 / 2010/05/22"},{"location":"CHANGELOG.html#147-2011-07-01","text":"Bugfixes Fix a bug in advanced encoding detection that leads to partially duplicated document when parsing an HTML file with unknown encoding. Thanks, Timothy Elliott (@ender672)! #478","title":"1.4.7 / 2011-07-01"},{"location":"CHANGELOG.html#146-2011-06-19","text":"Notes This version is functionally identical to 1.4.5. Ruby 1.8.6 support has been restored.","title":"1.4.6 / 2011-06-19"},{"location":"CHANGELOG.html#145-2011-05-19","text":"New Features Nokogiri::HTML::Document#title accessor gets and sets the document title. extracted sets of Node::SaveOptions into Node::SaveOptions::DEFAULT_{X,H,XH}TML (refactor) Raise an exception if a string is passed to Nokogiri::XML::Schema#validate. #406 Bugfixes Node#serialize-and-friends now accepts a SaveOption object as the, erm, save object. Nokogiri::CSS::Parser has-a Nokogiri::CSS::Tokenizer (JRUBY+FFI only) Weak references are now threadsafe. #355 Make direct start_element() callback (currently used for HTML::SAX::Parser) pass attributes in assoc array, just as emulated start_element() callback does. rel. #356 HTML::SAX::Parser should call back a block given to parse*() if any, just as XML::SAX::Parser does. Add further encoding detection to HTML parser that libxml2 does not do. Document#remove_namespaces! now handles attributes with namespaces. #396 XSLT::Stylesheet#transform no longer segfaults when handed a non-XML::Document. #452 XML::Reader no longer segfaults when under GC pressure. #439","title":"1.4.5 / 2011-05-19"},{"location":"CHANGELOG.html#144-2010-11-15","text":"New Features XML::Node#children= sets the node's inner html (much like #inner_html=), but returns the reparent node(s). XSLT supports function extensions. #336 XPath bind parameter substitution. #329 XML::Reader node type constants. #369 SAX Parser context provides line and column information Bugfixes XML::DTD#attributes returns an empty hash instead of nil when there are no attributes. XML::DTD#{keys,each} now work as expected. #324 {XML,HTML}::DocumentFragment.{new,parse} no longer strip leading and trailing whitespace. #319 XML::Node#{add_child,add_previous_sibling,add_next_sibling,replace} return a NodeSet when passed a string. Unclosed tags parsed more robustly in fragments. #315 XML::Node#{replace,add_previous_sibling,add_next_sibling} edge cases fixed related to libxml's text node merging. #308 Fixed a segfault when GC occurs during xpath handler argument marshalling. #345 Added hack to Slop decorator to work with previously defined methods. #330 Fix a memory leak when duplicating child nodes. #353 Fixed off-by-one bug with nth-last-{child,of-type} CSS selectors when NOT using an+b notation. #354 Fixed passing of non-namespace attributes to SAX::Document#start_element. #356 Workaround for libxml2 in-context parsing bug. #362 Fixed NodeSet#wrap on nodes within a fragment. #331","title":"1.4.4 / 2010-11-15"},{"location":"CHANGELOG.html#143-20100728","text":"New Features XML::Reader#empty_element? returns true for empty elements. #262 Node#remove_namespaces! now removes namespace declarations as well. #294 NodeSet#at_xpath, NodeSet#at_css and NodeSet# do what the corresponding methods of Node do. Bugfixes XML::NodeSet#{include?,delete,push} accept an XML::Namespace XML::Document#parse added for parsing in the context of a document XML::DocumentFragment#inner_html= works with contextual parsing! #298, #281 lib/nokogiri/css/parser.y Combined CSS functions + pseudo selectors fixed Reparenting text nodes is safe, even when the operation frees adjacent merged nodes. #283 Fixed libxml2 versionitis issue with xmlFirstElementChild et al. #303 XML::Attr#add_namespace now works as expected. #252 HTML::DocumentFragment uses the string's encoding. #305 Fix the CSS3 selector translation rule for the general sibling combinator (a.k.a. preceding selector) that incorrectly converted \"E ~ F G\" to \"//F//G[preceding-sibling::E]\".","title":"1.4.3 / 2010/07/28"},{"location":"CHANGELOG.html#142-20100522","text":"New Features XML::Node#parse will parse XML or HTML fragments with respect to the context node. XML::Node#namespaces returns all namespaces defined in the node and all ancestor nodes (previously did not return ancestors' namespace definitions). Added Enumerable to XML::Node Nokogiri::XML::Schema#validate now uses xmlSchemaValidateFile if a filename is passed, which is faster and more memory-efficient. GH #219 XML::Document#create_entity will create new EntityDecl objects. GH #174 JRuby FFI implementation no longer uses ObjectSpace._id2ref, instead using Charles Nutter's rocking Weakling gem. Nokogiri::XML::Node#first_element_child fetch the first child node that is an ELEMENT node. Nokogiri::XML::Node#last_element_child fetch the last child node that is an ELEMENT node. Nokogiri::XML::Node#elements fetch all children nodes that are ELEMENT nodes. Nokogiri::XML::Node#add_child, #add_previous_sibling, #before, #add_next_sibling, #after, #inner_html, #swap and #replace all now accept a Node, DocumentFragment, NodeSet, or a string containing markup. Node#fragment? indicates whether a node is a DocumentFragment. Bugfixes XML::NodeSet is now always decorated (if the document has decorators). GH #198 XML::NodeSet#slice gracefully handles offset+length larger than the set length. GH #200 XML::Node#content= safely unlinks previous content. GH #203 XML::Node#namespace= takes nil as a parameter XML::Node#xpath returns things other than NodeSet objects. GH #208 XSLT::StyleSheet#transform accepts hashes for parameters. GH #223 Psuedo selectors inside not() work. GH #205 XML::Builder doesn't break when nodes are unlinked. Thanks to vihai! GH #228 Encoding can be forced on the SAX parser. Thanks Eugene Pimenov! GH #204 XML::DocumentFragment uses XML::Node#parse to determine children. Fixed a memory leak in xml reader. Thanks sdor! GH #244 Node#replace returns the new child node as claimed in the RDoc. Previously returned +self+. Notes The Windows gems now bundle DLLs for libxml 2.7.6 and libxslt 1.1.26. Prior to this release, libxml 2.7.3 and libxslt 1.1.24 were bundled.","title":"1.4.2 / 2010/05/22"},{"location":"CHANGELOG.html#141-20091210","text":"New Features Added Nokogiri::LIBXML_ICONV_ENABLED Alias Node#[] to Node#attr XML::Node#next_element added XML::Node# added for searching a nodes immediate children XML::NodeSet#reverse added Added fragment support to Node#add_child, Node#add_next_sibling, Node#add_previous_sibling, and Node#replace. XML::Node#previous_element implemented Rubinius support Ths CSS selector engine now supports :has() XML::NodeSet#filter() was added XML::Node.next= and .previous= are aliases for add_next_sibling and add_previous_sibling. GH #183 Bugfixes XML fragments with namespaces do not raise an exception (regression in 1.4.0) Node#matches? works in nodes contained by a DocumentFragment. GH #158 Document should not define add_namespace() method. GH #169 XPath queries returning namespace declarations do not segfault. Node#replace works with nodes from different documents. GH #162 Adding XML::Document#collect_namespaces Fixed bugs in the SOAP4R adapter Fixed bug in XML::Node#next_element for certain edge cases Fixed load path issue with JRuby under Windows. GH #160. XSLT#apply_to will honor the \"output method\". Thanks richardlehane! Fragments containing leading text nodes with newlines now parse properly. GH #178.","title":"1.4.1 / 2009/12/10"},{"location":"CHANGELOG.html#140-20091030","text":"Happy Birthday! New Features Node#at_xpath returns the first element of the NodeSet matching the XPath expression. Node#at_css returns the first element of the NodeSet matching the CSS selector. NodeSet#| for unions GH #119 (Thanks Serabe!) NodeSet#inspect makes prettier output Node#inspect implemented for more rubyish document inspecting Added XML::DTD#external_id Added XML::DTD#system_id Added XML::ElementContent for DTD Element content validity Better namespace declaration support in Nokogiri::XML::Builder Added XML::Node#external_subset Added XML::Node#create_external_subset Added XML::Node#create_internal_subset XML Builder can append raw strings (GH #141, patch from dudleyf) XML::SAX::ParserContext added XML::Document#remove_namespaces! for the namespace-impaired Bugfixes returns nil when HTML documents do not declare a meta encoding tag. GH #115 Uses RbConfig::CONFIG['host_os'] to adjust ENV['PATH'] GH #113 NodeSet#search is more efficient GH #119 (Thanks Serabe!) NodeSet#xpath handles custom xpath functions Fixing a SEGV when XML::Reader gets attributes for current node Node#inner_html takes the same arguments as Node#to_html GH #117 DocumentFragment#css delegates to it's child nodes GH #123 NodeSet#[] works with slices larger than NodeSet#length GH #131 Reparented nodes maintain their namespace. GH #134 Fixed SEGV when adding an XML::Document to NodeSet XML::SyntaxError can be duplicated. GH #148 Deprecations Hpricot compatibility layer removed","title":"1.4.0 / 2009/10/30"},{"location":"CHANGELOG.html#133-20090726","text":"New Features NodeSet#children returns all children of all nodes Bugfixes Override libxml-ruby's global error handler ParseOption#strict fixed Fixed a segfault when sending an empty string to Node#inner_html= GH #88 String encoding is now set to UTF-8 in Ruby 1.9 Fixed a segfault when moving root nodes between documents. GH #91 Fixed an O(n) penalty on node creation. GH #101 Allowing XML documents to be output as HTML documents Deprecations Hpricot compatibility layer will be removed in 1.4.0","title":"1.3.3 / 2009/07/26"},{"location":"CHANGELOG.html#132-2009-06-22","text":"New Features Nokogiri::XML::DTD#validate will validate your document Bugfixes Nokogiri::XML::NodeSet#search will search top level nodes. GH #73 Removed namespace related methods from Nokogiri::XML::Document Fixed a segfault when a namespace was added twice Made nokogiri work with Snow Leopard GH #79 Mailing list has moved to: http://groups.google.com/group/nokogiri-talk HTML fragments now correctly handle comments and CDATA blocks. GH #78 Nokogiri::XML::Document#clone is now an alias of dup Deprecations Nokogiri::XML::SAX::Document#start_element_ns is deprecated, please switch to Nokogiri::XML::SAX::Document#start_element_namespace Nokogiri::XML::SAX::Document#end_element_ns is deprecated, please switch to Nokogiri::XML::SAX::Document#end_element_namespace","title":"1.3.2 / 2009-06-22"},{"location":"CHANGELOG.html#131-2009-06-07","text":"Bugfixes extconf.rb checks for optional RelaxNG and Schema functions Namespace nodes are added to the Document node cache","title":"1.3.1 / 2009-06-07"},{"location":"CHANGELOG.html#130-2009-05-30","text":"New Features Builder changes scope based on block arity Builder supports methods ending in underscore similar to tagz Nokogiri::XML::Node# = compares nodes based on Document position Nokogiri::XML::Node#matches? returns true if Node can be found with given selector. Nokogiri::XML::Node#ancestors now returns an Nokogiri::XML::NodeSet Nokogiri::XML::Node#ancestors will match parents against optional selector Nokogiri::HTML::Document#meta_encoding for getting the meta encoding Nokogiri::HTML::Document#meta_encoding= for setting the meta encoding Nokogiri::XML::Document#encoding= to set the document encoding Nokogiri::XML::Schema for validating documents against XSD schema Nokogiri::XML::RelaxNG for validating documents against RelaxNG schema Nokogiri::HTML::ElementDescription for fetching HTML element descriptions Nokogiri::XML::Node#description to fetch the node description Nokogiri::XML::Node#accept implements Visitor pattern bin/nokogiri for easily examining documents (Thanks Yutaka HARA!) Nokogiri::XML::NodeSet now supports more Array and Enumerable operators: index, delete, slice, - (difference), + (concatenation), (intersection), push, pop, shift, == Nokogiri.XML, Nokogiri.HTML take blocks that receive Nokogiri::XML::ParseOptions objects Nokogiri::XML::Node#namespace returns a Nokogiri::XML::Namespace Nokogiri::XML::Node#namespace= for setting a node's namespace Nokogiri::XML::DocumentFragment and Nokogiri::HTML::DocumentFragment have a sensible API and a more robust implementation. JRuby 1.3.0 support via FFI. Bugfixes Fixed a problem with nil passed to CDATA constructor Fragment method deals with regular expression characters (Thanks Joel!) LH #73 Fixing builder scope issues LH #61, LH #74, LH #70 Fixed a problem when adding a child could remove the child namespace LH#78 Fixed bug with unlinking a node then reparenting it. (GH#22) Fixed failure to catch errors during XSLT parsing (GH#32) Fixed a bug with attribute conditions in CSS selectors (GH#36) Fixed intolerance of HTML attributes without values in Node#before/after/inner_html=. (GH#35)","title":"1.3.0 / 2009-05-30"},{"location":"CHANGELOG.html#123-2009-03-22","text":"Bugfixes Fixing bug where a node is passed in to Node#new Namespace should be assigned on DocumentFragment creation. LH #66 Nokogiri::XML::NodeSet#dup works GH #10 Nokogiri::HTML returns an empty Document when given a blank string GH#11 Adding a child will remove duplicate namespace declarations LH #67 Builder methods take a hash as a second argument","title":"1.2.3 / 2009-03-22"},{"location":"CHANGELOG.html#122-2009-03-14","text":"New features Nokogiri may be used with soap4r. See XSD::XMLParser::Nokogiri Nokogiri::XML::Node#inner_html= to set the inner html for a node Nokogiri builder interface improvements Nokogiri::XML::Node#swap swaps html for current node (LH #50) Bugfixes Fixed a tag nesting problem in the Builder API (LH #41) Nokogiri::HTML.fragment will properly handle text only nodes (LH #43) Nokogiri::XML::Node#before will prepend text nodes (LH #44) Nokogiri::XML::Node#after will append text nodes Nokogiri::XML::Node#search automatically registers root namespaces (LH #42) Nokogiri::XML::NodeSet#search automatically registers namespaces Nokogiri::HTML::NamedCharacters delegates to libxml2 Nokogiri::XML::Node#[] can take a symbol (LH #48) vasprintf for windows updated. Thanks Geoffroy Couprie! Nokogiri::XML::Node#[]= should not encode entities (LH #55) Namespaces should be copied to reparented nodes (LH #56) Nokogiri uses encoding set on the string for default in Ruby 1.9 Document#dup should create a new document of the same type (LH #59) Document should not have a parent method (LH #64)","title":"1.2.2 / 2009-03-14"},{"location":"CHANGELOG.html#121-2009-02-23","text":"Bugfixes Fixed a CSS selector space bug Fixed Ruby 1.9 String Encoding (Thanks \u89d2\u8c37\u3055\u3093\uff01)","title":"1.2.1 / 2009-02-23"},{"location":"CHANGELOG.html#120-2009-02-22","text":"New features CSS search now supports CSS3 namespace queries Namespaces on the root node are automatically registered CSS queries use the default namespace Nokogiri::XML::Document#encoding get encoding used for this document Nokogiri::XML::Document#url get the document url Nokogiri::XML::Node#add_namespace add a namespace to the node LH#38 Nokogiri::XML::Node#each iterate over attribute name, value pairs Nokogiri::XML::Node#keys get all attribute names Nokogiri::XML::Node#line get the line number for a node (Thanks Dirkjan Bussink!) Nokogiri::XML::Node#serialize now takes an optional encoding parameter Nokogiri::XML::Node#to_html, to_xml, and to_xhtml take an optional encoding Nokogiri::XML::Node#to_str Nokogiri::XML::Node#to_xhtml to produce XHTML documents Nokogiri::XML::Node#values get all attribute values Nokogiri::XML::Node#write_to writes the node to an IO object with optional encoding Nokogiri::XML::ProcessingInstrunction.new Nokogiri::XML::SAX::PushParser for all your push parsing needs. Bugfixes Fixed Nokogiri::XML::Document#dup Fixed header detection. Thanks rubikitch! Fixed a problem where invalid CSS would cause the parser to hang Deprecations Nokogiri::XML::Node.new_from_str will be deprecated in 1.3.0 API Changes Nokogiri::HTML.fragment now returns an XML::DocumentFragment (LH #32)","title":"1.2.0 / 2009-02-22"},{"location":"CHANGELOG.html#111","text":"New features Added XML::Node#elem? Added XML::Node#attribute_nodes Added XML::Attr XML::Node#delete added. XML::NodeSet#inner_html added. Bugfixes Not including an HTML entity for \\r for HTML nodes. Removed CSS::SelectorHandler and XML::XPathHandler XML::Node#attributes returns an Attr node for the value. XML::NodeSet implements to_xml","title":"1.1.1"},{"location":"CHANGELOG.html#110","text":"New Features Custom XPath functions are now supported. See Nokogiri::XML::Node#xpath Custom CSS pseudo classes are now supported. See Nokogiri::XML::Node#css Nokogiri::XML::Node# will add a child to the current node Bugfixes Mutex lock on CSS cache access Fixed build problems with GCC 3.3.5 XML::Node#to_xml now takes an indentation argument XML::Node#dup takes an optional depth argument XML::Node#add_previous_sibling returns new sibling node.","title":"1.1.0"},{"location":"CHANGELOG.html#107","text":"Bugfixes Fixed memory leak when using Dike SAX parser now parses IO streams Comment nodes have their own class Nokogiri() should delegate to Nokogiri.parse() Prepending rather than appending to ENV['PATH'] on windows Fixed a bug in complex CSS negation selectors","title":"1.0.7"},{"location":"CHANGELOG.html#106","text":"5 Bugfixes XPath Parser raises a SyntaxError on parse failure CSS Parser raises a SyntaxError on parse failure filter() and not() hpricot compatibility added CSS searches via Node#search are now always relative CSS to XPath conversion is now cached","title":"1.0.6"},{"location":"CHANGELOG.html#105","text":"Bugfixes Added mailing list and ticket tracking information to the README.txt Sets ENV['PATH'] on windows if it doesn't exist Caching results of NodeSet#[] on Document","title":"1.0.5"},{"location":"CHANGELOG.html#104","text":"Bugfixes Changed memory management from weak refs to document refs Plugged some memory leaks Builder blocks can call methods from surrounding contexts","title":"1.0.4"},{"location":"CHANGELOG.html#103","text":"5 Bugfixes NodeSet now implements to_ary XML::Document should not implement parent More GC Bugs fixed. (Mike is AWESOME!) Removed RARRAY_LEN for 1.8.5 compatibility. Thanks Shane Hanna. inner_html fixed. (Thanks Yehuda!)","title":"1.0.3"},{"location":"CHANGELOG.html#102","text":"1 Bugfix extconf.rb should not check for frex and racc","title":"1.0.2"},{"location":"CHANGELOG.html#101","text":"1 Bugfix Made sure extconf.rb searched libdir and prefix so that ports libxml/ruby will link properly. Thanks lucsky!","title":"1.0.1"},{"location":"CHANGELOG.html#100-2008-07-13","text":"1 major enhancement Birthday!","title":"1.0.0 / 2008-07-13"},{"location":"LICENSE-DEPENDENCIES.html","text":"Vendored Dependency Licenses Nokogiri ships with some third party dependencies, which are listed here along with their licenses. Note that this document is broken into three sections, each of which will apply to different platform releases of Nokogiri: default platform release java platform release binary windows platform releases ( x86-mingw32 and x64-mingw32 ) It's encouraged for anyone consuming this file via license-tracking software to understand which dependencies are used by your particular software, so as not to misinterpret the contents of this file. In particular, I'm sure somebody's lawyer, somewhere, is going to freak out that the LGPL appears in this file; and so I'd like to take special note that the dependency covered by LGPL, libiconv , is only being redistributed in the binary Windows platform release. It's not present in any non-Windows releases. default platform release libxml2 MIT http://xmlsoft.org/ Except where otherwise noted in the source code (e.g. the files hash.c, list.c and the trio files, which are covered by a similar licence but with different Copyright notices) all the files are: Copyright (C) 1998-2012 Daniel Veillard. All Rights Reserved. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the Software ), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is fur- nished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED AS IS , WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FIT- NESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. libxslt MIT http://xmlsoft.org/libxslt/ Licence for libxslt except libexslt ---------------------------------------------------------------------- Copyright (C) 2001-2002 Daniel Veillard. All Rights Reserved. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the Software ), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is fur- nished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED AS IS , WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FIT- NESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE DANIEL VEILLARD BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CON- NECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Except as contained in this notice, the name of Daniel Veillard shall not be used in advertising or otherwise to promote the sale, use or other deal- ings in this Software without prior written authorization from him. ---------------------------------------------------------------------- Licence for libexslt ---------------------------------------------------------------------- Copyright (C) 2001-2002 Thomas Broyer, Charlie Bozeman and Daniel Veillard. All Rights Reserved. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the Software ), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is fur- nished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED AS IS , WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FIT- NESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CON- NECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Except as contained in this notice, the name of the authors shall not be used in advertising or otherwise to promote the sale, use or other deal- ings in this Software without prior written authorization from him. ---------------------------------------------------------------------- java platform release isorelax MIT http://iso-relax.sourceforge.net/ Copyright (c) 2001-2002, SourceForge ISO-RELAX Project (ASAMI Tomoharu, Daisuke Okajima, Kohsuke Kawaguchi, and MURATA Makoto) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the Software ), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED AS IS , WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. jing BSD-3-Clause http://www.thaiopensource.com/relaxng/jing.html Copyright (c) 2001-2003 Thai Open Source Software Center Ltd All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. * Neither the name of the Thai Open Source Software Center Ltd nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. nekodtd Apache 1.0-derived https://people.apache.org/~andyc/neko/doc/dtd/ The CyberNeko Software License, Version 1.0 (C) Copyright 2002-2005, Andy Clark. All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. 3. The end-user documentation included with the redistribution, if any, must include the following acknowledgment: This product includes software developed by Andy Clark. Alternately, this acknowledgment may appear in the software itself, if and wherever such third-party acknowledgments normally appear. 4. The names CyberNeko and NekoHTML must not be used to endorse or promote products derived from this software without prior written permission. For written permission, please contact andyc@cyberneko.net. 5. Products derived from this software may not be called CyberNeko , nor may CyberNeko appear in their name, without prior written permission of the author. THIS SOFTWARE IS PROVIDED ``AS IS AND ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR OTHER CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. ==================================================================== This license is based on the Apache Software License, version 1.1. nekohtml Apache 2.0 http://nekohtml.sourceforge.net/ Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. License shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. Licensor shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. Legal Entity shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, control means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. You (or Your ) shall mean an individual or Legal Entity exercising permissions granted by this License. Source form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. Object form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. Work shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). Derivative Works shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. Contribution shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, submitted means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as Not a Contribution. Contributor shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a NOTICE text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an AS IS BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets [] replaced with your own identifying information. (Don t include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same printed page as the copyright notice for easier identification within third-party archives. Copyright [yyyy] [name of copyright owner] Licensed under the Apache License, Version 2.0 (the License ); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. xalan Apache 2.0 https://xml.apache.org/xalan-j/ covers xalan.jar and serializer.jar Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. License shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. Licensor shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. Legal Entity shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, control means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. You (or Your ) shall mean an individual or Legal Entity exercising permissions granted by this License. Source form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. Object form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. Work shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). Derivative Works shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. Contribution shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, submitted means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as Not a Contribution. Contributor shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a NOTICE text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an AS IS BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets [] replaced with your own identifying information. (Don t include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same printed page as the copyright notice for easier identification within third-party archives. Copyright [yyyy] [name of copyright owner] Licensed under the Apache License, Version 2.0 (the License ); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. xerces Apache 2.0 https://xerces.apache.org/xerces2-j/ Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. License shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. Licensor shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. Legal Entity shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, control means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. You (or Your ) shall mean an individual or Legal Entity exercising permissions granted by this License. Source form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. Object form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. Work shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). Derivative Works shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. Contribution shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, submitted means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as Not a Contribution. Contributor shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a NOTICE text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an AS IS BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets [] replaced with your own identifying information. (Don t include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same printed page as the copyright notice for easier identification within third-party archives. Copyright [yyyy] [name of copyright owner] Licensed under the Apache License, Version 2.0 (the License ); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. xml-apis Apache 2.0 https://xerces.apache.org/xml-commons/ Unless otherwise noted all files in XML Commons are covered under the Apache License Version 2.0. Please read the LICENSE and NOTICE files. XML Commons contains some software and documentation that is covered under a number of different licenses. This applies particularly to the xml-commons/java/external/ directory. Most files under xml-commons/java/external/ are covered under their respective LICENSE.*.txt files; see the matching README.*.txt files for descriptions. Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. License shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. Licensor shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. Legal Entity shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, control means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. You (or Your ) shall mean an individual or Legal Entity exercising permissions granted by this License. Source form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. Object form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. Work shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). Derivative Works shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. Contribution shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, submitted means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as Not a Contribution. Contributor shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a NOTICE text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an AS IS BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets [] replaced with your own identifying information. (Don t include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same printed page as the copyright notice for easier identification within third-party archives. Copyright [yyyy] [name of copyright owner] Licensed under the Apache License, Version 2.0 (the License ); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License. binary windows release NOTE: these libraries are redistributed ONLY with the binary cross-compiled Windows platform version of Nokogiri, both x86-mingw32 and x64-mingw32. zlib zlib license http://www.zlib.net/zlib_license.html Copyright (C) 1995-2017 Jean-loup Gailly and Mark Adler This software is provided as-is , without any express or implied warranty. In no event will the authors be held liable for any damages arising from the use of this software. Permission is granted to anyone to use this software for any purpose, including commercial applications, and to alter it and redistribute it freely, subject to the following restrictions: 1. The origin of this software must not be misrepresented; you must not claim that you wrote the original software. If you use this software in a product, an acknowledgment in the product documentation would be appreciated but is not required. 2. Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software. 3. This notice may not be removed or altered from any source distribution. Jean-loup Gailly Mark Adler jloup@gzip.org madler@alumni.caltech.edu libiconv LGPL https://www.gnu.org/software/libiconv/ GNU LIBRARY GENERAL PUBLIC LICENSE Version 2, June 1991 Copyright (C) 1991 Free Software Foundation, Inc. 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. [This is the first released version of the library GPL. It is numbered 2 because it goes with version 2 of the ordinary GPL.] Preamble The licenses for most software are designed to take away your freedom to share and change it. By contrast, the GNU General Public Licenses are intended to guarantee your freedom to share and change free software--to make sure the software is free for all its users. This license, the Library General Public License, applies to some specially designated Free Software Foundation software, and to any other libraries whose authors decide to use it. You can use it for your libraries, too. When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for this service if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs; and that you know you can do these things. To protect your rights, we need to make restrictions that forbid anyone to deny you these rights or to ask you to surrender the rights. These restrictions translate to certain responsibilities for you if you distribute copies of the library, or if you modify it. For example, if you distribute copies of the library, whether gratis or for a fee, you must give the recipients all the rights that we gave you. You must make sure that they, too, receive or can get the source code. If you link a program with the library, you must provide complete object files to the recipients so that they can relink them with the library, after making changes to the library and recompiling it. And you must show them these terms so they know their rights. Our method of protecting your rights has two steps: (1) copyright the library, and (2) offer you this license which gives you legal permission to copy, distribute and/or modify the library. Also, for each distributor s protection, we want to make certain that everyone understands that there is no warranty for this free library. If the library is modified by someone else and passed on, we want its recipients to know that what they have is not the original version, so that any problems introduced by others will not reflect on the original authors reputations. Finally, any free program is threatened constantly by software patents. We wish to avoid the danger that companies distributing free software will individually obtain patent licenses, thus in effect transforming the program into proprietary software. To prevent this, we have made it clear that any patent must be licensed for everyone s free use or not licensed at all. Most GNU software, including some libraries, is covered by the ordinary GNU General Public License, which was designed for utility programs. This license, the GNU Library General Public License, applies to certain designated libraries. This license is quite different from the ordinary one; be sure to read it in full, and don t assume that anything in it is the same as in the ordinary license. The reason we have a separate public license for some libraries is that they blur the distinction we usually make between modifying or adding to a program and simply using it. Linking a program with a library, without changing the library, is in some sense simply using the library, and is analogous to running a utility program or application program. However, in a textual and legal sense, the linked executable is a combined work, a derivative of the original library, and the ordinary General Public License treats it as such. Because of this blurred distinction, using the ordinary General Public License for libraries did not effectively promote software sharing, because most developers did not use the libraries. We concluded that weaker conditions might promote sharing better. However, unrestricted linking of non-free programs would deprive the users of those programs of all benefit from the free status of the libraries themselves. This Library General Public License is intended to permit developers of non-free programs to use free libraries, while preserving your freedom as a user of such programs to change the free libraries that are incorporated in them. (We have not seen how to achieve this as regards changes in header files, but we have achieved it as regards changes in the actual functions of the Library.) The hope is that this will lead to faster development of free libraries. The precise terms and conditions for copying, distribution and modification follow. Pay close attention to the difference between a work based on the library and a work that uses the library . The former contains code derived from the library, while the latter only works together with the library. Note that it is possible for a library to be covered by the ordinary General Public License rather than by this special one. GNU LIBRARY GENERAL PUBLIC LICENSE TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION 0. This License Agreement applies to any software library which contains a notice placed by the copyright holder or other authorized party saying it may be distributed under the terms of this Library General Public License (also called this License ). Each licensee is addressed as you . A library means a collection of software functions and/or data prepared so as to be conveniently linked with application programs (which use some of those functions and data) to form executables. The Library , below, refers to any such software library or work which has been distributed under these terms. A work based on the Library means either the Library or any derivative work under copyright law: that is to say, a work containing the Library or a portion of it, either verbatim or with modifications and/or translated straightforwardly into another language. (Hereinafter, translation is included without limitation in the term modification .) Source code for a work means the preferred form of the work for making modifications to it. For a library, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the library. Activities other than copying, distribution and modification are not covered by this License; they are outside its scope. The act of running a program using the Library is not restricted, and output from such a program is covered only if its contents constitute a work based on the Library (independent of the use of the Library in a tool for writing it). Whether that is true depends on what the Library does and what the program that uses the Library does. 1. You may copy and distribute verbatim copies of the Library s complete source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and distribute a copy of this License along with the Library. You may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee. 2. You may modify your copy or copies of the Library or any portion of it, thus forming a work based on the Library, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions: a) The modified work must itself be a software library. b) You must cause the files modified to carry prominent notices stating that you changed the files and the date of any change. c) You must cause the whole of the work to be licensed at no charge to all third parties under the terms of this License. d) If a facility in the modified Library refers to a function or a table of data to be supplied by an application program that uses the facility, other than as an argument passed when the facility is invoked, then you must make a good faith effort to ensure that, in the event an application does not supply such function or table, the facility still operates, and performs whatever part of its purpose remains meaningful. (For example, a function in a library to compute square roots has a purpose that is entirely well-defined independent of the application. Therefore, Subsection 2d requires that any application-supplied function or table used by this function must be optional: if the application does not supply it, the square root function must still compute square roots.) These requirements apply to the modified work as a whole. If identifiable sections of that work are not derived from the Library, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works. But when you distribute the same sections as part of a whole which is a work based on the Library, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it. Thus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Library. In addition, mere aggregation of another work not based on the Library with the Library (or with a work based on the Library) on a volume of a storage or distribution medium does not bring the other work under the scope of this License. 3. You may opt to apply the terms of the ordinary GNU General Public License instead of this License to a given copy of the Library. To do this, you must alter all the notices that refer to this License, so that they refer to the ordinary GNU General Public License, version 2, instead of to this License. (If a newer version than version 2 of the ordinary GNU General Public License has appeared, then you can specify that version instead if you wish.) Do not make any other change in these notices. Once this change is made in a given copy, it is irreversible for that copy, so the ordinary GNU General Public License applies to all subsequent copies and derivative works made from that copy. This option is useful when you wish to copy part of the code of the Library into a program that is not a library. 4. You may copy and distribute the Library (or a portion or derivative of it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you accompany it with the complete corresponding machine-readable source code, which must be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange. If distribution of object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place satisfies the requirement to distribute the source code, even though third parties are not compelled to copy the source along with the object code. 5. A program that contains no derivative of any portion of the Library, but is designed to work with the Library by being compiled or linked with it, is called a work that uses the Library . Such a work, in isolation, is not a derivative work of the Library, and therefore falls outside the scope of this License. However, linking a work that uses the Library with the Library creates an executable that is a derivative of the Library (because it contains portions of the Library), rather than a work that uses the library . The executable is therefore covered by this License. Section 6 states terms for distribution of such executables. When a work that uses the Library uses material from a header file that is part of the Library, the object code for the work may be a derivative work of the Library even though the source code is not. Whether this is true is especially significant if the work can be linked without the Library, or if the work is itself a library. The threshold for this to be true is not precisely defined by law. If such an object file uses only numerical parameters, data structure layouts and accessors, and small macros and small inline functions (ten lines or less in length), then the use of the object file is unrestricted, regardless of whether it is legally a derivative work. (Executables containing this object code plus portions of the Library will still fall under Section 6.) Otherwise, if the work is a derivative of the Library, you may distribute the object code for the work under the terms of Section 6. Any executables containing that work also fall under Section 6, whether or not they are linked directly with the Library itself. 6. As an exception to the Sections above, you may also compile or link a work that uses the Library with the Library to produce a work containing portions of the Library, and distribute that work under terms of your choice, provided that the terms permit modification of the work for the customer s own use and reverse engineering for debugging such modifications. You must give prominent notice with each copy of the work that the Library is used in it and that the Library and its use are covered by this License. You must supply a copy of this License. If the work during execution displays copyright notices, you must include the copyright notice for the Library among them, as well as a reference directing the user to the copy of this License. Also, you must do one of these things: a) Accompany the work with the complete corresponding machine-readable source code for the Library including whatever changes were used in the work (which must be distributed under Sections 1 and 2 above); and, if the work is an executable linked with the Library, with the complete machine-readable work that uses the Library , as object code and/or source code, so that the user can modify the Library and then relink to produce a modified executable containing the modified Library. (It is understood that the user who changes the contents of definitions files in the Library will not necessarily be able to recompile the application to use the modified definitions.) b) Accompany the work with a written offer, valid for at least three years, to give the same user the materials specified in Subsection 6a, above, for a charge no more than the cost of performing this distribution. c) If distribution of the work is made by offering access to copy from a designated place, offer equivalent access to copy the above specified materials from the same place. d) Verify that the user has already received a copy of these materials or that you have already sent this user a copy. For an executable, the required form of the work that uses the Library must include any data and utility programs needed for reproducing the executable from it. However, as a special exception, the source code distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable. It may happen that this requirement contradicts the license restrictions of other proprietary libraries that do not normally accompany the operating system. Such a contradiction means you cannot use both them and the Library together in an executable that you distribute. 7. You may place library facilities that are a work based on the Library side-by-side in a single library together with other library facilities not covered by this License, and distribute such a combined library, provided that the separate distribution of the work based on the Library and of the other library facilities is otherwise permitted, and provided that you do these two things: a) Accompany the combined library with a copy of the same work based on the Library, uncombined with any other library facilities. This must be distributed under the terms of the Sections above. b) Give prominent notice with the combined library of the fact that part of it is a work based on the Library, and explaining where to find the accompanying uncombined form of the same work. 8. You may not copy, modify, sublicense, link with, or distribute the Library except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense, link with, or distribute the Library is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance. 9. You are not required to accept this License, since you have not signed it. However, nothing else grants you permission to modify or distribute the Library or its derivative works. These actions are prohibited by law if you do not accept this License. Therefore, by modifying or distributing the Library (or any work based on the Library), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Library or works based on it. 10. Each time you redistribute the Library (or any work based on the Library), the recipient automatically receives a license from the original licensor to copy, distribute, link with or modify the Library subject to these terms and conditions. You may not impose any further restrictions on the recipients exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties to this License. 11. If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Library at all. For example, if a patent license would not permit royalty-free redistribution of the Library by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Library. If any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply, and the section as a whole is intended to apply in other circumstances. It is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system which is implemented by public license practices. Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice. This section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License. 12. If the distribution and/or use of the Library is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Library under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded. In such case, this License incorporates the limitation as if written in the body of this License. 13. The Free Software Foundation may publish revised and/or new versions of the Library General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Library specifies a version number of this License which applies to it and any later version , you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation. If the Library does not specify a license version number, you may choose any version ever published by the Free Software Foundation. 14. If you wish to incorporate parts of the Library into other free programs whose distribution conditions are incompatible with these, write to the author to ask for permission. For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this. Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally. NO WARRANTY 15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE LIBRARY AS IS WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE LIBRARY IS WITH YOU. SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. END OF TERMS AND CONDITIONS Appendix: How to Apply These Terms to Your New Libraries If you develop a new library, and you want it to be of the greatest possible use to the public, we recommend making it free software that everyone can redistribute and change. You can do so by permitting redistribution under these terms (or, alternatively, under the terms of the ordinary General Public License). To apply these terms, attach the following notices to the library. It is safest to attach them to the start of each source file to most effectively convey the exclusion of warranty; and each file should have at least the copyright line and a pointer to where the full notice is found. lt;one line to give the library s name and a brief idea of what it does. gt; Copyright (C) lt;year gt; lt;name of author gt; This library is free software; you can redistribute it and/or modify it under the terms of the GNU Library General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version. This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public License for more details. You should have received a copy of the GNU Library General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA Also add information on how to contact you by electronic and paper mail. You should also get your employer (if you work as a programmer) or your school, if any, to sign a copyright disclaimer for the library, if necessary. Here is a sample; alter the names: Yoyodyne, Inc., hereby disclaims all copyright interest in the library `Frob (a library for tweaking knobs) written by James Random Hacker. lt;signature of Ty Coon gt;, 1 April 1990 Ty Coon, President of Vice That s all there is to it!","title":"Dependencies"},{"location":"LICENSE-DEPENDENCIES.html#vendored-dependency-licenses","text":"Nokogiri ships with some third party dependencies, which are listed here along with their licenses. Note that this document is broken into three sections, each of which will apply to different platform releases of Nokogiri: default platform release java platform release binary windows platform releases ( x86-mingw32 and x64-mingw32 ) It's encouraged for anyone consuming this file via license-tracking software to understand which dependencies are used by your particular software, so as not to misinterpret the contents of this file. In particular, I'm sure somebody's lawyer, somewhere, is going to freak out that the LGPL appears in this file; and so I'd like to take special note that the dependency covered by LGPL, libiconv , is only being redistributed in the binary Windows platform release. It's not present in any non-Windows releases.","title":"Vendored Dependency Licenses"},{"location":"LICENSE-DEPENDENCIES.html#default-platform-release","text":"","title":"default platform release"},{"location":"LICENSE-DEPENDENCIES.html#libxml2","text":"MIT http://xmlsoft.org/ Except where otherwise noted in the source code (e.g. the files hash.c, list.c and the trio files, which are covered by a similar licence but with different Copyright notices) all the files are: Copyright (C) 1998-2012 Daniel Veillard. All Rights Reserved. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the Software ), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is fur- nished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED AS IS , WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FIT- NESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"libxml2"},{"location":"LICENSE-DEPENDENCIES.html#libxslt","text":"MIT http://xmlsoft.org/libxslt/ Licence for libxslt except libexslt ---------------------------------------------------------------------- Copyright (C) 2001-2002 Daniel Veillard. All Rights Reserved. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the Software ), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is fur- nished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED AS IS , WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FIT- NESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE DANIEL VEILLARD BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CON- NECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Except as contained in this notice, the name of Daniel Veillard shall not be used in advertising or otherwise to promote the sale, use or other deal- ings in this Software without prior written authorization from him. ---------------------------------------------------------------------- Licence for libexslt ---------------------------------------------------------------------- Copyright (C) 2001-2002 Thomas Broyer, Charlie Bozeman and Daniel Veillard. All Rights Reserved. Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the Software ), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is fur- nished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED AS IS , WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FIT- NESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CON- NECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE. Except as contained in this notice, the name of the authors shall not be used in advertising or otherwise to promote the sale, use or other deal- ings in this Software without prior written authorization from him. ----------------------------------------------------------------------","title":"libxslt"},{"location":"LICENSE-DEPENDENCIES.html#java-platform-release","text":"","title":"java platform release"},{"location":"LICENSE-DEPENDENCIES.html#isorelax","text":"MIT http://iso-relax.sourceforge.net/ Copyright (c) 2001-2002, SourceForge ISO-RELAX Project (ASAMI Tomoharu, Daisuke Okajima, Kohsuke Kawaguchi, and MURATA Makoto) Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the Software ), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED AS IS , WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"isorelax"},{"location":"LICENSE-DEPENDENCIES.html#jing","text":"BSD-3-Clause http://www.thaiopensource.com/relaxng/jing.html Copyright (c) 2001-2003 Thai Open Source Software Center Ltd All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: * Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. * Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. * Neither the name of the Thai Open Source Software Center Ltd nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission. THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS AS IS AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE REGENTS OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.","title":"jing"},{"location":"LICENSE-DEPENDENCIES.html#nekodtd","text":"Apache 1.0-derived https://people.apache.org/~andyc/neko/doc/dtd/ The CyberNeko Software License, Version 1.0 (C) Copyright 2002-2005, Andy Clark. All rights reserved. Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met: 1. Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer. 2. Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution. 3. The end-user documentation included with the redistribution, if any, must include the following acknowledgment: This product includes software developed by Andy Clark. Alternately, this acknowledgment may appear in the software itself, if and wherever such third-party acknowledgments normally appear. 4. The names CyberNeko and NekoHTML must not be used to endorse or promote products derived from this software without prior written permission. For written permission, please contact andyc@cyberneko.net. 5. Products derived from this software may not be called CyberNeko , nor may CyberNeko appear in their name, without prior written permission of the author. THIS SOFTWARE IS PROVIDED ``AS IS AND ANY EXPRESSED OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE AUTHOR OR OTHER CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE. ==================================================================== This license is based on the Apache Software License, version 1.1.","title":"nekodtd"},{"location":"LICENSE-DEPENDENCIES.html#nekohtml","text":"Apache 2.0 http://nekohtml.sourceforge.net/ Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. License shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. Licensor shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. Legal Entity shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, control means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. You (or Your ) shall mean an individual or Legal Entity exercising permissions granted by this License. Source form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. Object form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. Work shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). Derivative Works shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. Contribution shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, submitted means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as Not a Contribution. Contributor shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a NOTICE text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an AS IS BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets [] replaced with your own identifying information. (Don t include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same printed page as the copyright notice for easier identification within third-party archives. Copyright [yyyy] [name of copyright owner] Licensed under the Apache License, Version 2.0 (the License ); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"nekohtml"},{"location":"LICENSE-DEPENDENCIES.html#xalan","text":"Apache 2.0 https://xml.apache.org/xalan-j/ covers xalan.jar and serializer.jar Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. License shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. Licensor shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. Legal Entity shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, control means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. You (or Your ) shall mean an individual or Legal Entity exercising permissions granted by this License. Source form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. Object form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. Work shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). Derivative Works shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. Contribution shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, submitted means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as Not a Contribution. Contributor shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a NOTICE text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an AS IS BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets [] replaced with your own identifying information. (Don t include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same printed page as the copyright notice for easier identification within third-party archives. Copyright [yyyy] [name of copyright owner] Licensed under the Apache License, Version 2.0 (the License ); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"xalan"},{"location":"LICENSE-DEPENDENCIES.html#xerces","text":"Apache 2.0 https://xerces.apache.org/xerces2-j/ Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. License shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. Licensor shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. Legal Entity shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, control means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. You (or Your ) shall mean an individual or Legal Entity exercising permissions granted by this License. Source form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. Object form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. Work shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). Derivative Works shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. Contribution shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, submitted means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as Not a Contribution. Contributor shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a NOTICE text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an AS IS BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets [] replaced with your own identifying information. (Don t include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same printed page as the copyright notice for easier identification within third-party archives. Copyright [yyyy] [name of copyright owner] Licensed under the Apache License, Version 2.0 (the License ); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"xerces"},{"location":"LICENSE-DEPENDENCIES.html#xml-apis","text":"Apache 2.0 https://xerces.apache.org/xml-commons/ Unless otherwise noted all files in XML Commons are covered under the Apache License Version 2.0. Please read the LICENSE and NOTICE files. XML Commons contains some software and documentation that is covered under a number of different licenses. This applies particularly to the xml-commons/java/external/ directory. Most files under xml-commons/java/external/ are covered under their respective LICENSE.*.txt files; see the matching README.*.txt files for descriptions. Apache License Version 2.0, January 2004 http://www.apache.org/licenses/ TERMS AND CONDITIONS FOR USE, REPRODUCTION, AND DISTRIBUTION 1. Definitions. License shall mean the terms and conditions for use, reproduction, and distribution as defined by Sections 1 through 9 of this document. Licensor shall mean the copyright owner or entity authorized by the copyright owner that is granting the License. Legal Entity shall mean the union of the acting entity and all other entities that control, are controlled by, or are under common control with that entity. For the purposes of this definition, control means (i) the power, direct or indirect, to cause the direction or management of such entity, whether by contract or otherwise, or (ii) ownership of fifty percent (50%) or more of the outstanding shares, or (iii) beneficial ownership of such entity. You (or Your ) shall mean an individual or Legal Entity exercising permissions granted by this License. Source form shall mean the preferred form for making modifications, including but not limited to software source code, documentation source, and configuration files. Object form shall mean any form resulting from mechanical transformation or translation of a Source form, including but not limited to compiled object code, generated documentation, and conversions to other media types. Work shall mean the work of authorship, whether in Source or Object form, made available under the License, as indicated by a copyright notice that is included in or attached to the work (an example is provided in the Appendix below). Derivative Works shall mean any work, whether in Source or Object form, that is based on (or derived from) the Work and for which the editorial revisions, annotations, elaborations, or other modifications represent, as a whole, an original work of authorship. For the purposes of this License, Derivative Works shall not include works that remain separable from, or merely link (or bind by name) to the interfaces of, the Work and Derivative Works thereof. Contribution shall mean any work of authorship, including the original version of the Work and any modifications or additions to that Work or Derivative Works thereof, that is intentionally submitted to Licensor for inclusion in the Work by the copyright owner or by an individual or Legal Entity authorized to submit on behalf of the copyright owner. For the purposes of this definition, submitted means any form of electronic, verbal, or written communication sent to the Licensor or its representatives, including but not limited to communication on electronic mailing lists, source code control systems, and issue tracking systems that are managed by, or on behalf of, the Licensor for the purpose of discussing and improving the Work, but excluding communication that is conspicuously marked or otherwise designated in writing by the copyright owner as Not a Contribution. Contributor shall mean Licensor and any individual or Legal Entity on behalf of whom a Contribution has been received by Licensor and subsequently incorporated within the Work. 2. Grant of Copyright License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable copyright license to reproduce, prepare Derivative Works of, publicly display, publicly perform, sublicense, and distribute the Work and such Derivative Works in Source or Object form. 3. Grant of Patent License. Subject to the terms and conditions of this License, each Contributor hereby grants to You a perpetual, worldwide, non-exclusive, no-charge, royalty-free, irrevocable (except as stated in this section) patent license to make, have made, use, offer to sell, sell, import, and otherwise transfer the Work, where such license applies only to those patent claims licensable by such Contributor that are necessarily infringed by their Contribution(s) alone or by combination of their Contribution(s) with the Work to which such Contribution(s) was submitted. If You institute patent litigation against any entity (including a cross-claim or counterclaim in a lawsuit) alleging that the Work or a Contribution incorporated within the Work constitutes direct or contributory patent infringement, then any patent licenses granted to You under this License for that Work shall terminate as of the date such litigation is filed. 4. Redistribution. You may reproduce and distribute copies of the Work or Derivative Works thereof in any medium, with or without modifications, and in Source or Object form, provided that You meet the following conditions: (a) You must give any other recipients of the Work or Derivative Works a copy of this License; and (b) You must cause any modified files to carry prominent notices stating that You changed the files; and (c) You must retain, in the Source form of any Derivative Works that You distribute, all copyright, patent, trademark, and attribution notices from the Source form of the Work, excluding those notices that do not pertain to any part of the Derivative Works; and (d) If the Work includes a NOTICE text file as part of its distribution, then any Derivative Works that You distribute must include a readable copy of the attribution notices contained within such NOTICE file, excluding those notices that do not pertain to any part of the Derivative Works, in at least one of the following places: within a NOTICE text file distributed as part of the Derivative Works; within the Source form or documentation, if provided along with the Derivative Works; or, within a display generated by the Derivative Works, if and wherever such third-party notices normally appear. The contents of the NOTICE file are for informational purposes only and do not modify the License. You may add Your own attribution notices within Derivative Works that You distribute, alongside or as an addendum to the NOTICE text from the Work, provided that such additional attribution notices cannot be construed as modifying the License. You may add Your own copyright statement to Your modifications and may provide additional or different license terms and conditions for use, reproduction, or distribution of Your modifications, or for any such Derivative Works as a whole, provided Your use, reproduction, and distribution of the Work otherwise complies with the conditions stated in this License. 5. Submission of Contributions. Unless You explicitly state otherwise, any Contribution intentionally submitted for inclusion in the Work by You to the Licensor shall be under the terms and conditions of this License, without any additional terms or conditions. Notwithstanding the above, nothing herein shall supersede or modify the terms of any separate license agreement you may have executed with Licensor regarding such Contributions. 6. Trademarks. This License does not grant permission to use the trade names, trademarks, service marks, or product names of the Licensor, except as required for reasonable and customary use in describing the origin of the Work and reproducing the content of the NOTICE file. 7. Disclaimer of Warranty. Unless required by applicable law or agreed to in writing, Licensor provides the Work (and each Contributor provides its Contributions) on an AS IS BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied, including, without limitation, any warranties or conditions of TITLE, NON-INFRINGEMENT, MERCHANTABILITY, or FITNESS FOR A PARTICULAR PURPOSE. You are solely responsible for determining the appropriateness of using or redistributing the Work and assume any risks associated with Your exercise of permissions under this License. 8. Limitation of Liability. In no event and under no legal theory, whether in tort (including negligence), contract, or otherwise, unless required by applicable law (such as deliberate and grossly negligent acts) or agreed to in writing, shall any Contributor be liable to You for damages, including any direct, indirect, special, incidental, or consequential damages of any character arising as a result of this License or out of the use or inability to use the Work (including but not limited to damages for loss of goodwill, work stoppage, computer failure or malfunction, or any and all other commercial damages or losses), even if such Contributor has been advised of the possibility of such damages. 9. Accepting Warranty or Additional Liability. While redistributing the Work or Derivative Works thereof, You may choose to offer, and charge a fee for, acceptance of support, warranty, indemnity, or other liability obligations and/or rights consistent with this License. However, in accepting such obligations, You may act only on Your own behalf and on Your sole responsibility, not on behalf of any other Contributor, and only if You agree to indemnify, defend, and hold each Contributor harmless for any liability incurred by, or claims asserted against, such Contributor by reason of your accepting any such warranty or additional liability. END OF TERMS AND CONDITIONS APPENDIX: How to apply the Apache License to your work. To apply the Apache License to your work, attach the following boilerplate notice, with the fields enclosed by brackets [] replaced with your own identifying information. (Don t include the brackets!) The text should be enclosed in the appropriate comment syntax for the file format. We also recommend that a file or class name and description of purpose be included on the same printed page as the copyright notice for easier identification within third-party archives. Copyright [yyyy] [name of copyright owner] Licensed under the Apache License, Version 2.0 (the License ); you may not use this file except in compliance with the License. You may obtain a copy of the License at http://www.apache.org/licenses/LICENSE-2.0 Unless required by applicable law or agreed to in writing, software distributed under the License is distributed on an AS IS BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the License for the specific language governing permissions and limitations under the License.","title":"xml-apis"},{"location":"LICENSE-DEPENDENCIES.html#binary-windows-release","text":"NOTE: these libraries are redistributed ONLY with the binary cross-compiled Windows platform version of Nokogiri, both x86-mingw32 and x64-mingw32.","title":"binary windows release"},{"location":"LICENSE-DEPENDENCIES.html#zlib","text":"zlib license http://www.zlib.net/zlib_license.html Copyright (C) 1995-2017 Jean-loup Gailly and Mark Adler This software is provided as-is , without any express or implied warranty. In no event will the authors be held liable for any damages arising from the use of this software. Permission is granted to anyone to use this software for any purpose, including commercial applications, and to alter it and redistribute it freely, subject to the following restrictions: 1. The origin of this software must not be misrepresented; you must not claim that you wrote the original software. If you use this software in a product, an acknowledgment in the product documentation would be appreciated but is not required. 2. Altered source versions must be plainly marked as such, and must not be misrepresented as being the original software. 3. This notice may not be removed or altered from any source distribution. Jean-loup Gailly Mark Adler jloup@gzip.org madler@alumni.caltech.edu","title":"zlib"},{"location":"LICENSE-DEPENDENCIES.html#libiconv","text":"LGPL https://www.gnu.org/software/libiconv/ GNU LIBRARY GENERAL PUBLIC LICENSE Version 2, June 1991 Copyright (C) 1991 Free Software Foundation, Inc. 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA Everyone is permitted to copy and distribute verbatim copies of this license document, but changing it is not allowed. [This is the first released version of the library GPL. It is numbered 2 because it goes with version 2 of the ordinary GPL.] Preamble The licenses for most software are designed to take away your freedom to share and change it. By contrast, the GNU General Public Licenses are intended to guarantee your freedom to share and change free software--to make sure the software is free for all its users. This license, the Library General Public License, applies to some specially designated Free Software Foundation software, and to any other libraries whose authors decide to use it. You can use it for your libraries, too. When we speak of free software, we are referring to freedom, not price. Our General Public Licenses are designed to make sure that you have the freedom to distribute copies of free software (and charge for this service if you wish), that you receive source code or can get it if you want it, that you can change the software or use pieces of it in new free programs; and that you know you can do these things. To protect your rights, we need to make restrictions that forbid anyone to deny you these rights or to ask you to surrender the rights. These restrictions translate to certain responsibilities for you if you distribute copies of the library, or if you modify it. For example, if you distribute copies of the library, whether gratis or for a fee, you must give the recipients all the rights that we gave you. You must make sure that they, too, receive or can get the source code. If you link a program with the library, you must provide complete object files to the recipients so that they can relink them with the library, after making changes to the library and recompiling it. And you must show them these terms so they know their rights. Our method of protecting your rights has two steps: (1) copyright the library, and (2) offer you this license which gives you legal permission to copy, distribute and/or modify the library. Also, for each distributor s protection, we want to make certain that everyone understands that there is no warranty for this free library. If the library is modified by someone else and passed on, we want its recipients to know that what they have is not the original version, so that any problems introduced by others will not reflect on the original authors reputations. Finally, any free program is threatened constantly by software patents. We wish to avoid the danger that companies distributing free software will individually obtain patent licenses, thus in effect transforming the program into proprietary software. To prevent this, we have made it clear that any patent must be licensed for everyone s free use or not licensed at all. Most GNU software, including some libraries, is covered by the ordinary GNU General Public License, which was designed for utility programs. This license, the GNU Library General Public License, applies to certain designated libraries. This license is quite different from the ordinary one; be sure to read it in full, and don t assume that anything in it is the same as in the ordinary license. The reason we have a separate public license for some libraries is that they blur the distinction we usually make between modifying or adding to a program and simply using it. Linking a program with a library, without changing the library, is in some sense simply using the library, and is analogous to running a utility program or application program. However, in a textual and legal sense, the linked executable is a combined work, a derivative of the original library, and the ordinary General Public License treats it as such. Because of this blurred distinction, using the ordinary General Public License for libraries did not effectively promote software sharing, because most developers did not use the libraries. We concluded that weaker conditions might promote sharing better. However, unrestricted linking of non-free programs would deprive the users of those programs of all benefit from the free status of the libraries themselves. This Library General Public License is intended to permit developers of non-free programs to use free libraries, while preserving your freedom as a user of such programs to change the free libraries that are incorporated in them. (We have not seen how to achieve this as regards changes in header files, but we have achieved it as regards changes in the actual functions of the Library.) The hope is that this will lead to faster development of free libraries. The precise terms and conditions for copying, distribution and modification follow. Pay close attention to the difference between a work based on the library and a work that uses the library . The former contains code derived from the library, while the latter only works together with the library. Note that it is possible for a library to be covered by the ordinary General Public License rather than by this special one. GNU LIBRARY GENERAL PUBLIC LICENSE TERMS AND CONDITIONS FOR COPYING, DISTRIBUTION AND MODIFICATION 0. This License Agreement applies to any software library which contains a notice placed by the copyright holder or other authorized party saying it may be distributed under the terms of this Library General Public License (also called this License ). Each licensee is addressed as you . A library means a collection of software functions and/or data prepared so as to be conveniently linked with application programs (which use some of those functions and data) to form executables. The Library , below, refers to any such software library or work which has been distributed under these terms. A work based on the Library means either the Library or any derivative work under copyright law: that is to say, a work containing the Library or a portion of it, either verbatim or with modifications and/or translated straightforwardly into another language. (Hereinafter, translation is included without limitation in the term modification .) Source code for a work means the preferred form of the work for making modifications to it. For a library, complete source code means all the source code for all modules it contains, plus any associated interface definition files, plus the scripts used to control compilation and installation of the library. Activities other than copying, distribution and modification are not covered by this License; they are outside its scope. The act of running a program using the Library is not restricted, and output from such a program is covered only if its contents constitute a work based on the Library (independent of the use of the Library in a tool for writing it). Whether that is true depends on what the Library does and what the program that uses the Library does. 1. You may copy and distribute verbatim copies of the Library s complete source code as you receive it, in any medium, provided that you conspicuously and appropriately publish on each copy an appropriate copyright notice and disclaimer of warranty; keep intact all the notices that refer to this License and to the absence of any warranty; and distribute a copy of this License along with the Library. You may charge a fee for the physical act of transferring a copy, and you may at your option offer warranty protection in exchange for a fee. 2. You may modify your copy or copies of the Library or any portion of it, thus forming a work based on the Library, and copy and distribute such modifications or work under the terms of Section 1 above, provided that you also meet all of these conditions: a) The modified work must itself be a software library. b) You must cause the files modified to carry prominent notices stating that you changed the files and the date of any change. c) You must cause the whole of the work to be licensed at no charge to all third parties under the terms of this License. d) If a facility in the modified Library refers to a function or a table of data to be supplied by an application program that uses the facility, other than as an argument passed when the facility is invoked, then you must make a good faith effort to ensure that, in the event an application does not supply such function or table, the facility still operates, and performs whatever part of its purpose remains meaningful. (For example, a function in a library to compute square roots has a purpose that is entirely well-defined independent of the application. Therefore, Subsection 2d requires that any application-supplied function or table used by this function must be optional: if the application does not supply it, the square root function must still compute square roots.) These requirements apply to the modified work as a whole. If identifiable sections of that work are not derived from the Library, and can be reasonably considered independent and separate works in themselves, then this License, and its terms, do not apply to those sections when you distribute them as separate works. But when you distribute the same sections as part of a whole which is a work based on the Library, the distribution of the whole must be on the terms of this License, whose permissions for other licensees extend to the entire whole, and thus to each and every part regardless of who wrote it. Thus, it is not the intent of this section to claim rights or contest your rights to work written entirely by you; rather, the intent is to exercise the right to control the distribution of derivative or collective works based on the Library. In addition, mere aggregation of another work not based on the Library with the Library (or with a work based on the Library) on a volume of a storage or distribution medium does not bring the other work under the scope of this License. 3. You may opt to apply the terms of the ordinary GNU General Public License instead of this License to a given copy of the Library. To do this, you must alter all the notices that refer to this License, so that they refer to the ordinary GNU General Public License, version 2, instead of to this License. (If a newer version than version 2 of the ordinary GNU General Public License has appeared, then you can specify that version instead if you wish.) Do not make any other change in these notices. Once this change is made in a given copy, it is irreversible for that copy, so the ordinary GNU General Public License applies to all subsequent copies and derivative works made from that copy. This option is useful when you wish to copy part of the code of the Library into a program that is not a library. 4. You may copy and distribute the Library (or a portion or derivative of it, under Section 2) in object code or executable form under the terms of Sections 1 and 2 above provided that you accompany it with the complete corresponding machine-readable source code, which must be distributed under the terms of Sections 1 and 2 above on a medium customarily used for software interchange. If distribution of object code is made by offering access to copy from a designated place, then offering equivalent access to copy the source code from the same place satisfies the requirement to distribute the source code, even though third parties are not compelled to copy the source along with the object code. 5. A program that contains no derivative of any portion of the Library, but is designed to work with the Library by being compiled or linked with it, is called a work that uses the Library . Such a work, in isolation, is not a derivative work of the Library, and therefore falls outside the scope of this License. However, linking a work that uses the Library with the Library creates an executable that is a derivative of the Library (because it contains portions of the Library), rather than a work that uses the library . The executable is therefore covered by this License. Section 6 states terms for distribution of such executables. When a work that uses the Library uses material from a header file that is part of the Library, the object code for the work may be a derivative work of the Library even though the source code is not. Whether this is true is especially significant if the work can be linked without the Library, or if the work is itself a library. The threshold for this to be true is not precisely defined by law. If such an object file uses only numerical parameters, data structure layouts and accessors, and small macros and small inline functions (ten lines or less in length), then the use of the object file is unrestricted, regardless of whether it is legally a derivative work. (Executables containing this object code plus portions of the Library will still fall under Section 6.) Otherwise, if the work is a derivative of the Library, you may distribute the object code for the work under the terms of Section 6. Any executables containing that work also fall under Section 6, whether or not they are linked directly with the Library itself. 6. As an exception to the Sections above, you may also compile or link a work that uses the Library with the Library to produce a work containing portions of the Library, and distribute that work under terms of your choice, provided that the terms permit modification of the work for the customer s own use and reverse engineering for debugging such modifications. You must give prominent notice with each copy of the work that the Library is used in it and that the Library and its use are covered by this License. You must supply a copy of this License. If the work during execution displays copyright notices, you must include the copyright notice for the Library among them, as well as a reference directing the user to the copy of this License. Also, you must do one of these things: a) Accompany the work with the complete corresponding machine-readable source code for the Library including whatever changes were used in the work (which must be distributed under Sections 1 and 2 above); and, if the work is an executable linked with the Library, with the complete machine-readable work that uses the Library , as object code and/or source code, so that the user can modify the Library and then relink to produce a modified executable containing the modified Library. (It is understood that the user who changes the contents of definitions files in the Library will not necessarily be able to recompile the application to use the modified definitions.) b) Accompany the work with a written offer, valid for at least three years, to give the same user the materials specified in Subsection 6a, above, for a charge no more than the cost of performing this distribution. c) If distribution of the work is made by offering access to copy from a designated place, offer equivalent access to copy the above specified materials from the same place. d) Verify that the user has already received a copy of these materials or that you have already sent this user a copy. For an executable, the required form of the work that uses the Library must include any data and utility programs needed for reproducing the executable from it. However, as a special exception, the source code distributed need not include anything that is normally distributed (in either source or binary form) with the major components (compiler, kernel, and so on) of the operating system on which the executable runs, unless that component itself accompanies the executable. It may happen that this requirement contradicts the license restrictions of other proprietary libraries that do not normally accompany the operating system. Such a contradiction means you cannot use both them and the Library together in an executable that you distribute. 7. You may place library facilities that are a work based on the Library side-by-side in a single library together with other library facilities not covered by this License, and distribute such a combined library, provided that the separate distribution of the work based on the Library and of the other library facilities is otherwise permitted, and provided that you do these two things: a) Accompany the combined library with a copy of the same work based on the Library, uncombined with any other library facilities. This must be distributed under the terms of the Sections above. b) Give prominent notice with the combined library of the fact that part of it is a work based on the Library, and explaining where to find the accompanying uncombined form of the same work. 8. You may not copy, modify, sublicense, link with, or distribute the Library except as expressly provided under this License. Any attempt otherwise to copy, modify, sublicense, link with, or distribute the Library is void, and will automatically terminate your rights under this License. However, parties who have received copies, or rights, from you under this License will not have their licenses terminated so long as such parties remain in full compliance. 9. You are not required to accept this License, since you have not signed it. However, nothing else grants you permission to modify or distribute the Library or its derivative works. These actions are prohibited by law if you do not accept this License. Therefore, by modifying or distributing the Library (or any work based on the Library), you indicate your acceptance of this License to do so, and all its terms and conditions for copying, distributing or modifying the Library or works based on it. 10. Each time you redistribute the Library (or any work based on the Library), the recipient automatically receives a license from the original licensor to copy, distribute, link with or modify the Library subject to these terms and conditions. You may not impose any further restrictions on the recipients exercise of the rights granted herein. You are not responsible for enforcing compliance by third parties to this License. 11. If, as a consequence of a court judgment or allegation of patent infringement or for any other reason (not limited to patent issues), conditions are imposed on you (whether by court order, agreement or otherwise) that contradict the conditions of this License, they do not excuse you from the conditions of this License. If you cannot distribute so as to satisfy simultaneously your obligations under this License and any other pertinent obligations, then as a consequence you may not distribute the Library at all. For example, if a patent license would not permit royalty-free redistribution of the Library by all those who receive copies directly or indirectly through you, then the only way you could satisfy both it and this License would be to refrain entirely from distribution of the Library. If any portion of this section is held invalid or unenforceable under any particular circumstance, the balance of the section is intended to apply, and the section as a whole is intended to apply in other circumstances. It is not the purpose of this section to induce you to infringe any patents or other property right claims or to contest validity of any such claims; this section has the sole purpose of protecting the integrity of the free software distribution system which is implemented by public license practices. Many people have made generous contributions to the wide range of software distributed through that system in reliance on consistent application of that system; it is up to the author/donor to decide if he or she is willing to distribute software through any other system and a licensee cannot impose that choice. This section is intended to make thoroughly clear what is believed to be a consequence of the rest of this License. 12. If the distribution and/or use of the Library is restricted in certain countries either by patents or by copyrighted interfaces, the original copyright holder who places the Library under this License may add an explicit geographical distribution limitation excluding those countries, so that distribution is permitted only in or among countries not thus excluded. In such case, this License incorporates the limitation as if written in the body of this License. 13. The Free Software Foundation may publish revised and/or new versions of the Library General Public License from time to time. Such new versions will be similar in spirit to the present version, but may differ in detail to address new problems or concerns. Each version is given a distinguishing version number. If the Library specifies a version number of this License which applies to it and any later version , you have the option of following the terms and conditions either of that version or of any later version published by the Free Software Foundation. If the Library does not specify a license version number, you may choose any version ever published by the Free Software Foundation. 14. If you wish to incorporate parts of the Library into other free programs whose distribution conditions are incompatible with these, write to the author to ask for permission. For software which is copyrighted by the Free Software Foundation, write to the Free Software Foundation; we sometimes make exceptions for this. Our decision will be guided by the two goals of preserving the free status of all derivatives of our free software and of promoting the sharing and reuse of software generally. NO WARRANTY 15. BECAUSE THE LIBRARY IS LICENSED FREE OF CHARGE, THERE IS NO WARRANTY FOR THE LIBRARY, TO THE EXTENT PERMITTED BY APPLICABLE LAW. EXCEPT WHEN OTHERWISE STATED IN WRITING THE COPYRIGHT HOLDERS AND/OR OTHER PARTIES PROVIDE THE LIBRARY AS IS WITHOUT WARRANTY OF ANY KIND, EITHER EXPRESSED OR IMPLIED, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE. THE ENTIRE RISK AS TO THE QUALITY AND PERFORMANCE OF THE LIBRARY IS WITH YOU. SHOULD THE LIBRARY PROVE DEFECTIVE, YOU ASSUME THE COST OF ALL NECESSARY SERVICING, REPAIR OR CORRECTION. 16. IN NO EVENT UNLESS REQUIRED BY APPLICABLE LAW OR AGREED TO IN WRITING WILL ANY COPYRIGHT HOLDER, OR ANY OTHER PARTY WHO MAY MODIFY AND/OR REDISTRIBUTE THE LIBRARY AS PERMITTED ABOVE, BE LIABLE TO YOU FOR DAMAGES, INCLUDING ANY GENERAL, SPECIAL, INCIDENTAL OR CONSEQUENTIAL DAMAGES ARISING OUT OF THE USE OR INABILITY TO USE THE LIBRARY (INCLUDING BUT NOT LIMITED TO LOSS OF DATA OR DATA BEING RENDERED INACCURATE OR LOSSES SUSTAINED BY YOU OR THIRD PARTIES OR A FAILURE OF THE LIBRARY TO OPERATE WITH ANY OTHER SOFTWARE), EVEN IF SUCH HOLDER OR OTHER PARTY HAS BEEN ADVISED OF THE POSSIBILITY OF SUCH DAMAGES. END OF TERMS AND CONDITIONS Appendix: How to Apply These Terms to Your New Libraries If you develop a new library, and you want it to be of the greatest possible use to the public, we recommend making it free software that everyone can redistribute and change. You can do so by permitting redistribution under these terms (or, alternatively, under the terms of the ordinary General Public License). To apply these terms, attach the following notices to the library. It is safest to attach them to the start of each source file to most effectively convey the exclusion of warranty; and each file should have at least the copyright line and a pointer to where the full notice is found. lt;one line to give the library s name and a brief idea of what it does. gt; Copyright (C) lt;year gt; lt;name of author gt; This library is free software; you can redistribute it and/or modify it under the terms of the GNU Library General Public License as published by the Free Software Foundation; either version 2 of the License, or (at your option) any later version. This library is distributed in the hope that it will be useful, but WITHOUT ANY WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the GNU Library General Public License for more details. You should have received a copy of the GNU Library General Public License along with this library; if not, write to the Free Software Foundation, Inc., 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301, USA Also add information on how to contact you by electronic and paper mail. You should also get your employer (if you work as a programmer) or your school, if any, to sign a copyright disclaimer for the library, if necessary. Here is a sample; alter the names: Yoyodyne, Inc., hereby disclaims all copyright interest in the library `Frob (a library for tweaking knobs) written by James Random Hacker. lt;signature of Ty Coon gt;, 1 April 1990 Ty Coon, President of Vice That s all there is to it!","title":"libiconv"},{"location":"LICENSE.html","text":"The MIT License Copyright 2008 -- 2018 by Aaron Patterson, Mike Dalessio, Charles Nutter, Sergio Arbeo, Patrick Mahoney, Yoko Harada, Akinori MUSHA, John Shahid, Lars Kanis Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the \"Software\"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions: The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software. THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.","title":"License"},{"location":"SECURITY.html","text":"Security and Vulnerability Reporting The Nokogiri Core Contributors take security very seriously and investigate all reported vulnerabilities. If you would like to report a vulnerablity or have a security concern regarding Nokogiri or how Nokogiri is using any of its underlying platform-specific libraries (such as libxml2 or xerces), please report it via HackerOne . Your report will be acknowledged within 24 hours, and you'll receive a more detailed response within 72 hours indicating next steps in handling your report. If you have not received a reply to your submission within 48 hours, there are a few steps you can take: Contact the current security coordinator (Mike Dalessio ) Contact the core contributor mailing list ( ) Join the nokogiri-talk group Please note, the nokogiri-talk list is a public area. When escalating in that venue, please do not discuss your issue. Simply say that you're trying to get a hold of someone from the core team. The information you share with the Nokogiri Core Contributors as part of this process will be kept confidential within the team, unless or until we need to share information upstream with our dependent libraries' core teams, at which point we will notify you. If a vulnerability is first reported by you, we will credit you with the discovery in the public disclosure.","title":"Security"},{"location":"SECURITY.html#security-and-vulnerability-reporting","text":"The Nokogiri Core Contributors take security very seriously and investigate all reported vulnerabilities. If you would like to report a vulnerablity or have a security concern regarding Nokogiri or how Nokogiri is using any of its underlying platform-specific libraries (such as libxml2 or xerces), please report it via HackerOne . Your report will be acknowledged within 24 hours, and you'll receive a more detailed response within 72 hours indicating next steps in handling your report. If you have not received a reply to your submission within 48 hours, there are a few steps you can take: Contact the current security coordinator (Mike Dalessio ) Contact the core contributor mailing list ( ) Join the nokogiri-talk group Please note, the nokogiri-talk list is a public area. When escalating in that venue, please do not discuss your issue. Simply say that you're trying to get a hold of someone from the core team. The information you share with the Nokogiri Core Contributors as part of this process will be kept confidential within the team, unless or until we need to share information upstream with our dependent libraries' core teams, at which point we will notify you. If a vulnerability is first reported by you, we will credit you with the discovery in the public disclosure.","title":"Security and Vulnerability Reporting"},{"location":"tutorials/ensuring_well_formed_markup.html","text":"Ensuring Well-Formed Markup Gentle Well-Formedness We've all seen bad markup in our day. I'm talking about markup that doesn't bother to close tags. I'm talking about putting p tags inside p tags, and putting content into an img tag. Nokogiri corrects bad markup like a boss , similarly to how a browser would before rendering. badly_formed = - EOXML root open foo closed bar /closed /root EOXML bad_doc = Nokogiri :: XML badly_formed puts bad_doc # = ?xml version= 1.0 ? # root # open foo # closed bar /closed # /open # /root And Nokogiri will even keep track of what the errors were, if the parse option NOERRORS and NOWARNINGS are turned off (the default for XML documents). puts bad_doc . errors # = Opening and ending tag mismatch: open line 2 and root # Premature end of data in tag root line 1 Thus, you could use errors.empty? to determine whether the document was well-formed. Strict Well-Formedness Being friendly and fixing markup is all well and good, but sometimes you need to be a Markup Nazi . If you demand compliance from your XML, then you can configure Nokogiri into \"strict\" parsing mode, in which it will raise an exception at the first sign of malformedness: begin bad_doc = Nokogiri :: XML ( badly_formed ) { | config | config . strict } rescue Nokogiri :: XML :: SyntaxError = e puts caught exception: #{ e } end # = caught exception: Premature end of data in tag root line 1","title":"Ensuring well-formed markup"},{"location":"tutorials/ensuring_well_formed_markup.html#ensuring-well-formed-markup","text":"","title":"Ensuring Well-Formed Markup"},{"location":"tutorials/ensuring_well_formed_markup.html#gentle-well-formedness","text":"We've all seen bad markup in our day. I'm talking about markup that doesn't bother to close tags. I'm talking about putting p tags inside p tags, and putting content into an img tag. Nokogiri corrects bad markup like a boss , similarly to how a browser would before rendering. badly_formed = - EOXML root open foo closed bar /closed /root EOXML bad_doc = Nokogiri :: XML badly_formed puts bad_doc # = ?xml version= 1.0 ? # root # open foo # closed bar /closed # /open # /root And Nokogiri will even keep track of what the errors were, if the parse option NOERRORS and NOWARNINGS are turned off (the default for XML documents). puts bad_doc . errors # = Opening and ending tag mismatch: open line 2 and root # Premature end of data in tag root line 1 Thus, you could use errors.empty? to determine whether the document was well-formed.","title":"Gentle Well-Formedness"},{"location":"tutorials/ensuring_well_formed_markup.html#strict-well-formedness","text":"Being friendly and fixing markup is all well and good, but sometimes you need to be a Markup Nazi . If you demand compliance from your XML, then you can configure Nokogiri into \"strict\" parsing mode, in which it will raise an exception at the first sign of malformedness: begin bad_doc = Nokogiri :: XML ( badly_formed ) { | config | config . strict } rescue Nokogiri :: XML :: SyntaxError = e puts caught exception: #{ e } end # = caught exception: Premature end of data in tag root line 1","title":"Strict Well-Formedness"},{"location":"tutorials/getting_help.html","text":"Getting Help and Reporting Issues Halp! So you're having a great time slicing and dicing your XML with Nokogiri, and suddenly something happens that you don't quite understand. O NOES, the good times are over. What do you do? Step 1: Mail nokogiri-talk , grasshopper. The best thing to do if you've got a question, or are unsure how to diagnose a possible issue, want to complain or just ask for advice on how to solve a problem, is to email the nokogiri-talk list. The nokogiri-talk list has hundreds of subscribers who are all using nokogiri and who are happy to lend a hand, offer advice, and bail you out of tricky situations. In addition, other people may have the same issue or complaint, and so preserving the question and responses in the mailing list archive is a gift to future Nokogiri users just like you ! You should also probably subscribe to the list. You can either use the web interface ; or if you're like RMS and hate to use javascripty things like Google's web interface, you can subscribe to the list by sending an empty email to nokogiri-talk+subscribe@googlegroups.com But I want to report a bug! Step 1 should still be your first step. Mail nokogiri-talk first, and verify that this is really a bug. If there's going to be a bug-or-not-bug conversation, it's better that it happens transparently on the list than somewhere hidden, like off-list emails or Github Issues. But I want to verify my issue with the maintainer(s) before I spam the list! Valid questions and complaints aren't spam! :) The maintainers vastly prefer nokogiri-related emails to be sent to nokogiri-talk than to their personal accounts. Again, an archive of discussion has a lot of value. Also, the maintainers may not respond as quickly as some of the subscribers on the mailing list. But I emailed the list and my question hasn't been posted yet! The nokogiri-talk google group is set for first-post moderation, meaning that the first time you email the list, your post will be held for review. Once your post is accepted, there won't be any delay on future emails. There's never more than a few hour delay on moderation. Thanks for your patience. Step 2: \"You got so many Issues you need a magazine rack.\" So you say you've got a bug. That's great! We always want to increase the yummy candy-coated goodness of Nokogiri, so if you've got a bug, we want to hear about it. We track boogs on Github Issues , which notifies the maintainers every time a new ticket is created. What's In a Bug Report? Whoa, do we have strong opinions on this topic. The two most important things that a bug report needs to contain are: Example code that reproduces the observed behavior. An explanation of what the expected behavior is. That's it? Yes, that's it. If you're a solid Rubyist, you should be able to provide a short, self-contained script that reproduces and demonstrates the behavior. Here's a great example. If you want to go above-and-beyond, impress the judge from the Czech Republic, and prove to everyone you went to high school with that you're better than them, you could even write a failing unit test that meets both criteria in one fell swoop. Like this guy. Summary To sum up the rules: Mail nokogiri-talk . No, really, mail nokogiri-talk . If you're really, absolutely, positively sure you've got a bug AND you can reproduce it, then mail nokogiri-talk . If you've confirmed it's a bug on nokogiri-talk , then create a new bug report on Github Issues with your repro code and description of expected behavior. Thanks so much for reading this page! You're a good person, and Nokogiri loves you.","title":"Getting Help"},{"location":"tutorials/getting_help.html#getting-help-and-reporting-issues","text":"","title":"Getting Help and Reporting Issues"},{"location":"tutorials/getting_help.html#halp","text":"So you're having a great time slicing and dicing your XML with Nokogiri, and suddenly something happens that you don't quite understand. O NOES, the good times are over. What do you do?","title":"Halp!"},{"location":"tutorials/getting_help.html#step-1-mail-nokogiri-talk-grasshopper","text":"The best thing to do if you've got a question, or are unsure how to diagnose a possible issue, want to complain or just ask for advice on how to solve a problem, is to email the nokogiri-talk list. The nokogiri-talk list has hundreds of subscribers who are all using nokogiri and who are happy to lend a hand, offer advice, and bail you out of tricky situations. In addition, other people may have the same issue or complaint, and so preserving the question and responses in the mailing list archive is a gift to future Nokogiri users just like you ! You should also probably subscribe to the list. You can either use the web interface ; or if you're like RMS and hate to use javascripty things like Google's web interface, you can subscribe to the list by sending an empty email to nokogiri-talk+subscribe@googlegroups.com","title":"Step 1: Mail nokogiri-talk, grasshopper."},{"location":"tutorials/getting_help.html#but-i-want-to-report-a-bug","text":"Step 1 should still be your first step. Mail nokogiri-talk first, and verify that this is really a bug. If there's going to be a bug-or-not-bug conversation, it's better that it happens transparently on the list than somewhere hidden, like off-list emails or Github Issues.","title":"But I want to report a bug!"},{"location":"tutorials/getting_help.html#but-i-want-to-verify-my-issue-with-the-maintainers-before-i-spam-the-list","text":"Valid questions and complaints aren't spam! :) The maintainers vastly prefer nokogiri-related emails to be sent to nokogiri-talk than to their personal accounts. Again, an archive of discussion has a lot of value. Also, the maintainers may not respond as quickly as some of the subscribers on the mailing list.","title":"But I want to verify my issue with the maintainer(s) before I spam the list!"},{"location":"tutorials/getting_help.html#but-i-emailed-the-list-and-my-question-hasnt-been-posted-yet","text":"The nokogiri-talk google group is set for first-post moderation, meaning that the first time you email the list, your post will be held for review. Once your post is accepted, there won't be any delay on future emails. There's never more than a few hour delay on moderation. Thanks for your patience.","title":"But I emailed the list and my question hasn't been posted yet!"},{"location":"tutorials/getting_help.html#step-2-you-got-so-many-issues-you-need-a-magazine-rack","text":"So you say you've got a bug. That's great! We always want to increase the yummy candy-coated goodness of Nokogiri, so if you've got a bug, we want to hear about it. We track boogs on Github Issues , which notifies the maintainers every time a new ticket is created.","title":"Step 2: \"You got so many Issues you need a magazine rack.\""},{"location":"tutorials/getting_help.html#whats-in-a-bug-report","text":"Whoa, do we have strong opinions on this topic. The two most important things that a bug report needs to contain are: Example code that reproduces the observed behavior. An explanation of what the expected behavior is.","title":"What's In a Bug Report?"},{"location":"tutorials/getting_help.html#thats-it","text":"Yes, that's it. If you're a solid Rubyist, you should be able to provide a short, self-contained script that reproduces and demonstrates the behavior. Here's a great example. If you want to go above-and-beyond, impress the judge from the Czech Republic, and prove to everyone you went to high school with that you're better than them, you could even write a failing unit test that meets both criteria in one fell swoop. Like this guy.","title":"That's it?"},{"location":"tutorials/getting_help.html#summary","text":"To sum up the rules: Mail nokogiri-talk . No, really, mail nokogiri-talk . If you're really, absolutely, positively sure you've got a bug AND you can reproduce it, then mail nokogiri-talk . If you've confirmed it's a bug on nokogiri-talk , then create a new bug report on Github Issues with your repro code and description of expected behavior. Thanks so much for reading this page! You're a good person, and Nokogiri loves you.","title":"Summary"},{"location":"tutorials/installing_nokogiri.html","text":"Installing Nokogiri Nokogiri includes its own updated and patched copies of libxml2 and libxslt libraries. By default, installation of Nokogiri will use these copies. Alternatively, you may install using your operating system's built-in libraries or other custom versions of these libraries. This document also helps with common problems we've heard. If you have an issue not discussed here, please open an issue . For earlier versions of Nokogiri, find instructions in the git history for this document . For other platforms, please send pull requests to sparklemotion/nokogiri.org-tutorials . Install with included libraries (RECOMMENDED) Ubuntu / Debian Install Nokogiri on a brand new Ubuntu system with these commands: sudo apt-get install build-essential patch ruby-dev zlib1g-dev liblzma-dev gem install nokogiri Note for RVM users: you may require libgmp , consider running sudo apt-get install libgmp-dev . FreeBSD / OpenBSD = 6.2 Install Nokogiri on a brand new FreeBSD system with these commands: gem install nokogiri OpenBSD 6.2 Use gcc from ports in order to compile the included libraries: pkg_add -v gcc gem install nokogiri Windows Use Rubyinstaller to install our binary distribution in a flash! gem install nokogiri Or build using DevKit . This is an advanced option you should only try if you know what you're doing. You MUST use Rubygems 2.4.5 or later. Also see more details on this advanced procedure on this nokogiri-talk thread . Red Hat / CentOS Install Nokogiri on a brand new Red Had / CentOS system with these commands: sudo yum install -y gcc ruby-devel zlib-devel # sudo dnf install -y rpm-build # This may be required gem install nokogiri Alternatively, you may install the appropriate epel-release and get the Nokogiri package from EPEL using: sudo yum install -y rubygem-nokogiri GNU Guix Install on any Linux distribution using GNU Guix , a reproducible binary software package management and distribution system. Use this command: guix package -i ruby-nokogiri Note: source code is available here . A short description of how Nokogiri was packaged can be found here . macOS First, make sure you have the latest version of RubyGems and xcode commandline tools: gem update --system xcode-select --install # Then agree to the terms, even if you have done this before! Then install nokogiri: gem install nokogiri This is verified working on maxOS 10.9 w/ Xcode's clang compiler. (Many thanks to @allaire and others for helping!) xcode-select errors with a 'network problem' If, you see this dialog when you run the above commands: Then run this command to turn off forced-authentication with Apple Software Update: sudo defaults delete /Library/Preferences/com.apple.SoftwareUpdate CatalogURL Error Message About Undeclared Identifier LZMA_OK A more recent error mentions an undeclared identifier LZMA_OK : xmlIO.c:1450:52: error: use of undeclared identifier LZMA_OK ret = (__libxml2_xzclose((xzFile) context) == LZMA_OK ) ? 0 : -1; ^ 1 error generated. The solution for this is a little more subtle and can be fixed in a couple of ways. When using Homebrew, there are several libraries that use a formula called xz (including the_silver_searcher and imagemagick ), which by default install a version of liblzma that is incompatible with most Ruby builds. (Homebrew installs only the 64-bit version of the library, but most Ruby builds are universal.) This can be fixed in a couple of ways: a. The most reliable way appears to be temporarily unlinking xz and relinking it during an install of nokogiri : ```sh brew unlink xz gem install nokogiri # or bundle install brew link xz ``` b. The third way is to use a Homebrew-installed libxml2 , as suggested in using your system libraries . ```sh brew install libxml2 # If installing directly gem install nokogiri -- --use-system-libraries \\ --with-xml2-include=$(brew --prefix libxml2)/include/libxml2 # If using Bundle bundle config build.nokogiri --use-system-libraries \\ --with-xml2-include=$(brew --prefix libxml2)/include/libxml2 bundle install ``` When working with this, be certain to use `$(brew --prefix libxml2)` because it will use the correct location for your Homebrew install. Unable to find libraries on macOS Mojave Xcode 10 on macOS Mojave moves the system headers out of /usr/include and so Nokogiri will fail to build. Instead you'll see an error similar to this: Building nokogiri using packaged libraries. ----- libiconv is missing. please visit http://nokogiri.org/tutorials/installing_nokogiri.html for help with installing dependencies. ----- *** extconf.rb failed *** Could not create Makefile due to some reason, probably lack of necessary libraries and/or headers. A temporary workaround to allow previous releases of Nokogiri to build is to install the extra headers package mentioned in the Xcode 10 release notes: open /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg Other macOS Tips Make sure ruby is compiled with the latest clang compiler. Binary gems and ruby should be compiled with the same compiler/environment. If you have multiple versions of Xcode installed, make sure you use the right xcode-select . Try installing with system libraries . If reporting an issue about the macOS installation instructions, please mention @zenspider. Install with system libraries Nokogiri will refuse to build against certain versions of libxml2 , libxslt supplied with your operating system, and certain versions will cause mysterious problems. The compile scripts will warn you if you try to do this. Step 1: Install pkg-config On Debian/Ubuntu: sudo apt-get install pkg-config On FreeBSD: sudo pkg install pkgconf Step 2: Build Nokogiri Using gem: gem install nokogiri -- --use-system-libraries Or, use Bundler: bundle config build.nokogiri --use-system-libraries bundle install Install with custom / non-standard libraries If: you've got libxml2 and/or libxslt installed in a nonstandard place, and you don't have pkg-config installed you can use command-line parameters to the gem install command to specify build parameters. If you've got the proper config scripts: gem install nokogiri -- \\ --use-system-libraries \\ --with-xml2-config = /path/to/xml2-config \\ --with-xslt-config = /path/to/xslt-config or, you can specify the installation root directory: gem install nokogiri -- \\ --use-system-libraries \\ --with-xml2-dir = /path/to/dir \\ --with-xslt-dir = /path/to/dir or, you can specify include and library directories separately: gem install nokogiri -- \\ --use-system-libraries \\ --with-xml2-lib = /path/to/builds/lib \\ --with-xml2-include = /path/to/builds/include/libxml2 \\ --with-xslt-lib = /path/to/builds/lib \\ --with-xslt-include = /path/to/builds/include Note: By default, libxslt header files are installed into the root include directory, but libxml2 header files are installed into a subdirectory thereof named libxml2 . It's likely that you'll also need to specify the location of your zlib and iconv (and possibly exslt ) install directories as well. In that case, you can add the options: gem install nokogiri -- \\ --use-system-libraries \\ # ... --with-iconv-dir = /path/to/dir \\ --with-zlib-dir = /path/to/dir \\ [ --with-exslt-dir = /path/to/dir ] [ --with-exslt-config = /path/to/exslt-config ] How to tell Bundler to use custom parameters bundle config build.nokogiri \\ --use-system-libraries \\ --with-xml2-lib=/usr/local/lib \\ --with-xml2-include=/usr/local/include/libxml2/libxml \\ --with-xslt-lib=/usr/local/lib \\ --with-xslt-include=/usr/local/include/libxslt \\ --with-iconv-lib=/usr/local/lib \\ --with-iconv-include=/usr/local/include Do not attempt Bundler installation using Bundler versions before v1.8.3. See bundler/bundler#3053 . But if you really want to, see earlier git history of this file, which includes a workaround. SmartOS (Nonstandard) SmartOS installation requires building and using libxml2/libxslt/libiconv in a nonstandard location. Building on the previous section, here's how to do it: (Note: pkgsrc is included in JPC SmartOS instances) pkgin install ruby gcc49 libxml2 libxslt zlib libiconv ruby22-rake gmake ln -s /opt/local/gcc49/bin/gcc /opt/local/bin/gcc gem install nokogiri -- \\ --use-system-libraries \\ --with-xml2-lib = /opt/local/lib \\ --with-xml2-include = /opt/local/include/libxml2 \\ --with-xslt-lib = /opt/local/lib \\ --with-xslt-include = /opt/local/include/libxslt \\ --with-iconv-lib = /opt/local/lib \\ --with-iconv-include = /opt/local/include \\ --with-zlib-dir = /opt/local/lib See the previous section for guidance on how to instruct Bundler to use these options.","title":"Installing Nokogiri"},{"location":"tutorials/installing_nokogiri.html#installing-nokogiri","text":"Nokogiri includes its own updated and patched copies of libxml2 and libxslt libraries. By default, installation of Nokogiri will use these copies. Alternatively, you may install using your operating system's built-in libraries or other custom versions of these libraries. This document also helps with common problems we've heard. If you have an issue not discussed here, please open an issue . For earlier versions of Nokogiri, find instructions in the git history for this document . For other platforms, please send pull requests to sparklemotion/nokogiri.org-tutorials .","title":"Installing Nokogiri"},{"location":"tutorials/installing_nokogiri.html#install-with-included-libraries-recommended","text":"","title":"Install with included libraries (RECOMMENDED)"},{"location":"tutorials/installing_nokogiri.html#ubuntu-debian","text":"Install Nokogiri on a brand new Ubuntu system with these commands: sudo apt-get install build-essential patch ruby-dev zlib1g-dev liblzma-dev gem install nokogiri Note for RVM users: you may require libgmp , consider running sudo apt-get install libgmp-dev .","title":"Ubuntu / Debian"},{"location":"tutorials/installing_nokogiri.html#freebsd-openbsd-62","text":"Install Nokogiri on a brand new FreeBSD system with these commands: gem install nokogiri","title":"FreeBSD / OpenBSD &gt;= 6.2"},{"location":"tutorials/installing_nokogiri.html#openbsd-62","text":"Use gcc from ports in order to compile the included libraries: pkg_add -v gcc gem install nokogiri","title":"OpenBSD &lt; 6.2"},{"location":"tutorials/installing_nokogiri.html#windows","text":"Use Rubyinstaller to install our binary distribution in a flash! gem install nokogiri Or build using DevKit . This is an advanced option you should only try if you know what you're doing. You MUST use Rubygems 2.4.5 or later. Also see more details on this advanced procedure on this nokogiri-talk thread .","title":"Windows"},{"location":"tutorials/installing_nokogiri.html#red-hat-centos","text":"Install Nokogiri on a brand new Red Had / CentOS system with these commands: sudo yum install -y gcc ruby-devel zlib-devel # sudo dnf install -y rpm-build # This may be required gem install nokogiri Alternatively, you may install the appropriate epel-release and get the Nokogiri package from EPEL using: sudo yum install -y rubygem-nokogiri","title":"Red Hat / CentOS"},{"location":"tutorials/installing_nokogiri.html#gnu-guix","text":"Install on any Linux distribution using GNU Guix , a reproducible binary software package management and distribution system. Use this command: guix package -i ruby-nokogiri Note: source code is available here . A short description of how Nokogiri was packaged can be found here .","title":"GNU Guix"},{"location":"tutorials/installing_nokogiri.html#macos","text":"First, make sure you have the latest version of RubyGems and xcode commandline tools: gem update --system xcode-select --install # Then agree to the terms, even if you have done this before! Then install nokogiri: gem install nokogiri This is verified working on maxOS 10.9 w/ Xcode's clang compiler. (Many thanks to @allaire and others for helping!)","title":"macOS"},{"location":"tutorials/installing_nokogiri.html#xcode-select-errors-with-a-network-problem","text":"If, you see this dialog when you run the above commands: Then run this command to turn off forced-authentication with Apple Software Update: sudo defaults delete /Library/Preferences/com.apple.SoftwareUpdate CatalogURL","title":"xcode-select errors with a 'network problem'"},{"location":"tutorials/installing_nokogiri.html#error-message-about-undeclared-identifier-lzma_ok","text":"A more recent error mentions an undeclared identifier LZMA_OK : xmlIO.c:1450:52: error: use of undeclared identifier LZMA_OK ret = (__libxml2_xzclose((xzFile) context) == LZMA_OK ) ? 0 : -1; ^ 1 error generated. The solution for this is a little more subtle and can be fixed in a couple of ways. When using Homebrew, there are several libraries that use a formula called xz (including the_silver_searcher and imagemagick ), which by default install a version of liblzma that is incompatible with most Ruby builds. (Homebrew installs only the 64-bit version of the library, but most Ruby builds are universal.) This can be fixed in a couple of ways: a. The most reliable way appears to be temporarily unlinking xz and relinking it during an install of nokogiri : ```sh brew unlink xz gem install nokogiri # or bundle install brew link xz ``` b. The third way is to use a Homebrew-installed libxml2 , as suggested in using your system libraries . ```sh brew install libxml2 # If installing directly gem install nokogiri -- --use-system-libraries \\ --with-xml2-include=$(brew --prefix libxml2)/include/libxml2 # If using Bundle bundle config build.nokogiri --use-system-libraries \\ --with-xml2-include=$(brew --prefix libxml2)/include/libxml2 bundle install ``` When working with this, be certain to use `$(brew --prefix libxml2)` because it will use the correct location for your Homebrew install.","title":"Error Message About Undeclared Identifier LZMA_OK"},{"location":"tutorials/installing_nokogiri.html#unable-to-find-libraries-on-macos-mojave","text":"Xcode 10 on macOS Mojave moves the system headers out of /usr/include and so Nokogiri will fail to build. Instead you'll see an error similar to this: Building nokogiri using packaged libraries. ----- libiconv is missing. please visit http://nokogiri.org/tutorials/installing_nokogiri.html for help with installing dependencies. ----- *** extconf.rb failed *** Could not create Makefile due to some reason, probably lack of necessary libraries and/or headers. A temporary workaround to allow previous releases of Nokogiri to build is to install the extra headers package mentioned in the Xcode 10 release notes: open /Library/Developer/CommandLineTools/Packages/macOS_SDK_headers_for_macOS_10.14.pkg","title":"Unable to find libraries on macOS Mojave"},{"location":"tutorials/installing_nokogiri.html#other-macos-tips","text":"Make sure ruby is compiled with the latest clang compiler. Binary gems and ruby should be compiled with the same compiler/environment. If you have multiple versions of Xcode installed, make sure you use the right xcode-select . Try installing with system libraries . If reporting an issue about the macOS installation instructions, please mention @zenspider.","title":"Other macOS Tips"},{"location":"tutorials/installing_nokogiri.html#install-with-system-libraries","text":"Nokogiri will refuse to build against certain versions of libxml2 , libxslt supplied with your operating system, and certain versions will cause mysterious problems. The compile scripts will warn you if you try to do this.","title":"Install with system libraries"},{"location":"tutorials/installing_nokogiri.html#step-1-install-pkg-config","text":"On Debian/Ubuntu: sudo apt-get install pkg-config On FreeBSD: sudo pkg install pkgconf","title":"Step 1: Install pkg-config"},{"location":"tutorials/installing_nokogiri.html#step-2-build-nokogiri","text":"Using gem: gem install nokogiri -- --use-system-libraries Or, use Bundler: bundle config build.nokogiri --use-system-libraries bundle install","title":"Step 2: Build Nokogiri"},{"location":"tutorials/installing_nokogiri.html#install-with-custom-non-standard-libraries","text":"If: you've got libxml2 and/or libxslt installed in a nonstandard place, and you don't have pkg-config installed you can use command-line parameters to the gem install command to specify build parameters. If you've got the proper config scripts: gem install nokogiri -- \\ --use-system-libraries \\ --with-xml2-config = /path/to/xml2-config \\ --with-xslt-config = /path/to/xslt-config or, you can specify the installation root directory: gem install nokogiri -- \\ --use-system-libraries \\ --with-xml2-dir = /path/to/dir \\ --with-xslt-dir = /path/to/dir or, you can specify include and library directories separately: gem install nokogiri -- \\ --use-system-libraries \\ --with-xml2-lib = /path/to/builds/lib \\ --with-xml2-include = /path/to/builds/include/libxml2 \\ --with-xslt-lib = /path/to/builds/lib \\ --with-xslt-include = /path/to/builds/include Note: By default, libxslt header files are installed into the root include directory, but libxml2 header files are installed into a subdirectory thereof named libxml2 . It's likely that you'll also need to specify the location of your zlib and iconv (and possibly exslt ) install directories as well. In that case, you can add the options: gem install nokogiri -- \\ --use-system-libraries \\ # ... --with-iconv-dir = /path/to/dir \\ --with-zlib-dir = /path/to/dir \\ [ --with-exslt-dir = /path/to/dir ] [ --with-exslt-config = /path/to/exslt-config ]","title":"Install with custom / non-standard libraries"},{"location":"tutorials/installing_nokogiri.html#how-to-tell-bundler-to-use-custom-parameters","text":"bundle config build.nokogiri \\ --use-system-libraries \\ --with-xml2-lib=/usr/local/lib \\ --with-xml2-include=/usr/local/include/libxml2/libxml \\ --with-xslt-lib=/usr/local/lib \\ --with-xslt-include=/usr/local/include/libxslt \\ --with-iconv-lib=/usr/local/lib \\ --with-iconv-include=/usr/local/include Do not attempt Bundler installation using Bundler versions before v1.8.3. See bundler/bundler#3053 . But if you really want to, see earlier git history of this file, which includes a workaround.","title":"How to tell Bundler to use custom parameters"},{"location":"tutorials/installing_nokogiri.html#smartos-nonstandard","text":"SmartOS installation requires building and using libxml2/libxslt/libiconv in a nonstandard location. Building on the previous section, here's how to do it: (Note: pkgsrc is included in JPC SmartOS instances) pkgin install ruby gcc49 libxml2 libxslt zlib libiconv ruby22-rake gmake ln -s /opt/local/gcc49/bin/gcc /opt/local/bin/gcc gem install nokogiri -- \\ --use-system-libraries \\ --with-xml2-lib = /opt/local/lib \\ --with-xml2-include = /opt/local/include/libxml2 \\ --with-xslt-lib = /opt/local/lib \\ --with-xslt-include = /opt/local/include/libxslt \\ --with-iconv-lib = /opt/local/lib \\ --with-iconv-include = /opt/local/include \\ --with-zlib-dir = /opt/local/lib See the previous section for guidance on how to instruct Bundler to use these options.","title":"SmartOS (Nonstandard)"},{"location":"tutorials/modifying_an_html_xml_document.html","text":"Modifying an HTML / XML Document Changing text contents Assuming we have the following HTML document: @doc = Nokogiri :: HTML :: DocumentFragment . parse - EOHTML body h1 Three s Company /h1 div A love triangle. /div /body EOHTML Let's change the header's text contents: h1 = @doc . at_css h1 h1 . content = Snap, Crackle Pop @doc . to_html # = body # + # h1 Snap, Crackle amp; Pop /h1 # + # div A love triangle. /div # + # # + # /body You'll notice that, when you use #content= , entities are properly escaped. Pow! Moving nodes The simplest method of moving a node is assign its parent: h1 = @doc . at_css h1 div = @doc . at_css div h1 . parent = div @doc . to_html # = body # + # # + # div A love triangle. h1 Three s Company /h1 # + # /div # + # # + # /body But you could also arrange it next to other nodes: div . add_next_sibling ( h1 ) @doc . to_html # = body # + # # + # div A love triangle. /div # + # h1 Three s Company /h1 # + # # + # /body Modifying Nodes and Attributes h1 . name = h2 h1 [ class ] = show-title @doc . to_html # = body # + # h2 class=\\ show-title\\ Three s Company /h2 # + # div A love triangle. /div # + # # + # /body Creating new nodes Often the easiest thing to do is pass markup to one of the Node methods to create siblings: h1 . add_next_sibling h3 1977 - 1984 /h3 @doc . to_html # = body # + # h1 Three s Company /h1 # + # h3 1977 - 1984 /h3 # + # div A love triangle. /div # + # # + # /body or you can manually create a node object, if you're a detail-oriented person: h3 = Nokogiri :: XML :: Node . new h3 , @doc h3 . content = 1977 - 1984 h1 . add_next_sibling ( h3 ) @doc . to_html # = body # + # h1 Three s Company /h1 # + # h3 1977 - 1984 /h3 # + # div A love triangle. /div # + # # + # /body Wrapping a NodeSet If you wanted to wrap new HTML around each node in a Nodeset, here's an example of how to do it: nodes = @doc . css h1,div nodes . wrap ( div class= container /div ) @doc . to_html # = body # + # div class=\\ container\\ h1 Three s Company /h1 /div # + # div class=\\ container\\ div A love triangle. /div /div # + # # + # /body Adding a Processing Instruction (like ?xml-stylesheet? ) If you want to add a processing instruction (a.k.a. \"PI node\"), like an xml-stylesheet declaration, you should first create the node using Nokogiri::XML::ProcessingInstruction.new and then add it to the document as a previous-sibling of the root node: doc = Nokogiri :: XML root foo /root doc . to_xml # = ?xml version=\\ 1.0\\ ? # + root foo /root # pi = Nokogiri :: XML :: ProcessingInstruction . new ( doc , xml-stylesheet , type= text/xsl href= foo.xsl ) doc . root . add_previous_sibling pi doc . to_xml # = ?xml version=\\ 1.0\\ ? # + # ?xml-stylesheet type=\\ text/xsl\\ href=\\ foo.xsl\\ ? # + # root foo /root #","title":"Modifying an HTML/XML document"},{"location":"tutorials/modifying_an_html_xml_document.html#modifying-an-html-xml-document","text":"","title":"Modifying an HTML / XML Document"},{"location":"tutorials/modifying_an_html_xml_document.html#changing-text-contents","text":"Assuming we have the following HTML document: @doc = Nokogiri :: HTML :: DocumentFragment . parse - EOHTML body h1 Three s Company /h1 div A love triangle. /div /body EOHTML Let's change the header's text contents: h1 = @doc . at_css h1 h1 . content = Snap, Crackle Pop @doc . to_html # = body # + # h1 Snap, Crackle amp; Pop /h1 # + # div A love triangle. /div # + # # + # /body You'll notice that, when you use #content= , entities are properly escaped. Pow!","title":"Changing text contents"},{"location":"tutorials/modifying_an_html_xml_document.html#moving-nodes","text":"The simplest method of moving a node is assign its parent: h1 = @doc . at_css h1 div = @doc . at_css div h1 . parent = div @doc . to_html # = body # + # # + # div A love triangle. h1 Three s Company /h1 # + # /div # + # # + # /body But you could also arrange it next to other nodes: div . add_next_sibling ( h1 ) @doc . to_html # = body # + # # + # div A love triangle. /div # + # h1 Three s Company /h1 # + # # + # /body","title":"Moving nodes"},{"location":"tutorials/modifying_an_html_xml_document.html#modifying-nodes-and-attributes","text":"h1 . name = h2 h1 [ class ] = show-title @doc . to_html # = body # + # h2 class=\\ show-title\\ Three s Company /h2 # + # div A love triangle. /div # + # # + # /body","title":"Modifying Nodes and Attributes"},{"location":"tutorials/modifying_an_html_xml_document.html#creating-new-nodes","text":"Often the easiest thing to do is pass markup to one of the Node methods to create siblings: h1 . add_next_sibling h3 1977 - 1984 /h3 @doc . to_html # = body # + # h1 Three s Company /h1 # + # h3 1977 - 1984 /h3 # + # div A love triangle. /div # + # # + # /body or you can manually create a node object, if you're a detail-oriented person: h3 = Nokogiri :: XML :: Node . new h3 , @doc h3 . content = 1977 - 1984 h1 . add_next_sibling ( h3 ) @doc . to_html # = body # + # h1 Three s Company /h1 # + # h3 1977 - 1984 /h3 # + # div A love triangle. /div # + # # + # /body","title":"Creating new nodes"},{"location":"tutorials/modifying_an_html_xml_document.html#wrapping-a-nodeset","text":"If you wanted to wrap new HTML around each node in a Nodeset, here's an example of how to do it: nodes = @doc . css h1,div nodes . wrap ( div class= container /div ) @doc . to_html # = body # + # div class=\\ container\\ h1 Three s Company /h1 /div # + # div class=\\ container\\ div A love triangle. /div /div # + # # + # /body","title":"Wrapping a NodeSet"},{"location":"tutorials/modifying_an_html_xml_document.html#adding-a-processing-instruction","text":"","title":"Adding a Processing Instruction"},{"location":"tutorials/modifying_an_html_xml_document.html#like-xml-stylesheet","text":"If you want to add a processing instruction (a.k.a. \"PI node\"), like an xml-stylesheet declaration, you should first create the node using Nokogiri::XML::ProcessingInstruction.new and then add it to the document as a previous-sibling of the root node: doc = Nokogiri :: XML root foo /root doc . to_xml # = ?xml version=\\ 1.0\\ ? # + root foo /root # pi = Nokogiri :: XML :: ProcessingInstruction . new ( doc , xml-stylesheet , type= text/xsl href= foo.xsl ) doc . root . add_previous_sibling pi doc . to_xml # = ?xml version=\\ 1.0\\ ? # + # ?xml-stylesheet type=\\ text/xsl\\ href=\\ foo.xsl\\ ? # + # root foo /root #","title":"(like &lt;?xml-stylesheet?&gt;)"},{"location":"tutorials/more_resources.html","text":"More Resources sax-machine feedzirra elementor mechanize markup_validity","title":"More Resources"},{"location":"tutorials/more_resources.html#more-resources","text":"sax-machine feedzirra elementor mechanize markup_validity","title":"More Resources"},{"location":"tutorials/parsing_an_html_xml_document.html","text":"Parsing an HTML / XML Document From a String We've tried to make this easy on you. Really! We're here to make your life easier. html_doc = Nokogiri :: HTML ( html body h1 Mr. Belvedere Fan Club /h1 /body /html ) xml_doc = Nokogiri :: XML ( root aliens alien name Alf /name /alien /aliens /root ) The variables html_doc and xml_doc are Nokogiri documents, which have all kinds of interesting properties and methods that you can read about here . We'll cover the interesting bits in other chapters. From a File Note that you don't need to read the file into a string variable. Nokogiri will do this for you. doc = File . open ( blossom.xml ) { | f | Nokogiri :: XML ( f ) } Clever Nokogiri! With the time you just saved, approach enlightenment by meditating on this koan . From the Internets I understand that there may be some HTML documents available on the World Wide Web. require open-uri doc = Nokogiri :: HTML ( open ( http://www.threescompany.com/ )) Parse Options Nokogiri offers quite a few options that affect how a document is parsed; you can read about them in the XML::ParseOptions docs . Notably, Nokogiri will treat input as untrusted documents by default, thereby avoiding a class of vulnerabilities known as XXE or \"XML eXternal Entity\" processing. What this means is that Nokogiri won't attempt to load external DTDs or access the network for any external resources. Some commonly-used parse options are: NONET - Prevent any network connections during parsing. Recommended for parsing untrusted documents. This is set by default! RECOVER - Attempt to recover from errors. Recommended for parsing malformed or invalid documents. This is set by default! NOBLANKS - Remove blank nodes NOENT - Substitute entities NOERROR - Suppress error reports STRICT - Strict parsing; raise an error when parsing malformed documents DTDLOAD and DTDVALID - If you want DTD validation HUGE - use to skip hardcoded limits around document size or DOM depth; comes with a performance penalty You could use them by handcrafting an artisanal bitmap (not recommended): doc = Nokogiri :: XML ( File . open ( blossom.xml )) do | config | config . options = Nokogiri :: XML :: ParseOptions :: STRICT | Nokogiri :: XML :: ParseOptions :: NOBLANKS end But it's more idiomatic to use the chainable shortcuts on the config object instead: doc = Nokogiri :: XML ( File . open ( blossom.xml )) do | config | config . strict . noblanks end Notably, if you want to turn off an option that's set by default, you can prefix a \"no\" to the config shortcut: doc = Nokogiri :: XML ( File . open ( blossom.xml )) do | config | config . norecover end Leading to the perhaps-surprising (but logical!) nononet to turn networking back on: doc = Nokogiri :: XML ( File . open ( blossom.xml )) do | config | config . nononet end Encoding Strings are always stored as UTF-8 internally. Methods that return text values will always return UTF-8 encoded strings. Methods that return XML (like to_xml, to_html and inner_html) will return a string encoded like the source document. WARNING Some documents declare one particular encoding, but use a different one. So, which encoding should the parser choose? Remember that data is just a stream of bytes. Only us humans add meaning to that stream. Any particular set of bytes could be valid characters in multiple encodings, so detecting encoding with 100% accuracy is not possible. libxml2 does its best, but it can't be right 100% of the time. If you want Nokogiri to handle the document encoding properly, your best bet is to explicitly set the encoding. Here is an example of explicitly setting the encoding to EUC-JP on the parser: doc = Nokogiri . XML ( foo bar / foo , nil , EUC-JP )","title":"Parsing an HTML/XML document"},{"location":"tutorials/parsing_an_html_xml_document.html#parsing-an-html-xml-document","text":"","title":"Parsing an HTML / XML Document"},{"location":"tutorials/parsing_an_html_xml_document.html#from-a-string","text":"We've tried to make this easy on you. Really! We're here to make your life easier. html_doc = Nokogiri :: HTML ( html body h1 Mr. Belvedere Fan Club /h1 /body /html ) xml_doc = Nokogiri :: XML ( root aliens alien name Alf /name /alien /aliens /root ) The variables html_doc and xml_doc are Nokogiri documents, which have all kinds of interesting properties and methods that you can read about here . We'll cover the interesting bits in other chapters.","title":"From a String"},{"location":"tutorials/parsing_an_html_xml_document.html#from-a-file","text":"Note that you don't need to read the file into a string variable. Nokogiri will do this for you. doc = File . open ( blossom.xml ) { | f | Nokogiri :: XML ( f ) } Clever Nokogiri! With the time you just saved, approach enlightenment by meditating on this koan .","title":"From a File"},{"location":"tutorials/parsing_an_html_xml_document.html#from-the-internets","text":"I understand that there may be some HTML documents available on the World Wide Web. require open-uri doc = Nokogiri :: HTML ( open ( http://www.threescompany.com/ ))","title":"From the Internets"},{"location":"tutorials/parsing_an_html_xml_document.html#parse-options","text":"Nokogiri offers quite a few options that affect how a document is parsed; you can read about them in the XML::ParseOptions docs . Notably, Nokogiri will treat input as untrusted documents by default, thereby avoiding a class of vulnerabilities known as XXE or \"XML eXternal Entity\" processing. What this means is that Nokogiri won't attempt to load external DTDs or access the network for any external resources. Some commonly-used parse options are: NONET - Prevent any network connections during parsing. Recommended for parsing untrusted documents. This is set by default! RECOVER - Attempt to recover from errors. Recommended for parsing malformed or invalid documents. This is set by default! NOBLANKS - Remove blank nodes NOENT - Substitute entities NOERROR - Suppress error reports STRICT - Strict parsing; raise an error when parsing malformed documents DTDLOAD and DTDVALID - If you want DTD validation HUGE - use to skip hardcoded limits around document size or DOM depth; comes with a performance penalty You could use them by handcrafting an artisanal bitmap (not recommended): doc = Nokogiri :: XML ( File . open ( blossom.xml )) do | config | config . options = Nokogiri :: XML :: ParseOptions :: STRICT | Nokogiri :: XML :: ParseOptions :: NOBLANKS end But it's more idiomatic to use the chainable shortcuts on the config object instead: doc = Nokogiri :: XML ( File . open ( blossom.xml )) do | config | config . strict . noblanks end Notably, if you want to turn off an option that's set by default, you can prefix a \"no\" to the config shortcut: doc = Nokogiri :: XML ( File . open ( blossom.xml )) do | config | config . norecover end Leading to the perhaps-surprising (but logical!) nononet to turn networking back on: doc = Nokogiri :: XML ( File . open ( blossom.xml )) do | config | config . nononet end","title":"Parse Options"},{"location":"tutorials/parsing_an_html_xml_document.html#encoding","text":"Strings are always stored as UTF-8 internally. Methods that return text values will always return UTF-8 encoded strings. Methods that return XML (like to_xml, to_html and inner_html) will return a string encoded like the source document. WARNING Some documents declare one particular encoding, but use a different one. So, which encoding should the parser choose? Remember that data is just a stream of bytes. Only us humans add meaning to that stream. Any particular set of bytes could be valid characters in multiple encodings, so detecting encoding with 100% accuracy is not possible. libxml2 does its best, but it can't be right 100% of the time. If you want Nokogiri to handle the document encoding properly, your best bet is to explicitly set the encoding. Here is an example of explicitly setting the encoding to EUC-JP on the parser: doc = Nokogiri . XML ( foo bar / foo , nil , EUC-JP )","title":"Encoding"},{"location":"tutorials/searching_a_xml_html_document.html","text":"Searching an HTML / XML Document Basic Searching Let's suppose you have the following document: [shows.xml] root sitcoms sitcom name Married with Children /name characters character Al Bundy /character character Bud Bundy /character character Marcy Darcy /character /characters /sitcom sitcom name Perfect Strangers /name characters character Larry Appleton /character character Balki Bartokomous /character /characters /sitcom /sitcoms dramas drama name The A-Team /name characters character John Hannibal Smith /character character Templeton Face Peck /character character B.A. Baracus /character character Howling Mad Murdock /character /characters /drama /dramas /root Let's further suppose that you want a list of all the characters in all the shows in this document. @doc = Nokogiri :: XML ( File . open ( shows.xml )) @doc . xpath ( //character ) # = [ character Al Bundy /character , # character Bud Bundy /character , # character Marcy Darcy /character , # character Larry Appleton /character , # character Balki Bartokomous /character , # character John \\ Hannibal\\ Smith /character , # character Templeton \\ Face\\ Peck /character , # character \\ B.A.\\ Baracus /character , # character \\ Howling Mad\\ Murdock /character ] The Node methods xpath and css actually return a NodeSet , which acts very much like an array, and contains matching nodes from the document. characters = @doc . xpath ( //character ) characters [ 0 ]. to_s # = character Al Bundy /character You can use any XPath or CSS query you like (see the chapter on XPath and CSS syntax for more information). @doc . xpath ( //dramas//character ) # = [ character John \\ Hannibal\\ Smith /character , # character Templeton \\ Face\\ Peck /character , # character \\ B.A.\\ Baracus /character , # character \\ Howling Mad\\ Murdock /character ] Notably, you can even use CSS queries in an XML document! characters = @doc . css ( sitcoms name ) # = [ name Married with Children /name , name Perfect Strangers /name ] CSS queries are often the easiest and most succinct way to express what you're looking for, so don't be afraid to use them! Single Results If you know you're going to get only a single result back, you can use the shortcuts at_css and at_xpath instead of having to access the first element of a NodeSet. @doc . css ( dramas name ) . first # = name The A-Team /name @doc . at_css ( dramas name ) # = name The A-Team /name Namespaces Just like our Ruby code, XML can suffer from name collisions. For example, an autoparts dealer can sell tires and so can a bike dealer. Both of them may use a \"tire\" tag to describe the tires they sell. However, we need to be able to tell the difference between a car tire and a bike tire . This is where namespaces come to the rescue. Namespaces associate tags with a unique URL. Let's take a look at the autoparts store's XML versus the bike stores: [parts.xml] parts !-- Alice s Auto Parts Store -- inventory xmlns= http://alicesautoparts.com/ tire all weather /tire tire studded /tire tire extra wide /tire /inventory !-- Bob s Bike Shop -- inventory xmlns= http://bobsbikes.com/ tire street /tire tire mountain /tire /inventory /parts Since the URLs are unique, we can associate our query with a URL and get only the tires belonging to that url: @doc = Nokogiri :: XML ( File . read ( parts.xml )) car_tires = @doc . xpath ( //car:tire , car = http://alicesautoparts.com/ ) # = [ tire all weather /tire , # tire studded /tire , # tire extra wide /tire ] bike_tires = @doc . xpath ( //bike:tire , bike = http://bobsbikes.com/ ) # = [ tire street /tire , tire mountain /tire ] To make this namespace registration a bit easier, nokogiri will automatically register any namespaces it finds on the root node for you . Nokogiri will associate the name in the declaration with the supplied URL. If we stick to this naming convention, we can shorten up our code. Let's take this atom feed for example: [atom.xml] ?xml version= 1.0 encoding= utf-8 ? feed xmlns= http://www.w3.org/2005/Atom title Example Feed /title link href= http://example.org/ / updated 2003-12-13T18:30:02Z /updated author name John Doe /name /author id urn:uuid:60a76c80-d399-11d9-b93C-0003939e0af6 /id entry title Atom-Powered Robots Run Amok /title link href= http://example.org/2003/12/13/atom03 / id urn:uuid:1225c695-cfb8-4ebb-aaaa-80da344efa6a /id updated 2003-12-13T18:30:02Z /updated summary Some text. /summary /entry /feed If we stick to the convention, we can grab all title tags like this @doc . xpath ( //xmlns:title ) # = [ title Example Feed /title , title Atom-Powered Robots Run Amok /title ] Don't be fooled though. You do not have to use XPath to get the benefits of namespaces. CSS selectors can be used as well. CSS just uses the pipe symbol to indicate a namespace search. Let's see the previous search rewritten to use CSS: @doc . css ( xmlns|title ) # = [ title Example Feed /title , title Atom-Powered Robots Run Amok /title ] When using CSS, if the namespace is called \"xmlns\", you can even omit the namespace name. That means your CSS will reduce to: @doc . css ( title ) # = [ title Example Feed /title , title Atom-Powered Robots Run Amok /title ] Dealing with namespaces is a broad topic. If you need more examples, be sure to check out this blog post or send an email to the mailing list , and we can help out. But I'm Lazy and Don't Want to Deal With Namespaces! Lazy == Efficient, so no judgements. :) If you have an XML document with namespaces, but would prefer to ignore them entirely (and query as if Tim Bray had never invented them), then you can call remove_namespaces! on an XML::Document to remove all namespaces. Of course, if the document had nodes with the same names but different namespaces, they will now be ambiguous. But you're lazy! You don't care! Slop 1 Maybe you want a more interactive (read: sloppy) way to access nodes and attributes. If you like what XmlSimple does, then you'll probably like Nokogiri's Slop mode. 2 Slop mode allows you to violate the Law of Demeter with extreme prejudice, by using #method_missing to introspect on a node's child tags. 3 doc = Nokogiri :: Slop - EOXML employees employee status= active fullname Dean Martin /fullname /employee employee status= inactive fullname Jerry Lewis /fullname /employee /employees EOXML # navigate! doc . employees . employee . last . fullname . content # = Jerry Lewis # access node attributes! doc . employees . employee . first [ status ] # = active # use some xpath! doc . employees . employee ( [@status= active ] ) . fullname . content # = Dean Martin doc . employees . employee ( :xpath = @status= active ) . fullname . content # = Dean Martin # use some css! doc . employees . employee ( [status= active ] ) . fullname . content # = Dean Martin doc . employees . employee ( :css = [status= active ] ) . fullname . content # = Dean Martin Aww yeah. Can you feel the spirit of @jbarnette and @nakajima flowing through you? That's the power of the slop . 4 Don't use this. This may or may not be a backhanded compliment. No, really, don't use this. If you use it, don't report bugs. You've been warned!","title":"Searching a XML/HTML document"},{"location":"tutorials/searching_a_xml_html_document.html#searching-an-html-xml-document","text":"","title":"Searching an HTML / XML Document"},{"location":"tutorials/searching_a_xml_html_document.html#basic-searching","text":"Let's suppose you have the following document: [shows.xml] root sitcoms sitcom name Married with Children /name characters character Al Bundy /character character Bud Bundy /character character Marcy Darcy /character /characters /sitcom sitcom name Perfect Strangers /name characters character Larry Appleton /character character Balki Bartokomous /character /characters /sitcom /sitcoms dramas drama name The A-Team /name characters character John Hannibal Smith /character character Templeton Face Peck /character character B.A. Baracus /character character Howling Mad Murdock /character /characters /drama /dramas /root Let's further suppose that you want a list of all the characters in all the shows in this document. @doc = Nokogiri :: XML ( File . open ( shows.xml )) @doc . xpath ( //character ) # = [ character Al Bundy /character , # character Bud Bundy /character , # character Marcy Darcy /character , # character Larry Appleton /character , # character Balki Bartokomous /character , # character John \\ Hannibal\\ Smith /character , # character Templeton \\ Face\\ Peck /character , # character \\ B.A.\\ Baracus /character , # character \\ Howling Mad\\ Murdock /character ] The Node methods xpath and css actually return a NodeSet , which acts very much like an array, and contains matching nodes from the document. characters = @doc . xpath ( //character ) characters [ 0 ]. to_s # = character Al Bundy /character You can use any XPath or CSS query you like (see the chapter on XPath and CSS syntax for more information). @doc . xpath ( //dramas//character ) # = [ character John \\ Hannibal\\ Smith /character , # character Templeton \\ Face\\ Peck /character , # character \\ B.A.\\ Baracus /character , # character \\ Howling Mad\\ Murdock /character ] Notably, you can even use CSS queries in an XML document! characters = @doc . css ( sitcoms name ) # = [ name Married with Children /name , name Perfect Strangers /name ] CSS queries are often the easiest and most succinct way to express what you're looking for, so don't be afraid to use them!","title":"Basic Searching"},{"location":"tutorials/searching_a_xml_html_document.html#single-results","text":"If you know you're going to get only a single result back, you can use the shortcuts at_css and at_xpath instead of having to access the first element of a NodeSet. @doc . css ( dramas name ) . first # = name The A-Team /name @doc . at_css ( dramas name ) # = name The A-Team /name","title":"Single Results"},{"location":"tutorials/searching_a_xml_html_document.html#namespaces","text":"Just like our Ruby code, XML can suffer from name collisions. For example, an autoparts dealer can sell tires and so can a bike dealer. Both of them may use a \"tire\" tag to describe the tires they sell. However, we need to be able to tell the difference between a car tire and a bike tire . This is where namespaces come to the rescue. Namespaces associate tags with a unique URL. Let's take a look at the autoparts store's XML versus the bike stores: [parts.xml] parts !-- Alice s Auto Parts Store -- inventory xmlns= http://alicesautoparts.com/ tire all weather /tire tire studded /tire tire extra wide /tire /inventory !-- Bob s Bike Shop -- inventory xmlns= http://bobsbikes.com/ tire street /tire tire mountain /tire /inventory /parts Since the URLs are unique, we can associate our query with a URL and get only the tires belonging to that url: @doc = Nokogiri :: XML ( File . read ( parts.xml )) car_tires = @doc . xpath ( //car:tire , car = http://alicesautoparts.com/ ) # = [ tire all weather /tire , # tire studded /tire , # tire extra wide /tire ] bike_tires = @doc . xpath ( //bike:tire , bike = http://bobsbikes.com/ ) # = [ tire street /tire , tire mountain /tire ] To make this namespace registration a bit easier, nokogiri will automatically register any namespaces it finds on the root node for you . Nokogiri will associate the name in the declaration with the supplied URL. If we stick to this naming convention, we can shorten up our code. Let's take this atom feed for example: [atom.xml] ?xml version= 1.0 encoding= utf-8 ? feed xmlns= http://www.w3.org/2005/Atom title Example Feed /title link href= http://example.org/ / updated 2003-12-13T18:30:02Z /updated author name John Doe /name /author id urn:uuid:60a76c80-d399-11d9-b93C-0003939e0af6 /id entry title Atom-Powered Robots Run Amok /title link href= http://example.org/2003/12/13/atom03 / id urn:uuid:1225c695-cfb8-4ebb-aaaa-80da344efa6a /id updated 2003-12-13T18:30:02Z /updated summary Some text. /summary /entry /feed If we stick to the convention, we can grab all title tags like this @doc . xpath ( //xmlns:title ) # = [ title Example Feed /title , title Atom-Powered Robots Run Amok /title ] Don't be fooled though. You do not have to use XPath to get the benefits of namespaces. CSS selectors can be used as well. CSS just uses the pipe symbol to indicate a namespace search. Let's see the previous search rewritten to use CSS: @doc . css ( xmlns|title ) # = [ title Example Feed /title , title Atom-Powered Robots Run Amok /title ] When using CSS, if the namespace is called \"xmlns\", you can even omit the namespace name. That means your CSS will reduce to: @doc . css ( title ) # = [ title Example Feed /title , title Atom-Powered Robots Run Amok /title ] Dealing with namespaces is a broad topic. If you need more examples, be sure to check out this blog post or send an email to the mailing list , and we can help out.","title":"Namespaces"},{"location":"tutorials/searching_a_xml_html_document.html#but-im-lazy-and-dont-want-to-deal-with-namespaces","text":"Lazy == Efficient, so no judgements. :) If you have an XML document with namespaces, but would prefer to ignore them entirely (and query as if Tim Bray had never invented them), then you can call remove_namespaces! on an XML::Document to remove all namespaces. Of course, if the document had nodes with the same names but different namespaces, they will now be ambiguous. But you're lazy! You don't care!","title":"But I'm Lazy and Don't Want to Deal With Namespaces!"},{"location":"tutorials/searching_a_xml_html_document.html#slop-1","text":"Maybe you want a more interactive (read: sloppy) way to access nodes and attributes. If you like what XmlSimple does, then you'll probably like Nokogiri's Slop mode. 2 Slop mode allows you to violate the Law of Demeter with extreme prejudice, by using #method_missing to introspect on a node's child tags. 3 doc = Nokogiri :: Slop - EOXML employees employee status= active fullname Dean Martin /fullname /employee employee status= inactive fullname Jerry Lewis /fullname /employee /employees EOXML # navigate! doc . employees . employee . last . fullname . content # = Jerry Lewis # access node attributes! doc . employees . employee . first [ status ] # = active # use some xpath! doc . employees . employee ( [@status= active ] ) . fullname . content # = Dean Martin doc . employees . employee ( :xpath = @status= active ) . fullname . content # = Dean Martin # use some css! doc . employees . employee ( [status= active ] ) . fullname . content # = Dean Martin doc . employees . employee ( :css = [status= active ] ) . fullname . content # = Dean Martin Aww yeah. Can you feel the spirit of @jbarnette and @nakajima flowing through you? That's the power of the slop . 4 Don't use this. This may or may not be a backhanded compliment. No, really, don't use this. If you use it, don't report bugs. You've been warned!","title":"Slop 1"},{"location":"tutorials/security.html","text":"Security and Vulnerability Reporting The Nokogiri Core Contributors take security very seriously and investigate all reported vulnerabilities. If you would like to report a vulnerablity or have a security concern regarding Nokogiri or how Nokogiri is using any of its underlying platform-specific libraries (such as libxml2 or xerces), please report it via HackerOne . Your report will be acknowledged within 24 hours, and you'll receive a more detailed response within 72 hours indicating next steps in handling your report. If you have not received a reply to your submission within 48 hours, there are a few steps you can take: Contact the current security coordinator (Mike Dalessio ) Contact the core contributor mailing list ( ) Join the nokogiri-talk group Please note, the nokogiri-talk list is a public area. When escalating in that venue, please do not discuss your issue. Simply say that you're trying to get a hold of someone from the core team. The information you share with the Nokogiri Core Contributors as part of this process will be kept confidential within the team, unless or until we need to share information upstream with our dependent libraries' core teams, at which point we will notify you. If a vulnerability is first reported by you, we will credit you with the discovery in the public disclosure.","title":"Security and Vulnerability Reporting"},{"location":"tutorials/security.html#security-and-vulnerability-reporting","text":"The Nokogiri Core Contributors take security very seriously and investigate all reported vulnerabilities. If you would like to report a vulnerablity or have a security concern regarding Nokogiri or how Nokogiri is using any of its underlying platform-specific libraries (such as libxml2 or xerces), please report it via HackerOne . Your report will be acknowledged within 24 hours, and you'll receive a more detailed response within 72 hours indicating next steps in handling your report. If you have not received a reply to your submission within 48 hours, there are a few steps you can take: Contact the current security coordinator (Mike Dalessio ) Contact the core contributor mailing list ( ) Join the nokogiri-talk group Please note, the nokogiri-talk list is a public area. When escalating in that venue, please do not discuss your issue. Simply say that you're trying to get a hold of someone from the core team. The information you share with the Nokogiri Core Contributors as part of this process will be kept confidential within the team, unless or until we need to share information upstream with our dependent libraries' core teams, at which point we will notify you. If a vulnerability is first reported by you, we will credit you with the discovery in the public disclosure.","title":"Security and Vulnerability Reporting"}]}